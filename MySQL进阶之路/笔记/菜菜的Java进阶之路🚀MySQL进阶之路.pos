{"diagram":{"elements":{"leftChildren":[],"note":"","watermark":"","children":[{"parent":"root","lineStyle":{"randomLineColor":"#0D7C82"},"children":[{"parent":"66af1e3782f3","children":[{"parent":"93328ef616c6","image":{"w":41,"h":31,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65e1930516848c3099e4812f?e=1709285653&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:20NkGzi9-hJ6yWgfmIMVJfb3At8=","direction":"up"},"children":[{"parent":"d56ae2dd74fb","children":[],"id":"11db23ab7737ba5f","title":"组件: 连接器、分析器、优化器、执行器、缓存、存储引擎、日志系统、文件系统、备份工具"},{"parent":"d56ae2dd74fb","children":[{"parent":"29f9253b438a","children":[{"parent":"99348c28e6b4","children":[],"id":"99f6c1c82c28","title":"客户端携带用户信息请求服务端（TCP通信）"},{"parent":"99348c28e6b4","children":[],"id":"8c7c8fffef3f","title":"服务端使用线程处理认证请求"},{"parent":"99348c28e6b4","children":[],"id":"42500a6b8fe7","title":"服务端认证成功后等待客户端发送SQL"},{"parent":"99348c28e6b4","children":[],"id":"04f03050f0ef4374","title":"连接器池化技术复用连接"}],"collapsed":true,"id":"99348c28e6b4","title":"连接管理"},{"parent":"29f9253b438a","children":[{"parent":"a03935df3541","children":[{"parent":"debcf9c0308f","children":[],"id":"4fa4102aed0a","title":"缓存查询语句，不推荐代价大"}],"id":"debcf9c0308f","title":"查询缓存"},{"parent":"a03935df3541","children":[{"parent":"b69737bf9b4a","children":[],"id":"1a7ac9195e7f","title":"判断SQL语法是否有误"}],"id":"b69737bf9b4a","title":"（分析器）语法解析"},{"parent":"a03935df3541","children":[{"parent":"5f478752b71d","children":[],"id":"3c8da9b53002","title":"优化SQL语句，生成合适的查询计划"}],"id":"5f478752b71d","title":"（优化器）查询优化"},{"parent":"a03935df3541","children":[{"parent":"69757b0aeab1","children":[],"id":"051408715c96","title":"调用存储引擎层接口，将查到的数据与其他搜索条件匹配，匹配则放入结果集，待会一起返回给客户端"}],"id":"69757b0aeab1","title":"（执行器）执行查询计划"}],"collapsed":true,"id":"a03935df3541","title":"解析与优化"}],"collapsed":true,"id":"29f9253b438a","title":"server层"},{"parent":"d56ae2dd74fb","children":[{"parent":"ffe13655780c","children":[],"id":"a32314fd44ba","title":"server层调用存储引擎层提供的接口，真正由存储引擎来对文件进行读写"}],"collapsed":true,"id":"ffe13655780c","title":"存储引擎层"}],"collapsed":true,"id":"d56ae2dd74fb","title":"服务端结构"},{"parent":"93328ef616c6","image":{"w":34,"h":14,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65dd7c3db3ecff464b798f0c?e=1709017677&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:fR0neI0VmldFmk3PL64lQpiPi_s=","direction":"up"},"children":[{"parent":"052aad126420","children":[{"parent":"e3a060cc76eb","children":[{"parent":"10a6e8407f63","children":[],"id":"11d485290101","title":"表结构文件：定义表结构 表名.frm"},{"parent":"10a6e8407f63","children":[],"id":"01e88e01c217","title":"表空间文件：存放表中记录&nbsp; 表名.ibd"}],"id":"10a6e8407f63","title":"innodb数据目录（每创建一个数据库会在Data包下创建一个同名文件夹）"},{"parent":"e3a060cc76eb","children":[{"parent":"042d4da29f50","children":[],"id":"af73e8aa6bb2","title":"定义表结构 表名.frm"},{"parent":"042d4da29f50","children":[],"id":"7fefc0f733b1","title":"表的索引文件 表名.MYI"},{"parent":"042d4da29f50","children":[],"id":"3166a840ea1e","title":"表的数据文件 表名.MYD"}],"id":"042d4da29f50","title":"myisam数据目录"}],"collapsed":true,"id":"e3a060cc76eb","title":"MySQL数据目录"},{"parent":"052aad126420","children":[{"parent":"806f496e03da5cb6","children":[{"parent":"1344c995857c","children":[{"parent":"fa99ff43e315","children":[],"id":"ce52c2dc521e","title":"一个表数据文件（表名.ibd）对应一个独立表空间"},{"parent":"fa99ff43e315","children":[{"parent":"01e54dccea88","children":[],"id":"955ba441609e","title":"独立表由若干个区组成"}],"id":"01e54dccea88","title":"独立表结构"}],"id":"fa99ff43e315","title":"独立表空间"},{"parent":"1344c995857c","children":[{"parent":"c73c843d55c9","children":[],"id":"44e3875cce61","title":"与独立表空间类似，只不过是用来服务元数据（为了管理用户记录而引入的数据）的"}],"id":"c73c843d55c9","title":"系统表空间"}],"collapsed":true,"id":"1344c995857c","title":"表空间"},{"parent":"806f496e03da5cb6","children":[{"parent":"1381dc87ebd2","children":[],"id":"092019304680","title":"由若干零散页与区组成"},{"parent":"1381dc87ebd2","children":[],"id":"37c37158e139","title":"段是逻辑上的概念，一个索引对应叶子节点段和非叶子节点段"},{"parent":"1381dc87ebd2","children":[{"parent":"c777f09da607","children":[],"id":"c9f56384acae","title":"为了防止存储一点数据就直接使用一个区，所以先分配碎片区中的零散页"},{"parent":"c777f09da607","children":[],"id":"239f00435d29","title":"段使用32个碎片区页面后，开始用区分配"}],"collapsed":true,"id":"c777f09da607","title":"段的分配空间"},{"parent":"1381dc87ebd2","children":[{"parent":"25e5fa77eb9d","children":[{"parent":"1c6dab7b0dfa","children":[{"parent":"3ec31761c4e2","children":[],"id":"b2e71c1b287e","title":"如果有，就申请这个碎片区的页使用"},{"parent":"3ec31761c4e2","children":[],"id":"cd17b12e5838","title":"如果没有，则在FREE链表中获取一个空闲区，此时这个区状态变为空闲碎片区，加入FREE_FRAG链表（后面的段也是来这个碎片页，直到它没有空闲页，加入FULL_PRAG链表）"}],"id":"3ec31761c4e2","title":"查看表空间FREE_FRAG链表是否有剩余空闲页的碎片区"}],"id":"1c6dab7b0dfa","title":"数据少时"},{"parent":"25e5fa77eb9d","children":[{"parent":"57337312ff15","children":[],"id":"1d34d56258e1","title":"每次直接申请FREE链表中的空闲页，该页加入NOT_FULL链表，存满记录后放入FULL链表（后续也是重新申请空闲页的操作）"}],"id":"57337312ff15","title":"数据多时（占满32个碎片区的页）"}],"collapsed":true,"id":"25e5fa77eb9d","title":"段中插入数据过程"},{"parent":"1381dc87ebd2","image":{"w":36,"h":22,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65dd7d0d801f707879c2b961?e=1709017885&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:r31gOS9C0g1Pdy624cXVK8qtKOY=","direction":"up"},"children":[],"id":"8e919827b44e1e3b","title":"叶子节点段、非叶子节点段组成索引树"}],"collapsed":true,"id":"1381dc87ebd2","title":"段"},{"parent":"806f496e03da5cb6","children":[{"parent":"b2fe3c382564","children":[],"id":"fc754d83592a","title":"规定一个区由64个连续的页组成（64 * 16KB = 1 MB）"},{"parent":"b2fe3c382564","children":[{"parent":"bbe098daa412","children":[],"id":"bdf0b0fe8dd0","title":"范围查询时，会从第一条记录沿着单向链表一直扫描下去，扫描完该页后根据页与页之间的双向链表扫描下一个页（因为页与页直接用双向链表连接，要求它们在物理上可以不连续），这样就会出现随机IO"}],"id":"bbe098daa412","title":"为了解决大量随机IO，使用区来管理页"},{"parent":"b2fe3c382564","children":[{"parent":"3e50302ce7ff","children":[{"parent":"b1b93cb4c65a","children":[{"parent":"80d1ea481a41","children":[],"id":"f4cf2d112f43","title":"加入FREE链表"}],"id":"80d1ea481a41","title":"空闲的区&nbsp;"},{"parent":"b1b93cb4c65a","children":[{"parent":"56a66a386a63","children":[],"id":"2fae63a25d63","title":"加入FREE_FRAG链表"}],"id":"56a66a386a63","title":"有剩余空闲页面的碎片区"},{"parent":"b1b93cb4c65a","children":[{"parent":"1e121639a09a","children":[],"id":"b10b6dc906b8","title":"加入FULL_FRAG链表"}],"id":"1e121639a09a","title":"没空闲页面的碎片区"}],"collapsed":true,"id":"b1b93cb4c65a","title":"表空间管理的区"},{"parent":"3e50302ce7ff","children":[{"parent":"98f2a57c744e","children":[{"parent":"3ce57dc40377","children":[],"id":"d474d9ec8e2c","title":"加入FREE链表"}],"id":"3ce57dc40377","title":"同段空闲区"},{"parent":"98f2a57c744e","children":[{"parent":"8735814e2a1f","children":[],"id":"1c0792e4a778","title":"加入NOT_FULL链表"}],"id":"8735814e2a1f","title":"同段有空闲页的区"},{"parent":"98f2a57c744e","children":[{"parent":"ebdd807279ac","children":[],"id":"76ce7d6752ef","title":"加入FULL链表"}],"id":"ebdd807279ac","title":"同段无空闲页的区"}],"collapsed":true,"id":"98f2a57c744e","title":"附属某段的区"}],"collapsed":false,"id":"3e50302ce7ff","title":"区的类型"}],"collapsed":false,"id":"b2fe3c382564","title":"区"},{"parent":"806f496e03da5cb6","image":{"w":29,"h":24,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65dd7c9fa38b0a62879795a8?e=1709017775&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:7fLNs-15dFjAOXy5gYS73Z9IhfE=","direction":"up"},"children":[{"parent":"0b22a929e8c9","children":[],"id":"d94b4dde983c","title":"innodb索引页分为多个组，整个页的记录维护成一个排序的单向链表，每个组中最大值记录被槽指向（槽记录范围） 【infimum记录表示最小值，一个记录一组；supremum记录是最大值】<br>"},{"parent":"0b22a929e8c9","children":[],"id":"9810f85782db","title":"查找过程：使用二分法定位到对应的槽，再遍历单向链表寻找"},{"parent":"0b22a929e8c9","children":[],"id":"69d541b30c1a","title":"数据页是B+树的叶子节点，为了方便范围扫描，它们之间组成双向链表"}],"collapsed":true,"id":"0b22a929e8c9","title":"索引页（数据页）"},{"parent":"806f496e03da5cb6","children":[{"parent":"c0b64354656b","children":[{"parent":"dc2d57ef2cf6","children":[{"parent":"3e0f7eb755d5","children":[],"id":"f6c08f1e6adc","title":"查询：将磁盘数据加载到内存"},{"parent":"3e0f7eb755d5","children":[],"id":"46d2b02cf94a","title":"增删改：将内存数据写入磁盘"},{"parent":"3e0f7eb755d5","children":[],"id":"2fe6091c3359","title":"内存与磁盘交互的基本单位是页（磁盘-&gt;内存，内存-&gt;磁盘）"}],"id":"3e0f7eb755d5","title":"处理数据是在内存中"}],"id":"dc2d57ef2cf6","title":"Innodb页"},{"parent":"c0b64354656b","children":[{"parent":"6da2fe8e5c32","image":{"w":72,"h":16,"url":"http://cdn.processon.com/6151a80f1efad4243d3b788d?e=1632744991&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:mIv40VDUCJVEIn7G33zsE2Nqulg="},"children":[{"parent":"89e4da4f930f","children":[],"id":"f1d1668fa5b1","title":"逆序可变长字段列 + NULL标记（第几位列为NULL标记第几位为1） + 头信息（next指针、删除标识等） + 隐藏列（回滚指针、事务id、rowid） + 数据列"}],"id":"89e4da4f930f","title":"compact<br>"},{"parent":"6da2fe8e5c32","children":[{"parent":"6c3a52391382","children":[],"id":"ebfc3cfca2ad","title":"与compact相比，varchar为null时都不占空间；而char为null时占满空间"}],"id":"6c3a52391382","title":"redundant"},{"parent":"6da2fe8e5c32","children":[],"id":"1febfabcb13f","title":"溢出页：数据量太大，溢出的数据存储在溢出页中"},{"parent":"6da2fe8e5c32","children":[{"parent":"ef3680b3dc53","children":[],"id":"3fba9fef9c3a","title":"比compact与redundant在发生行溢出时，行记录中占用的空间更少，数据记录在溢出页中（记录更小意味着每页记录更多，查询相同记录时，IO开销更小）"}],"id":"ef3680b3dc53","title":"compressed、dynamic"},{"parent":"6da2fe8e5c32","children":[{"parent":"0c0118c4c208","children":[],"id":"2d91a410e153","title":"char直接分配n个字符的空间（无论真实数据写不写满都占用，没满的用空字符占用）；varchar只占用真实数据需要的空间，还会在行记录的额外信息中记录字符长度"},{"parent":"0c0118c4c208","children":[],"id":"c1bab0ccfeae","title":"char 上限255，varchar上限两个字节长度"},{"parent":"0c0118c4c208","children":[],"id":"2259e28ac305","title":"char 会截断末尾的空字符，varchar不会"},{"parent":"0c0118c4c208","children":[],"id":"8b6a9b098ce3","title":"char适合存储短，固定的字符串，字符没填充完时，时间（IO）空间开销大"},{"parent":"0c0118c4c208","children":[],"id":"ed92b6b10a6c","title":"char（n）表示字符长度，真正字节长度与字符集有关，有个最小长度~最大长度，存储也算可变长字符"},{"parent":"0c0118c4c208","children":[{"parent":"68859d67f6d3","children":[{"parent":"bcb42a9b7923","children":[],"id":"3c49dcbeb029","title":"查询时char减少了字符长度判断，如果char有很多字符未填充，相比于varchar会造成空间浪费，导致查询相同量数据的IO开销更大"}],"id":"bcb42a9b7923","title":"查询"},{"parent":"68859d67f6d3","children":[{"parent":"84d611719958","children":[],"id":"cb0e826d26d3","title":"修改时，char可以就地修改，varchar空间变化了就要先删除再添加"}],"id":"84d611719958","title":"修改"}],"id":"68859d67f6d3","title":"效率分析"}],"collapsed":true,"id":"0c0118c4c208","title":"char(n)与varchar(n)区别"}],"id":"6da2fe8e5c32","title":"Innodb行"}],"collapsed":true,"id":"c0b64354656b","title":"记录存储结构"}],"collapsed":true,"id":"806f496e03da5cb6","title":"存储"}],"collapsed":true,"id":"052aad126420","title":"空间结构"},{"parent":"93328ef616c6","image":{"w":47,"h":31,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca06021db3620e31b4e3e?e=1706864240&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Q1hGqkllCavqbwsVPNhsV1fV41Y=","direction":"up"},"children":[{"parent":"7a0758d7ac18","children":[{"parent":"134a97bd997b5f41","children":[],"id":"dc819f6c255a","title":"MySQL服务器启动时，向OS申请一块内存当作缓冲池，读数据时，从磁盘加载到缓冲区"}],"collapsed":true,"id":"134a97bd997b5f41","title":"作用"},{"parent":"7a0758d7ac18","children":[{"parent":"7f74af21d033c72c","children":[],"id":"44d64b772eff","title":"缓冲池 -&gt; 缓冲池实例 -&gt; chunk（控制块、缓存页、碎片）"},{"parent":"7f74af21d033c72c","children":[{"parent":"9357bc41bc91","children":[],"id":"a02ab1b62b3b","title":"访问缓冲池的线程会加锁，如果并发量大，只有一个缓冲池，开销会很大，使用分段锁的思想：将一个缓冲池分为多个实例，每个实例相当于有一把锁（页hash到实例）"},{"parent":"9357bc41bc91","children":[],"id":"48ffafbdd38a","title":"实例不是越多越好，管理实例有开销"},{"parent":"9357bc41bc91","children":[],"id":"6609b32f9e2a","title":"innodb_buffer_pool_instances 修改实例个数"}],"collapsed":false,"id":"9357bc41bc91","title":"缓冲池实例"},{"parent":"7f74af21d033c72c","children":[{"parent":"e24d1da60009","children":[],"id":"92104bf01710","title":"运行时缓冲池向OS申请空间，要把旧缓冲池复制到新缓冲池开销大，于是使用chunk，申请空间以chunk为单位（chunk由控制块，缓冲页，碎片组成）"},{"parent":"e24d1da60009","children":[],"id":"e07d128e2796","title":"一个缓冲池由一个或多个实例组成，实例由若干个chunk组成"},{"parent":"e24d1da60009","children":[],"id":"41e6266a4898","title":"<span class=\"md-plain\" style=\"box-sizing:border-box;\">规定</span><span class=\"md-pair-s\" style=\"box-sizing:border-box;\">innodb_buffer_pool_size</span><span class=\"md-plain\" style=\"box-sizing:border-box;\">必须是</span><span class=\"md-pair-s\" style=\"box-sizing:border-box;\">innodb_buffer_pool_instanes和</span><span class=\"md-pair-s\" style=\"box-sizing:border-box;\">innodb_buffer_pool_chunk_size</span><span class=\"md-plain\" style=\"box-sizing:border-box;\">的倍数</span>"},{"parent":"e24d1da60009","children":[{"parent":"08b9d2844282","children":[],"id":"32f434947c1f","title":"缓冲页：一个缓冲页对应一个数据页"},{"parent":"08b9d2844282","children":[],"id":"e5ba759cd2ad","title":"控制块：一个控制块对应一个缓冲页，记录缓冲页是否free空闲，是否flush（被写过，写过要等一定时机，写回磁盘）"},{"parent":"08b9d2844282","children":[],"id":"d524f36b7c98","title":"碎片: 分配完缓冲页和控制块后，如果还有剩余空间就是碎片"}],"id":"08b9d2844282","title":"chunk的组成<br>"}],"collapsed":false,"id":"e24d1da60009","title":"chunk"}],"collapsed":true,"id":"7f74af21d033c72c","title":"结构组成"},{"parent":"7a0758d7ac18","children":[{"parent":"31ea107c6b7c8ed2","children":[{"parent":"b6e5a3f924b3848b","children":[],"id":"71ea4e0e82bc6e88","title":"空闲"},{"parent":"b6e5a3f924b3848b","children":[],"id":"a5bd76332b2b9886","title":"被使用的数据页"},{"parent":"b6e5a3f924b3848b","children":[],"id":"39665e946443776b","title":"脏页：被写但未刷入磁盘"}],"collapsed":true,"id":"b6e5a3f924b3848b","title":"缓存页种类"},{"parent":"31ea107c6b7c8ed2","image":{"w":42,"h":18,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca06f8273dc120894fec4?e=1706864255&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:NJ8f7dpx_FHMjyUMcVIjCT3tB7w=","direction":"up"},"children":[{"parent":"67b5b7c8abd4c175","children":[],"id":"482657be7534","title":"free链表：由空闲的缓冲页对应的控制块组成的free链表"},{"parent":"67b5b7c8abd4c175","children":[],"id":"ba063912cce1","title":"flush链表：由脏的缓冲页（被写了，但未写入磁盘）对应控制块组成的flush链表"},{"parent":"67b5b7c8abd4c175","children":[{"parent":"3f8f1b85af65","children":[],"id":"b8e007d008a0","title":"最近最少使用算法"},{"parent":"3f8f1b85af65","children":[{"parent":"178059db5076","children":[],"id":"01f4f25b1e03","title":"如果要加载的页不在缓冲池，从free链表拿一个页进行加载（修改控制块），对应控制块放到LRU链表头部"},{"parent":"178059db5076","children":[],"id":"8ea54a7f38ca","title":"如果要加载的页在缓冲池，将控制块移动到LRU链表头部"},{"parent":"178059db5076","children":[],"id":"fded691986ef","title":"常用的页在LRU链表头部，不常用的页在LRU链表尾部"}],"collapsed":true,"id":"178059db5076","title":"传统LRU"},{"parent":"3f8f1b85af65","children":[{"parent":"8af766cec96c","children":[{"parent":"55cdc836f1bb","children":[],"id":"93e04c70a158","title":"innodb认为执行当前请求可能会用到后面某些也于是把它们预先读取到缓冲池上"},{"parent":"55cdc836f1bb","children":[],"id":"3e47a580e65e","title":"线性预读&nbsp;:&nbsp;如果顺序读取某个区的页面超过`innodb_read_ahead_threshold`（56）会异步读取下一个区的所有页面到缓冲池"}],"id":"55cdc836f1bb","title":"预读"},{"parent":"8af766cec96c","children":[{"parent":"e1950c164340","children":[],"id":"a1f735c6c96a","title":"预读加载到缓冲池的页可能用不到"},{"parent":"e1950c164340","children":[],"id":"48e5029fb947","title":"全表扫描时可能会把缓冲池所有缓冲页换掉，降低缓存命中"}],"id":"e1950c164340","title":"预读带来的问题"},{"parent":"8af766cec96c","children":[{"parent":"086e44f85f95","children":[],"id":"2be75e15c79a","title":"innodb_old_blocks_pct 规定old区域占比（37%）"},{"parent":"086e44f85f95","children":[],"id":"5ceb80c6774b","title":"初次访问页时，将页对应控制块放到old区头部"},{"parent":"086e44f85f95","children":[],"id":"c1ccc1916ec2","title":"全表扫描可能多次访问同一页，所以在规定时间（innodb_old_blocks_time：1000ms）内多次访问某页，不会把它对应控制块放到young区头部"}],"id":"086e44f85f95","title":"将LRU分为热数据（young），冷数据（old）两个区"}],"collapsed":true,"id":"8af766cec96c","title":"分区LRU"},{"parent":"3f8f1b85af65","children":[{"parent":"367a5797bb60","children":[],"id":"b6dabc437f20","title":"如果页对应控制块就在young头部附近还将它移动到头部，开销大，规定在1/4头部时不移动"}],"id":"367a5797bb60","title":"进一步优化LRU"},{"parent":"3f8f1b85af65","children":[{"parent":"a3e22de01d83f4eb","children":[],"id":"6c00386417d77d5b","title":"初次访问页时，将页对应控制块放到old区头部，innodb_old_blocks_pct&nbsp;规定old区域占比（37%）"},{"parent":"a3e22de01d83f4eb","children":[],"id":"e5c8a81549944c6b","title":"全表扫描可能多次访问同一页，所以在规定时间（innodb_old_blocks_time：1000ms）内多次访问某页，不会把它对应控制块放到young区头部"},{"parent":"a3e22de01d83f4eb","children":[],"id":"9d0aa5d43a3b0823","title":"如果页对应控制块就在young头部附近就不移动（规定在1/4）"}],"collapsed":true,"id":"a3e22de01d83f4eb","title":"总结"}],"collapsed":true,"id":"3f8f1b85af65","title":"LRU链表：被使用的数据页&nbsp;"}],"collapsed":true,"id":"67b5b7c8abd4c175","title":"链表管理缓冲页"}],"collapsed":true,"id":"31ea107c6b7c8ed2","title":"内部管理"},{"parent":"7a0758d7ac18","children":[{"parent":"181fbac48eac22fa","children":[{"parent":"88c396930d2b","children":[],"id":"a0b43d4bce50","title":"为了快速定位缓冲页，建立缓冲池哈希索引（K：表空间号+页号 V:控制块地址）"}],"collapsed":true,"id":"88c396930d2b","title":"查看页是否被缓存（是否在缓冲池中）"},{"parent":"181fbac48eac22fa","children":[{"parent":"995674fcce29","children":[],"id":"7738903b886e","title":"后台线程每段时间异步刷新脏页到磁盘"},{"parent":"995674fcce29","children":[{"parent":"67580e566170","children":[],"id":"866dcfcf85bd","title":"扫描LRU尾部，如果有脏页就刷新到磁盘"},{"parent":"67580e566170","children":[],"id":"58a5962bec8a","title":"扫描flush链表，将部分脏页刷新到磁盘"}],"id":"67580e566170","title":"主动"},{"parent":"995674fcce29","children":[{"parent":"3779245c71d7","children":[],"id":"b81f456d2e6b","title":"缓冲池没有页可以用了且old区尾部是脏页，将old区尾部脏页（一个页）写入磁盘，会影响用户线程"},{"parent":"3779245c71d7","children":[],"id":"fba0cff8b9d627a6","title":"redo log buffer已满，触发checkpoint刷盘"}],"id":"3779245c71d7","title":"被动"}],"collapsed":true,"id":"995674fcce29","title":"刷新脏页到磁盘"}],"id":"181fbac48eac22fa","title":"其他相关"}],"collapsed":true,"id":"7a0758d7ac18","title":"innodb缓冲池结构"}],"collapsed":true,"id":"93328ef616c6","title":"结构"},{"parent":"66af1e3782f3","children":[{"parent":"61d38ebf463e","children":[{"parent":"3f5490d019f04564","children":[],"id":"5dd4a5390b865538","title":"建立TCP连接，加密连接采用SSL握手"},{"parent":"3f5490d019f04564","children":[],"id":"a7c9c05df203e16e","title":"半双工通信（同时只能一向发送/接收）"},{"parent":"3f5490d019f04564","children":[],"id":"48e21bea580079f9","title":"连接池管理，线程复用，即使断开连接也不会销毁线程，只是抹除session会话信息"},{"parent":"3f5490d019f04564","children":[],"id":"c9ccb189c4e5840d","title":"查询 mysql.user 表 验证授权"}],"collapsed":true,"id":"3f5490d019f04564","title":"建立连接"},{"parent":"61d38ebf463e","image":{"w":37,"h":21,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65e1936f5a4fe6084bac441b?e=1709285759&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:70Z5dzFxjse_azbTwAeO026k4wo=","direction":"up"},"children":[{"parent":"e9b6a9f338b5","children":[],"id":"289d9fdebcd1","title":"接收查询语句"},{"parent":"e9b6a9f338b5","children":[],"id":"d13df7a50d1559b4","title":"缓存处理 查询"},{"parent":"e9b6a9f338b5","children":[],"id":"ec95e2cb08ee","title":"分析器：分析语句语法"},{"parent":"e9b6a9f338b5","children":[],"id":"9fe5b4e1c8f4","title":"优化器：优化SQL，根据索引选择不同执行方案，计算成本，生成它认为最优的执行计划"},{"parent":"e9b6a9f338b5","children":[],"id":"32e938a8ec44","title":"执行器：根据执行计划调用存储引擎层接口，查到的记录再与其他搜索条件比较成功放入结果集，继续调用存储引擎的接口取下一条记录"}],"collapsed":true,"id":"e9b6a9f338b5","title":"查询流程"},{"parent":"61d38ebf463e","image":{"w":54,"h":24,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65e19389b7540b4e78c7f554?e=1709285786&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:n2kQQtsp1VbRSQxOCMlRb8OO-eI=","direction":"up"},"children":[{"parent":"81e68a6cd100","children":[{"parent":"e7aee596311edc3a","children":[],"id":"d3e86ba161b26595","title":"接收语句"},{"parent":"e7aee596311edc3a","children":[],"id":"d4223040fac83133","title":"缓存处理 删除"},{"parent":"e7aee596311edc3a","children":[],"id":"60660fd0e58c2ef2","title":"分析器：分析语句语法"},{"parent":"e7aee596311edc3a","children":[],"id":"93c5503d7d51c2cd","title":"优化器：优化SQL，根据索引选择不同执行方案，计算成本，生成它认为最优的执行计划"}],"id":"e7aee596311edc3a","title":"前面流程类似"},{"parent":"81e68a6cd100","children":[{"parent":"364f96bd6e05","children":[],"id":"933dfdffa9cd89c2","title":"如果在则修改数据，后续刷入磁盘（checkpoint）"},{"parent":"364f96bd6e05","children":[],"id":"d8995ba4b69985fe","title":"如果不在则需要先将数据页加载到缓冲池再处理或者使用change buffer优化&nbsp;"}],"id":"364f96bd6e05","title":"判断数据页是否在缓冲池"},{"parent":"81e68a6cd100","children":[{"parent":"50941d0d799544a9","children":[{"parent":"fef4c3080033","children":[],"id":"32cadd9a57f8","title":"3.1 redo log write&nbsp;"},{"parent":"fef4c3080033","children":[],"id":"be2a13a28bca","title":"3.2 binlog write"},{"parent":"fef4c3080033","children":[],"id":"6eb6f7de9ebe","title":"3.3 redolog fsync"},{"parent":"fef4c3080033","children":[],"id":"8420f3ae0c5e","title":"3.4 binlog fsync"},{"parent":"fef4c3080033","children":[],"id":"4cbdb582b3c8","title":"3.5 redolog commit"}],"id":"fef4c3080033","title":"两阶段提交"}],"id":"50941d0d799544a9","title":"在此期间会记录一些日志如undo log 和 redo log 、 binlog的两阶段提交等"}],"collapsed":true,"id":"81e68a6cd100","title":"修改流程"}],"collapsed":true,"id":"61d38ebf463e","title":"流程"},{"parent":"66af1e3782f3","children":[{"parent":"9bf817727d0b3961","children":[{"parent":"c1ab3d6c96f17457","children":[],"id":"a3b026587dc4567c","title":"在增、删、改时，如果记录所在页在缓冲池中则立即修改，在磁盘时可以先缓存，等到下次用到了再一起修改"},{"parent":"c1ab3d6c96f17457","children":[],"id":"4bc23d955f5c837b","title":"为了避免随机IO且只能发生在二级索引上，唯一二级索引需要先加载到缓冲池"}],"id":"c1ab3d6c96f17457","title":"change buffer 性能提升"},{"parent":"9bf817727d0b3961","children":[{"parent":"7fa997732ce8595b","children":[],"id":"eef4e5718be113a0","title":"由来：由于redolog恢复需要页的完整性，如果脏页刷入磁盘宕机（随机IO）宕机将不完整"},{"parent":"7fa997732ce8595b","children":[],"id":"f91fb6e605001d45","title":"先将脏页写入两次写缓冲池，再从两次写缓冲池顺序IO写入磁盘保证页完整，最后再将缓冲池的页随机IO写入磁盘"}],"id":"7fa997732ce8595b","title":"double write 高可靠（页完整）"},{"parent":"9bf817727d0b3961","children":[{"parent":"040f0aeb4d0aad9a","children":[],"id":"d358b684eba26e42","title":"缓冲池加载连续n个页后尝试把后续可能要加载的页也加载进来"}],"id":"040f0aeb4d0aad9a","title":"预读"},{"parent":"9bf817727d0b3961","children":[{"parent":"4da63bbc7090102e","children":[],"id":"590d57cafb7a1dc6","title":"为B+树索引的热点记录建立哈希索引"}],"id":"4da63bbc7090102e","title":"自适应哈希索引"}],"collapsed":true,"id":"9bf817727d0b3961","title":"innofb特性"}],"collapsed":true,"id":"66af1e3782f3","title":"结构流程篇"},{"parent":"root","lineStyle":{"randomLineColor":"#DD489D"},"children":[{"parent":"a885b8a0d1315ebe","children":[{"parent":"6d5d05cc799b","children":[{"parent":"2e83bfd86952","children":[{"parent":"98550f6012be","children":[],"id":"c8e9de00a5a7","title":"叶子节点是索引页（存储用户记录）"},{"parent":"98550f6012be","image":{"w":54,"h":31,"url":"http://cdn.processon.com/6151ae7a5653bb6791d9120f?e=1632746634&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:bGW-53zTuj9YuzgfVxNryKm8WQs="},"children":[],"id":"7d2d6528fed2","title":"非叶子节点是目录项记录页，该页的目录项记录分别对应下层的索引页（多个目录项记录间按照对应下层索引页的最小值进行排序）<br>"},{"parent":"98550f6012be","children":[],"id":"838c04b93d4f","title":"索引同一级的非叶子节点（目录项记录页）组成双向链表"},{"parent":"98550f6012be","children":[],"id":"90f1753e0c69","title":"索引的叶子节点间组成双向链表"},{"parent":"98550f6012be","children":[],"id":"2900ff973be4","title":"索引节点（页）中的记录组成单向链表"}],"collapsed":true,"id":"98550f6012be","title":"特点"},{"parent":"2e83bfd86952","children":[{"parent":"c4c56661b71b","children":[{"parent":"687f26267dec","children":[],"id":"d7fa61952ed9","title":"根据主键值排序，每条记录有对应所有数据"},{"parent":"687f26267dec","children":[{"parent":"4e006eff8c7a","children":[],"id":"6f6d5f4376b6","title":"1. 定位目录项记录所在的页"},{"parent":"4e006eff8c7a","children":[],"id":"3123b8c691d4","title":"2. 定位目标记录所在的页"},{"parent":"4e006eff8c7a","children":[],"id":"714eab3b5828","title":"3. 定位目标记录所在的组"},{"parent":"4e006eff8c7a","children":[],"id":"d4fe5d00ab75","title":"4. 遍历组中记录"},{"parent":"4e006eff8c7a","children":[],"id":"6961c7a4e532","title":"因为记录根据主键排序，定位可以使用二分法"}],"id":"4e006eff8c7a","title":"定位过程（搜索条件为主键）"}],"id":"687f26267dec","title":"聚簇索引"},{"parent":"c4c56661b71b","children":[{"parent":"909a831ebd2f","children":[],"id":"348603523884","title":"根据设置的索引列排序，每条记录只有索引列和主键"},{"parent":"909a831ebd2f","children":[{"parent":"5c2a7aa591ea","children":[],"id":"6d11f2f0ce8a","title":"与聚簇索引类似，只不过找到记录后，拿到主键值去回表（查聚簇索引拿到完整信息）"}],"id":"5c2a7aa591ea","title":"定位过程（搜索条件为索引列）"}],"id":"909a831ebd2f","title":"二级索引"},{"parent":"c4c56661b71b","children":[{"parent":"3b197cb180ae","children":[],"id":"9128855f0e39","title":"根据设置的多个索引列按照顺序（只有当前面那个索引列相等时才对后面那个索引列排序）排序，每条记录只有多个索引列和主键"},{"parent":"3b197cb180ae","children":[],"id":"188ed4b9949e","title":"定位过程（与二级索引类似）"}],"id":"3b197cb180ae","title":"联合索引"}],"collapsed":true,"id":"c4c56661b71b","title":"索引分类"},{"parent":"2e83bfd86952","children":[{"parent":"45087eeea584","children":[],"id":"e5079de9c625","title":"初始：根节点没有目录项记录页（非叶子节点）和用户记录页（叶子节点）"},{"parent":"45087eeea584","children":[],"id":"6b12e30855d0","title":"插入记录：记录插到（根节点）用户记录页中"},{"parent":"45087eeea584","children":[],"id":"24d83914a0c6","title":"根节点用户记录页满时：将数据复制到A页，页分裂得到另一个B页，根节点升级为目录项记录页，将A，B页的目录项记录插入根节点"}],"id":"45087eeea584","title":"B+树形成过程"},{"parent":"2e83bfd86952","children":[],"id":"ea83417d163a","title":"myisam文件分为索引文件和数据文件，每次查找索引文件拿到行号后还要查数据文件（相对于回表）"},{"parent":"2e83bfd86952","children":[{"parent":"c672d40932c2","children":[],"id":"e751a3947fa4","title":"添加二级索引 alter table 表名 add index 索引名（索引列）"},{"parent":"c672d40932c2","children":[],"id":"77250329b5e8","title":"添加唯一二级索引 alter table 表名 add unique 索引名（索引列）"},{"parent":"c672d40932c2","children":[],"id":"7b9ddfbe5101","title":"删除索引（包括唯一二级索引） alter table 表名 drop index 索引名"}],"collapsed":true,"id":"c672d40932c2","title":"SQL语句"}],"collapsed":true,"id":"2e83bfd86952","title":"B+树索引"},{"parent":"6d5d05cc799b","children":[{"parent":"9972ba04bf76","children":[{"parent":"665193977927","children":[{"parent":"9e312a8da765","children":[],"id":"2e244db589fb","title":"常量级别，不允许索引列为NULL"},{"parent":"9e312a8da765","image":{"w":29,"h":22,"url":"http://cdn.processon.com/615302495653bb6791dc3997?e=1632833625&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:yqcUzCPSocbzsTfpIioEWyetBwc="},"children":[],"id":"53f5114252fa","title":"使用聚簇索引+搜索条件是与常数等值比较（一条记录）"},{"parent":"9e312a8da765","image":{"w":27,"h":22,"url":"http://cdn.processon.com/61530261e0b34d091230decb?e=1632833650&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:GcHR2FEDAKiaRY5dOHPZGlJprZ8="},"children":[],"id":"58866c2df638","title":"使用唯一二级索引+搜索条件是与常数等值比较（一条记录，相比于聚簇索引可能多了一步回表操作）"}],"collapsed":true,"id":"9e312a8da765","title":"const"},{"parent":"665193977927","children":[{"parent":"6fdb179a1990","children":[],"id":"04dfdd916879","title":"生成单点扫描区间"},{"parent":"6fdb179a1990","image":{"w":45,"h":35,"url":"http://cdn.processon.com/6153032b5653bb6791dc3b73?e=1632833851&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:6jEAvE6dWD-acXOaqivBnesZ7PE="},"children":[],"id":"bc0fd6db5285","title":"使用二级索引+搜索条件是与常数等值比较（因为不是唯一二级索引，所以可能有多条记录）【注意：图片中应该是每扫描到一条记录就回表找出这条记录完整信息】"}],"collapsed":false,"id":"6fdb179a1990","title":"ref"},{"parent":"665193977927","children":[{"parent":"ecb6967695a4","children":[],"id":"8bfffcc1130c","title":"在ref的基础上，索引列可以是null"},{"parent":"ecb6967695a4","image":{"w":51,"h":38,"url":"http://cdn.processon.com/615303b41efad4243d3e74fb?e=1632833988&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:69ANCt0S_I4mi6Oa6rFm8cCRk2Q="},"children":[],"id":"da2812e9b655","title":"使用二级索引+搜索条件是与常数等值比较或是null 【注意：图片中应该是每扫描到一条记录就回表找出这条记录完整信息】"}],"collapsed":true,"id":"ecb6967695a4","title":"ref_or_null"},{"parent":"665193977927","children":[{"parent":"46dce190a0d0","children":[],"id":"a3eb0c548b28","title":"生成多个单点扫描区间或范围扫描区间"},{"parent":"46dce190a0d0","children":[{"parent":"f48edb2f80e4","children":[],"id":"eea752944573","title":"where k1 in (1,2)"},{"parent":"f48edb2f80e4","children":[],"id":"974e772245fe","title":"where k1 &gt; 1"}],"id":"f48edb2f80e4","title":"使用二级索引+搜索条件是in或&lt;,&gt;&nbsp;"}],"collapsed":false,"id":"46dce190a0d0","title":"range"},{"parent":"665193977927","children":[{"parent":"7c4908b8a703","children":[],"id":"6c6261c76653","title":"扫描全部二级索引，查询的列是索引列（不用回表）"},{"parent":"7c4908b8a703","children":[],"id":"3b9d74019950","title":"全表扫描 + ORDER BY 主键 也被认为是index"}],"collapsed":false,"id":"7c4908b8a703","title":"index"},{"parent":"665193977927","children":[{"parent":"f0f3525424e0","children":[],"id":"dee4dd1f46b7","title":"扫描全部聚簇索引（全表扫描）"}],"collapsed":false,"id":"f0f3525424e0","title":"all"},{"parent":"665193977927","children":[{"parent":"8147327c9a09","children":[],"id":"77d3ae76397a","title":"每次使用二级索引/联合索引扫描到第一条符合搜索条件的记录时，先回表拿到完整记录信息再返回给server层判断其他搜索条件是否成立，成立则返回给客户端（因为记录是在二级索引上查找到的，它们的主键值是无序的，可能产生大量随机IO）"},{"parent":"8147327c9a09","children":[{"parent":"57bcaba35247","children":[],"id":"2d19dbe796fd","title":"将部分二级索引找到的记录，对主键值进行排序，然后再回表（优化随机IO）"},{"parent":"57bcaba35247","children":[],"id":"5e296c9052b4","title":"使用的前提条件苛刻"}],"id":"57bcaba35247","title":"MRR（多范围读取）的优化"}],"collapsed":true,"id":"8147327c9a09","title":"二级索引与回表操作"}],"collapsed":true,"id":"665193977927","title":"为单个索引生成扫描区间"},{"parent":"9972ba04bf76","children":[{"parent":"b2175111db41","children":[{"parent":"02299b4710b4","children":[],"id":"aa8c3d0a4e30","title":"每个索引中要查找的二级索引记录按照主键值排序（也就是说索引列必须等值比较，主键值才会排序）"},{"parent":"02299b4710b4","children":[{"parent":"259ed3643ccd","children":[],"id":"61e4d8d58ef1","title":"减少随机IO"},{"parent":"259ed3643ccd","children":[],"id":"6a4145b8b360","title":"主键值有序方便寻找交集并集"}],"id":"259ed3643ccd","title":"主键值排序的好处"}],"id":"02299b4710b4","title":"索引合并的前提"},{"parent":"b2175111db41","children":[{"parent":"6986ac707e2f","children":[{"parent":"7e50d50abbe5","children":[{"parent":"c4ea008e2567","children":[],"id":"fdd025cba246","title":"1. 先使用索引k1,找到k1为a的记录"},{"parent":"c4ea008e2567","children":[],"id":"f81c5b64bbb6","title":"2. 再使用索引k2,找到k2为b的记录"},{"parent":"c4ea008e2567","children":[],"id":"cf7fdc45f6ab","title":"3. 将这些记录的主键作交集过滤再回表"}],"id":"c4ea008e2567","title":"过程"}],"id":"7e50d50abbe5","title":"where k1 = 'a' and k2 = 'b' (二级索引：k1,k2)"},{"parent":"6986ac707e2f","children":[{"parent":"d61db96abaeb","children":[{"parent":"43dd32040742","children":[],"id":"7da28fce8533","title":"1. 生成聚簇索引的扫描范围 [1,+∞]"},{"parent":"43dd32040742","children":[],"id":"ba1036f05036","title":"2. 生成二级索引扫描范围并将聚簇索引扫描范围合并进来 [(a,1),(a,＋∞)]&nbsp; （在二级索引中扫描到第一条k1为a,id为1的记录然后一直扫描到k1不为a）"}],"id":"43dd32040742","title":"过程"}],"id":"d61db96abaeb","title":"当有聚簇索引时 where id &gt;= 1 and k1 = 'a' (二级索引: k1 ,聚簇索引： id)"},{"parent":"6986ac707e2f","children":[{"parent":"fa9d31f0e40e","children":[],"id":"c94de17c5e84","title":"如果是联合索引，那么需要索引列按照顺序等值比较，主键值才会排序"}],"id":"fa9d31f0e40e","title":"注意"},{"parent":"6986ac707e2f","children":[],"id":"b536992d2a20","title":"使用场景: 查询数据多，使用交集过滤，减少回表开销"}],"id":"6986ac707e2f","title":"intersection索引合并（and）"},{"parent":"b2175111db41","children":[{"parent":"c319f1a91c61","children":[],"id":"07eab6c408d5","title":"where&nbsp;k1&nbsp;=&nbsp;'a'&nbsp;or k2&nbsp;=&nbsp;'b'&nbsp;(二级索引：k1,k2)"},{"parent":"c319f1a91c61","children":[{"parent":"f62b44d31e69","children":[],"id":"546914a7a555","title":"1. 先使用索引k1,找到k1为a的记录"},{"parent":"f62b44d31e69","children":[],"id":"69c120748e83","title":"2. 再使用索引k2,找到k2为b的记录"},{"parent":"f62b44d31e69","children":[],"id":"e8740e7cbde6","title":"3. 将这些记录的主键作并集过滤再回表"}],"id":"f62b44d31e69","title":"过程"},{"parent":"c319f1a91c61","children":[],"id":"2d7b4d5ae9ec","title":"使用场景：查询数据多，使用并集过滤，减少回表开销"}],"id":"c319f1a91c61","title":"Union索引合并（or）"},{"parent":"b2175111db41","children":[{"parent":"1369af0fffa1","children":[],"id":"68f8ce29b655","title":"sort_union不需要满足索引合并前提"},{"parent":"1369af0fffa1","children":[{"parent":"b8d6cea7f001","children":[{"parent":"b7bbb72abe5b","children":[],"id":"69753a99471a","title":"使用二级索引k1，找到记录后对主键值进行排序"},{"parent":"b7bbb72abe5b","children":[],"id":"060804ac077b","title":"使用二级索引k2，找到记录后对主键值进行排序"},{"parent":"b7bbb72abe5b","children":[],"id":"5db549c07507","title":"将这些数据使用union方式，找到并集过滤再回表"}],"id":"b7bbb72abe5b","title":"过程"}],"id":"b8d6cea7f001","title":"where k1 &lt; 'a' or k2 &gt; 'b'&nbsp;(二级索引：k1,k2)"},{"parent":"1369af0fffa1","children":[],"id":"231a01c08627","title":"使用场景：查询数据少，对主键排序开销小"}],"id":"1369af0fffa1","title":"Sort_Union索引合并（or + sort）"}],"collapsed":true,"id":"b2175111db41","title":"为多个索引生成扫描区间（index_merge&nbsp;索引合并）"}],"collapsed":true,"id":"9972ba04bf76","title":"单表访问方法"},{"parent":"6d5d05cc799b","children":[{"parent":"c10f5dbf3541","children":[],"id":"cab2fd26813d","title":"explain 查询语句"},{"parent":"c10f5dbf3541","children":[{"parent":"95bd9e603b3f","children":[],"id":"45ebab10d482","title":"table:&nbsp;对应查询记录中的表名(查询可能包含多个表)"},{"parent":"95bd9e603b3f","children":[],"id":"96cddd6ce361","title":"id&nbsp;: 每个select语句对应一个唯一id（in子查询半连接可能导致2个select对应一个id，临时表id为null）"},{"parent":"95bd9e603b3f","note":"- simple: **不包含`union`或子查询的查询**都是simple\n- primary: **包含`union`或`union all`或子查询的大查询语句中,最外层的查询**\n- UNION： **包含`union`或`union all`或子查询的大查询语句中,里层的查询**\n\t- `explain SELECT * FROM acl_role as a1 union select * from acl_role as a2`\n\t- 查询a1就是primary类型\n\t- 查询a2就是union类型\n- UNION  RESULT： **使用临时表完成`UNION`的去重工作**\n- SUBQUERY： **不转为半连接的不相关子查询采用物化来执行**\n- DEPENDENT SUBQUERY: **不能转为半连接的子查询被转换为相关子查询**\n- DEPENDENT UNION： **包含`union`或`union all`大查询语句中,内部查询都依赖外层查询**\n- MATERIALIZED : **将子查询物化后与外层进行连接查询**","children":[],"id":"f13798554379","title":"select_type 查询类型"},{"parent":"95bd9e603b3f","note":"- system: 表中只有一条记录且统计数据是精确的(innodb统计数据不精确)\n- const: **主键或唯一二级索引列与常数进行等值比较**\n- eq_ref: **连接查询时,被驱动表通过主键或不允许存储NULL的唯一二级索引进行等值比较**\n- ref: **普通二级索引(不允许值为NULL)与常量进行等值比较**\n- fulltext: 全文索引\n- `ref_or_null`: **普通二级索引运行值为NULL与常量进行等值比较**\n- index_merge: **使用intersection,union,sort-union索引合并时**\n- unique_subquery: **将in 子查询转为 exists 子查询后使用主键或(不允许为NULL的)唯一二级索引**\n- index_subquery: **将in 子查询转为 exists 子查询后使用普通索引**\n- range: **使用索引获取多个单点扫描区间或一个范围区间**\n- index: **使用索引覆盖扫描全部记录,不用回表**\n- all: **全表扫描**","children":[],"id":"f0ca45186f4e","title":"<span class=\"md-plain md-expand\" style=\"box-sizing:border-box; color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">type: </span><span class=\"md-pair-s md-expand\" style=\"box-sizing:border-box; color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\"><strong><span class=\"md-plain\" style=\"box-sizing:border-box;\">访问表时的访问方法</span></strong></span>"},{"parent":"95bd9e603b3f","children":[],"id":"53b41a348940","title":"possible_keys:&nbsp;可能用到的索引"},{"parent":"95bd9e603b3f","children":[],"id":"66728d270537","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">key: 实际用到的索引</span>"},{"parent":"95bd9e603b3f","children":[],"id":"6459b1a57f5e","title":"key_len: key_len&nbsp;=&nbsp;该列实际数据占最多存储空间长度&nbsp;+&nbsp;1(允许为NULL)&nbsp;+&nbsp;2(列类型可变长)"},{"parent":"95bd9e603b3f","children":[],"id":"7d642b06ad69","title":"ref&nbsp;: 与索引列进行等值匹配的对象是什么(其他列,常数 const,函数 func)"},{"parent":"95bd9e603b3f","children":[],"id":"55a04e80b9e2","title":"rows: 预计扫描记录"},{"parent":"95bd9e603b3f","children":[],"id":"fa17bee410fc","title":"filtered: filtered=x&nbsp;:&nbsp;rows中有百分之x满足其他搜索条件（扇出预估值 = rows&nbsp;*&nbsp;filtered）"},{"parent":"95bd9e603b3f","note":"- no tables uses: 没用from子句\n- impossible where : where子句永远为false\n- no matching min/max row: 查询列表有聚集函数min,max但是没记录符合搜索条件\n- using index: 使用索引覆盖，不用回表\n- using index condition: 使用索引条件下推（在二级索引找到记录时比较搜索条件，尝试筛选掉，减少回表）\n- using where: 搜索条件不能在索引上判断要去server层判断\n- using join buffer: 使用基于块的嵌套循环算法执行连接查询\n\t- 不能使用索引加快访问速度时,创建join buffer加快查询速度\n- using intersect,using union,using sort_union:使用索引合并\n- zero line : limit 0 读不出记录时\n- using filesort: 根据索引已经排好的结果集记录进行排序\n- using temporary: 使用到了内部临时表\n\t- `group by,distinct,union`无法使用索引时大概率会用临时表\n- start temporary(半连接驱动表),end temporary（半连接被驱动表）: in子查询转换为半连接然后使用duplicate weedout(使用临时表根据结果集id去重)\n- loosescan: in子查询转换为半连接然后使用loosescan（松散扫描:子查询的表作驱动表时,取键值相同记录的第一条记录去匹配(不会发生重复)）\n- firstmatch: in子查询转换为半连接然后使用firstmatch(原始方法: 重复取一条外层查询记录然后去子查询表中匹配记录)","children":[],"id":"9c1c7f223367","title":"extra:&nbsp;额外信息<br>"}],"id":"95bd9e603b3f","title":"执行计划每列作用"},{"parent":"c10f5dbf3541","children":[{"parent":"931d571011b0","children":[],"id":"bb4dad0c3dc4","title":"生成最低成本的json格式查询计划"}],"id":"931d571011b0","title":"explain format=json 查询语句"},{"parent":"c10f5dbf3541","children":[{"parent":"c3bf757652bb","children":[],"id":"2ec9fc5a128d","title":"1.开启 set&nbsp;optimizer_trace='enabled=on';"},{"parent":"c3bf757652bb","children":[],"id":"548908c3d2af","title":"2. 执行查询语句"},{"parent":"c3bf757652bb","children":[],"id":"ca056b7f7355","title":"3. 上一步查询语句的所有执行方案存在这个表中 select&nbsp;*&nbsp;from&nbsp;information_schema.OPTIMIZER_TRACE\\G;"},{"parent":"c3bf757652bb","children":[],"id":"3d43d013d4f6","title":"4. 关闭 set optimizer_trace='enabled=off';"}],"id":"c3bf757652bb","title":"optimizer trace 查看所有执行方案（默认不开启）"}],"collapsed":true,"id":"c10f5dbf3541","title":"explain详解"},{"parent":"6d5d05cc799b","children":[{"parent":"9a54b50600bb","children":[{"parent":"366df1ea28f9","children":[{"parent":"76248a8f4acc","children":[],"id":"271a33b3aad2","title":"空间上，每创建一个索引，每个索引对应着大量的页"},{"parent":"76248a8f4acc","children":[{"parent":"531210799049","children":[],"id":"d946658dc6c0","title":"在查询时生成查询计划（根据搜索条件使用不同的索引，多套方案）的成本会增加"},{"parent":"531210799049","children":[],"id":"db61b1d9967c","title":"增删操作，可能产生页分裂，页合并，需要维护索引"}],"id":"531210799049","title":"时间上"}],"id":"76248a8f4acc","title":"索引的代价"},{"parent":"366df1ea28f9","children":[{"parent":"53e52b5eef6a","children":[],"id":"6d711120271e","title":"使用二级索引或联合索引时，根据排序的索引列找到相应记录，要想获取完整记录信息需要根据主键值回表，而主键值是无序的，这可能产生大量的随机IO"},{"parent":"53e52b5eef6a","children":[],"id":"a048d2afd3d3","title":"回表多时，随机IO代价可能比全表扫描聚簇索引代价还大；可以使用limit限制记录数，争取少回表"}],"id":"53e52b5eef6a","title":"回表的代价"}],"collapsed":true,"id":"366df1ea28f9","title":"代价"},{"parent":"9a54b50600bb","children":[{"parent":"22c0a550d589","children":[{"parent":"703be4084e82","children":[],"id":"a60bbc9472ab","title":"不回表"},{"parent":"703be4084e82","children":[],"id":"dd73bd865e67","title":"count(*) 时使用二级索引 减少IO开销"}],"id":"703be4084e82","title":"覆盖索引"},{"parent":"22c0a550d589","children":[{"parent":"faf326539c0f","children":[{"parent":"1711f1ef67a5","image":{"w":43,"h":27,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-653877b8453e465981e60345?e=1698203080&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:2tNKB683IQgrBp32rsusuCZt4hE=","direction":"up"},"children":[],"id":"f12ca58535d1","title":"查询时，server层调用存储引擎层，存储引擎在二级索引中找到第一条满足条件的记录，然后回表，交给server层"}],"id":"1711f1ef67a5","title":"使用ICP前"},{"parent":"faf326539c0f","children":[{"parent":"d759aaa6eedf","image":{"w":57,"h":36,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-653877c2631b352735206974?e=1698203090&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:clpa-AzvfUv-Tqt9gdg8ornR_2o=","direction":"up"},"children":[],"id":"fede0ca521b4","title":"存储引擎在二级索引中找到第一条满足条件的记录后，尝试根据这个索引列（可能是联合索引）能不能匹配上其他的搜索条件，匹配不上就筛选掉，不回表"}],"id":"d759aaa6eedf","title":"使用ICP后"}],"id":"faf326539c0f","title":"索引条件下推（ICP）"},{"parent":"22c0a550d589","children":[{"parent":"adde780cc30b","children":[],"id":"2805e9b5e730","title":"使用缓冲区对要回表的主键值进行排序，使用顺序IO，避免随机IO"}],"id":"adde780cc30b","title":"multi range read MRR"},{"parent":"22c0a550d589","children":[{"parent":"c01866fbb1f45d06","children":[],"id":"8f5d6b3235354c13","title":"and"},{"parent":"c01866fbb1f45d06","children":[],"id":"e86e7f0d30798e40","title":"or"},{"parent":"c01866fbb1f45d06","children":[],"id":"4a64ca59bb5f4096","title":"or sort"}],"id":"c01866fbb1f45d06","title":"索引合并"},{"parent":"22c0a550d589","children":[],"id":"5996f51521d7d8c4","title":"跳跃扫描"}],"collapsed":false,"id":"22c0a550d589","title":"优化措施"},{"parent":"9a54b50600bb","children":[{"parent":"5e8a0022734b","children":[],"id":"83860093f012","title":"表达式导致索引失效"},{"parent":"5e8a0022734b","children":[{"parent":"c3b33b9462f5","children":[],"id":"d6fe079e9bb5","title":"字符串-&gt;数字"},{"parent":"c3b33b9462f5","children":[],"id":"4915dbedcf2a","title":"低级字符集-&gt;高级字符集"}],"id":"c3b33b9462f5","title":"使用函数/隐式使用函数 导致索引失效"},{"parent":"5e8a0022734b","children":[{"parent":"68a6d7cdad02","children":[{"parent":"eb52e13990b8","children":[],"id":"2c1167e56c8b","title":"标记唯一值的估计数量，太多值重复可能导致回表太多，不偏向使用索引"},{"parent":"eb52e13990b8","children":[],"id":"d7289dbd15f2","title":"空闲时使用analyze table 重新统计cardinality"}],"id":"eb52e13990b8","title":"cardinality太小导致不能使用索引"},{"parent":"68a6d7cdad02","children":[],"id":"6f95cac82886","title":"使用is null ，is not null"},{"parent":"68a6d7cdad02","children":[{"parent":"633efc62ca0a04a5","children":[],"id":"e85891ee57ac7405","title":"limit&nbsp;10000,10&nbsp;会在server层将前10000舍弃，取到最后10条"},{"parent":"633efc62ca0a04a5","children":[{"parent":"bdbf88666bb4872b","children":[{"parent":"1efd1156943e06f6","children":[],"id":"c3d969c2ac10c751","title":"<br>回表：select&nbsp;SQL_NO_CACHE&nbsp;*&nbsp;from&nbsp;student&nbsp;where&nbsp;age&nbsp;=&nbsp;18&nbsp;limit&nbsp;5000,10;"},{"parent":"1efd1156943e06f6","children":[],"id":"f89223223716f933","title":"<br>不回表：select&nbsp;SQL_NO_CACHE&nbsp;id,age,student_name&nbsp;from&nbsp;student&nbsp;where&nbsp;age&nbsp;=&nbsp;18&nbsp;limit&nbsp;5000,10;"}],"collapsed":true,"id":"1efd1156943e06f6","title":"覆盖索引不回表优化"},{"parent":"bdbf88666bb4872b","children":[{"parent":"42806cc0450c53b9","children":[{"parent":"000ca934effee3db","children":[],"id":"1831843255eb2a7e","title":"通过上一次查询到最大值得到本次查询条件"},{"parent":"000ca934effee3db","children":[],"id":"2d73ef6e797fa2d8","title":"主键需要有序，满足查询条件时如果主键无序需要排序"}],"id":"000ca934effee3db","title":"使用前提"},{"parent":"42806cc0450c53b9","children":[{"parent":"8d400a67267642e9","children":[],"id":"047be394ea5e00a5","title":"有序&nbsp;select&nbsp;*&nbsp;from&nbsp;seat&nbsp;where&nbsp;seat_code&nbsp;=&nbsp;'caicaiseat'&nbsp;and&nbsp;seat_id&nbsp;&gt;&nbsp;上次查询最大记录&nbsp;limit&nbsp;10;"},{"parent":"8d400a67267642e9","children":[],"id":"2272fa0a909cfb44","title":"无序&nbsp;select&nbsp;SQL_NO_CACHE&nbsp;*&nbsp;from&nbsp;student&nbsp;where&nbsp;age&nbsp;=&nbsp;18&nbsp;and&nbsp;id&nbsp;&gt;&nbsp;上次查询最大记录&nbsp;order&nbsp;by&nbsp;id&nbsp;limit&nbsp;10;"}],"id":"8d400a67267642e9","title":"案例"}],"collapsed":true,"id":"42806cc0450c53b9","title":"游标分页"},{"parent":"bdbf88666bb4872b","children":[{"parent":"c93f4f38adc8586d","children":[{"parent":"1d1f5f0972b0f596","children":[],"id":"7d10628550a502d1","title":"通过使用二级索引查出第一条起点"},{"parent":"1d1f5f0972b0f596","children":[],"id":"bec5d5dc9d81a581","title":"满足查询条件时主键需要有序"}],"id":"1d1f5f0972b0f596","title":"使用前提"},{"parent":"c93f4f38adc8586d","children":[{"parent":"79788ad8afabd140","children":[],"id":"b6ac7b555907327e","title":"select&nbsp;*&nbsp;from&nbsp;seat&nbsp;where&nbsp;seat_code&nbsp;=&nbsp;'caicaiseat'<br>and&nbsp;seat_id&nbsp;&gt;=&nbsp;(select&nbsp;seat_id&nbsp;from&nbsp;seat&nbsp;where&nbsp;seat_code&nbsp;=&nbsp;'caicaiseat'&nbsp;limit&nbsp;100000,1)&nbsp;<br>limit&nbsp;10;"}],"id":"79788ad8afabd140","title":"案例"}],"collapsed":true,"id":"c93f4f38adc8586d","title":"子查询定位"},{"parent":"bdbf88666bb4872b","children":[{"parent":"345eaba77231b267","children":[],"id":"e03d37a1297bdea0","title":"在子查询的基础上，如果主键无序使用，in进行关联"},{"parent":"345eaba77231b267","children":[],"id":"ddf5d3ef6767e49c","title":"select&nbsp;SQL_NO_CACHE&nbsp;*&nbsp;from&nbsp;student&nbsp;where&nbsp;age&nbsp;=&nbsp;18&nbsp;<br>and&nbsp;id&nbsp;in&nbsp;(select&nbsp;id&nbsp;from&nbsp;(select&nbsp;id&nbsp;from&nbsp;student&nbsp;where&nbsp;age&nbsp;=&nbsp;18&nbsp;limit&nbsp;5000,10)&nbsp;tmp);"}],"collapsed":false,"id":"345eaba77231b267","title":"in + 子查询"},{"parent":"bdbf88666bb4872b","children":[{"parent":"c6e3b2abb127a4d2","note":"","children":[],"id":"19ae10ad4dd1e65d","title":"另一个表使用二级索引 + 子查询查出id集合"},{"parent":"c6e3b2abb127a4d2","children":[],"id":"20d5c06d54eb2712","title":"select&nbsp;SQL_NO_CACHE&nbsp;*&nbsp;from&nbsp;student&nbsp;s&nbsp;<br>inner&nbsp;join&nbsp;(select&nbsp;id&nbsp;tmp_id&nbsp;from&nbsp;student&nbsp;where&nbsp;age&nbsp;=&nbsp;18&nbsp;limit&nbsp;5000,10)&nbsp;tmp<br>on&nbsp;s.id&nbsp;=&nbsp;tmp_id"}],"collapsed":false,"id":"c6e3b2abb127a4d2","title":"联表查询 + 子查询"}],"id":"bdbf88666bb4872b","title":"解决方案"},{"parent":"633efc62ca0a04a5","children":[{"parent":"e15f916acfe701dc","children":[],"id":"d0f06923a8392d65","title":"业务上可以直接使用覆盖索引，不回表那就使用覆盖索引"},{"parent":"e15f916acfe701dc","children":[],"id":"1254c5f2166ffb69","title":"满足查询条件后主键有序 + 滑动分页的场景使用游标分页"},{"parent":"e15f916acfe701dc","children":[],"id":"20d696a9c452940c","title":"满足查询条件后主键有序 + 需要跳页的场景使用子查询定位"},{"parent":"e15f916acfe701dc","children":[],"id":"2a1bbf97210e456e","title":"满足查询条件后主键无序的场景使用in 或 联表"}],"id":"e15f916acfe701dc","title":"使用场景"}],"id":"633efc62ca0a04a5","title":"深分页问题"}],"collapsed":true,"id":"68a6d7cdad02","title":"回表数量太多导致不偏向使用索引"}],"collapsed":false,"id":"5e8a0022734b","title":"索引失效"},{"parent":"9a54b50600bb","children":[{"parent":"f3a6512e8bcc","children":[{"parent":"4ae9b97f3f69","children":[],"id":"5b8a5cc0f6e4","title":"为常用于order，group by，where 子句的列创建索引"},{"parent":"4ae9b97f3f69","children":[{"parent":"063d0dbfca57","children":[],"id":"8a1d1027424a","title":"优点: 方便查询长字符串"},{"parent":"063d0dbfca57","children":[],"id":"c6688a9e91b4","title":"缺点: 不能对排序的查询使用该索引"}],"id":"063d0dbfca57","title":"为列前缀创建索引"},{"parent":"4ae9b97f3f69","children":[{"parent":"90af8513057b","children":[],"id":"350b561787b2","title":"比如性别列，要么男要么女，回表的代价比较大"}],"id":"90af8513057b","title":"考虑索引列中不重复值个数，cardinality值太小不偏向使用索引"}],"collapsed":true,"id":"4ae9b97f3f69","title":"创建索引"},{"parent":"f3a6512e8bcc","children":[{"parent":"36cd165414d9","children":[{"parent":"6700f30710eb","children":[],"id":"728944af83f7","title":"强制使用索引 force index"},{"parent":"6700f30710eb","children":[],"id":"ea945d2f7cd5","title":"如果是cardinality导致不使用索引可以空闲时使用analyze table重新统计"}],"id":"6700f30710eb","title":"优化器使用错索引"},{"parent":"36cd165414d9","children":[],"id":"a13bbaaf1098","title":"插入记录时，最好升序插入，否则容易发生页分裂"},{"parent":"36cd165414d9","children":[{"parent":"8194180bb445","children":[],"id":"73d5832b09f8","title":"索引列和主键值占空间小，每页就可以存放更多记录，减少IO"}],"id":"8194180bb445","title":"索引列和主键值类型尽量小"},{"parent":"36cd165414d9","children":[],"id":"700633713ab0","title":"写SQL语句时，尽量使用覆盖索引（不用回表）"},{"parent":"36cd165414d9","children":[],"id":"5c846f3c32c3","title":"让索引列在搜索条件中单独出现（不要复合操作，比如 k1*10 &lt; 10 这样不会使用索引）"},{"parent":"36cd165414d9","children":[{"parent":"690d8e4f2f7d","children":[],"id":"ab1bc05ddcd8","title":"索引的时间，空间开销都很大"}],"id":"690d8e4f2f7d","title":"避免重复，冗余索引"}],"collapsed":true,"id":"36cd165414d9","title":"良好习惯"}],"id":"f3a6512e8bcc","title":"更好的使用索引"}],"collapsed":true,"id":"9a54b50600bb","title":"索引的使用"}],"collapsed":false,"id":"6d5d05cc799b","title":"索引"},{"parent":"a885b8a0d1315ebe","children":[{"parent":"82e0ccfc2eb4","children":[{"parent":"12a6bbe0338b","children":[{"parent":"c61ab95d5d3b","children":[],"id":"05c4e62ce227","title":"存到内存，断电即失"},{"parent":"c61ab95d5d3b","children":[{"parent":"d52043edaa07","children":[],"id":"2a8c0fc2a5d2","title":"innodb_table_stats:关于表的统计数据,一条记录对应一个表的统计数据"},{"parent":"d52043edaa07","children":[],"id":"9c45875d5007","title":"innodb_index_stats:关于索引的统计数据,一条记录对应一个索引的统计数据"}],"id":"d52043edaa07","title":"存到磁盘，永久性"}],"collapsed":true,"id":"c61ab95d5d3b","title":"数据的存储方式"},{"parent":"12a6bbe0338b","children":[{"parent":"656d49d8baf1","children":[{"parent":"2ab292dc8bcd","children":[],"id":"f451c1b4032c","title":"innodb_stats_auto_recalc`默认开启"},{"parent":"2ab292dc8bcd","children":[],"id":"d3d97fb2479e","title":"修改超过10% 异步更新数据"}],"id":"2ab292dc8bcd","title":"自动"},{"parent":"656d49d8baf1","children":[{"parent":"85c969b737e3","children":[],"id":"84c9cfe197e4","title":"analyze&nbsp;table&nbsp;表名"},{"parent":"85c969b737e3","children":[],"id":"07941e2da076","title":"立即同步更新数据"}],"id":"85c969b737e3","title":"手动"}],"collapsed":true,"id":"656d49d8baf1","title":"定期更新统计数据"},{"parent":"12a6bbe0338b","children":[{"parent":"f51618491e4b","note":"- `nulls_equal`（默认）:NULL值为重复值 (平均重复值多,倾向于不用索引访问)\n- `nulls_unequal`:NULL值独立,不为重复值 (平均重复值少,倾向于用索引访问)\n- `nulls_ignored`:忽略NULL","children":[],"id":"7db19a3f4bf3","title":"在统计某个索引列中不重复值时如何对待NULL值"}],"id":"f51618491e4b","title":"innodb_stats_method"}],"collapsed":true,"id":"12a6bbe0338b","title":"统计数据的收集"},{"parent":"82e0ccfc2eb4","children":[{"parent":"2638a99381fe","children":[{"parent":"1ef7cf1372cf","children":[{"parent":"1149369059eb","children":[],"id":"6910e9ae5ae2","title":"读取并检测一条记录是否满足搜索条件（0.2），对结果集排序等操作损耗的时间"}],"id":"1149369059eb","title":"CPU成本"},{"parent":"1ef7cf1372cf","children":[{"parent":"1b787cae7a40","children":[],"id":"caf8cc7bac8f","title":"将数据从磁盘加载到内存损耗时间（1页1.0）"}],"id":"1b787cae7a40","title":"IO成本"}],"collapsed":true,"id":"1ef7cf1372cf","title":"成本"},{"parent":"2638a99381fe","children":[{"parent":"96c1865b1a32","children":[{"parent":"6e080c21efb8","children":[],"id":"0de4ee12a026","title":"1. 查询优化器根据查询SQL语句找出所有可能使用索引的方案"},{"parent":"6e080c21efb8","children":[],"id":"31beb4a9ebf7","title":"2. 计算全表扫描的代价"},{"parent":"6e080c21efb8","children":[],"id":"8f1e33e98eac","title":"3. 计算使用索引方案的代价"},{"parent":"6e080c21efb8","children":[],"id":"a912660b2e7f","title":"4. 选择代价最低的方案，生成执行计划"}],"id":"6e080c21efb8","title":"寻找最低成本步骤"},{"parent":"96c1865b1a32","children":[{"parent":"cf5af4ef206d","children":[{"parent":"86b9ab4d9614","children":[],"id":"5f6d35374cb4","title":"表中记录数Rows * 0.2"}],"id":"86b9ab4d9614","title":"CPU成本"},{"parent":"cf5af4ef206d","children":[{"parent":"6015915048fa","children":[],"id":"f529448a60fb","title":"页数 * 1.0"}],"id":"6015915048fa","title":"IO成本"}],"id":"cf5af4ef206d","title":"全表扫描代价"},{"parent":"96c1865b1a32","children":[{"parent":"c8b20a0cba92","children":[{"parent":"aa571dba0534","children":[],"id":"d3327d28e23e","title":"直接访问索引对应B+树计算出某个扫描区间的二级索引记录数（先找到最左，右记录，再通过目录项记录页确定扫描区间记录数）"},{"parent":"aa571dba0534","children":[{"parent":"016f748522ea","children":[],"id":"4d09fd8fb0c9","title":"二级索引扫描区间中的记录数 * 0.2 + 回表记录数 * 0.2"}],"id":"016f748522ea","title":"CPU成本"},{"parent":"aa571dba0534","children":[{"parent":"85f0faa0d53b","children":[],"id":"37039e061182","title":"扫描区间数 * 1.0 + 二级索引扫描区间记录数 * 1.0（回表，随机IO）"}],"id":"85f0faa0d53b","title":"IO成本"}],"id":"aa571dba0534","title":"index div"},{"parent":"c8b20a0cba92","children":[{"parent":"75ef76492bef","children":[],"id":"988cba94650c","title":"扫描区间记录数&nbsp;=&nbsp;扫描区间数&nbsp;*&nbsp;平均重复次数（Rows/Cardinality）"},{"parent":"75ef76492bef","children":[],"id":"b6b6688922e2","title":"简单计算，误差大"}],"id":"75ef76492bef","title":"index statistics 索引统计数据"},{"parent":"c8b20a0cba92","children":[],"id":"7f96d88807f5","title":"扫描区间的记录数少于eq_range_index_dive_limit（200）用index div；否则使用统计数据"}],"id":"c8b20a0cba92","title":"使用索引代价"}],"collapsed":true,"id":"96c1865b1a32","title":"单表查询成本"},{"parent":"2638a99381fe","children":[{"parent":"6dbecfa9bcf5","children":[],"id":"b44377cd7544","title":"添加过滤 condition filter"},{"parent":"6dbecfa9bcf5","children":[],"id":"b1a82dd4b613","title":"连接查询成本 = 单次访问驱动表成本 + 驱动表扇出 * 单次访问被驱动表成本"},{"parent":"6dbecfa9bcf5","children":[{"parent":"33218bfe09f7","children":[],"id":"3b41b882a41d","title":"选择最低访问方法"}],"id":"33218bfe09f7","title":"外连接"},{"parent":"6dbecfa9bcf5","children":[{"parent":"f6fb9fac6e41","children":[],"id":"b0186b4f334d","title":"选择最低访问方法"},{"parent":"f6fb9fac6e41","children":[],"id":"f84c57835ba0","title":"考虑驱动表与被驱动表的最优顺序"}],"id":"f6fb9fac6e41","title":"内连接"}],"collapsed":true,"id":"6dbecfa9bcf5","title":"连接查询成本"},{"parent":"2638a99381fe","children":[{"parent":"069cf391d575","children":[{"parent":"5ff0eacc0255","children":[],"id":"5eb06a8c2a6e","title":"select&nbsp;*&nbsp;from&nbsp;mysql.server_cost"}],"id":"5ff0eacc0255","title":"mysql.server_cost表"},{"parent":"069cf391d575","children":[{"parent":"b470e0ecc842","children":[],"id":"6ee0d6e17034","title":"select&nbsp;*&nbsp;from&nbsp;mysql.engine_cost\\G"}],"id":"b470e0ecc842","title":"mysql.engine_cost表"}],"collapsed":true,"id":"069cf391d575","title":"成本常数"}],"collapsed":true,"id":"2638a99381fe","title":"基于成本的优化"},{"parent":"82e0ccfc2eb4","children":[{"parent":"4720ab05768a","children":[{"parent":"17ddd86d1f51","image":{"w":43,"h":17,"url":"http://cdn.processon.com/6153124b1e08533a03fac1bd?e=1632837724&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:C9H0Fq5c9EuvFr7HMDpG5StEGFY="},"children":[],"id":"91e9e038d622","title":"两个表连接产生记录是笛卡尔积"}],"collapsed":true,"id":"17ddd86d1f51","title":"连接简介"},{"parent":"4720ab05768a","children":[{"parent":"ac4d37ebea88","children":[],"id":"7d3ef1b3a5dc","title":"驱动表：联表查询中的第一个表"},{"parent":"ac4d37ebea88","children":[],"id":"2d250312e851","title":"被驱动表：联表查询中的第二个表"},{"parent":"ac4d37ebea88","children":[{"parent":"37a3339bbda7","children":[],"id":"344358b78ab8","title":"根据驱动表中查出的记录再去被驱动表中查询"},{"parent":"37a3339bbda7","image":{"w":73,"h":28,"url":"http://cdn.processon.com/615312aa1efad4243d3e9509?e=1632837818&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:B5P1EkbXWxcpPwDXUHnhjpMLBr8="},"children":[{"parent":"9d0005d72ebc","children":[],"id":"9ee80d904987","title":"selecte&nbsp;*&nbsp;from&nbsp;t1,t2&nbsp;where&nbsp;t1.m1&nbsp;&gt;&nbsp;1&nbsp;and&nbsp;t1.m1&nbsp;=&nbsp;t2.m2&nbsp;and&nbsp;t2.n2&nbsp;&lt;&nbsp;'d'"},{"parent":"9d0005d72ebc","children":[],"id":"64938d4f7cc6","title":"1. 先在驱动表查出 m1 &gt; 1的记录"},{"parent":"9d0005d72ebc","children":[],"id":"44fa5248178b","title":"2. 根据1中的记录将t2.m2=t1.m1 转为具体值 （比如：t2.m2=2）"},{"parent":"9d0005d72ebc","children":[],"id":"d15f767c9e86","title":"3. 根据2中转换具体值条件与其他搜索条件（t2.m2=2 and t2.n2 &lt; 'd'） 在被驱动表中查找记录"},{"parent":"9d0005d72ebc","children":[],"id":"ca973c7ed339","title":"注意：每在驱动表中查找到一条记录就去被驱动表中查找（访问驱动表一次，可能访问被驱动表多次，与驱动表记录结果集有关）"}],"id":"9d0005d72ebc","title":"过程"}],"id":"37a3339bbda7","title":"连接查询（联表查询）"}],"collapsed":true,"id":"ac4d37ebea88","title":"连接过程"},{"parent":"4720ab05768a","children":[{"parent":"18aa5d7af99b","children":[{"parent":"318d0c338acb","children":[],"id":"095bdf35d3f4","title":"在驱动表中的记录即使在被驱动表中没匹配到也会被加入结果集（未匹配到记录被驱动表中的列使用NULL填充）"},{"parent":"318d0c338acb","image":{"w":43,"h":27,"url":"http://cdn.processon.com/615314050e3e74663e8fb67b?e=1632838165&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:pUMQjsOAx6RCe7iEC8p83WZiHXI="},"children":[{"parent":"045d8ab30ae4","children":[],"id":"7a36237967f5","title":"驱动表 left join 被驱动表 on 连接条件"}],"id":"045d8ab30ae4","title":"左外连接：左边是驱动表"},{"parent":"318d0c338acb","image":{"w":41,"h":21,"url":"http://cdn.processon.com/615313ed1e08533a03fac482?e=1632838141&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:JgNknZsbcofLRf5RCBOMScFTAhQ="},"children":[{"parent":"53dc2dc726bc","children":[],"id":"2155ee4bee72","title":"被驱动表 right join 驱动表 on 连接条件"}],"id":"53dc2dc726bc","title":"右外连接： 右边是驱动表"}],"id":"318d0c338acb","title":"外连接"},{"parent":"18aa5d7af99b","children":[{"parent":"10da025b6a08","image":{"w":47,"h":27,"url":"http://cdn.processon.com/615314bf0791295710ae1722?e=1632838351&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:cLrmUGgU9dB-XMcfT6Y-rKnebXs="},"children":[{"parent":"9d6d6f84ea0b","children":[],"id":"f838c8996710","title":"驱动表 inner join 被驱动表"}],"id":"9d6d6f84ea0b","title":"驱动表记录在被驱动表中未查到，就不会加入结果集（两表交集）"}],"id":"10da025b6a08","title":"内连接"},{"parent":"18aa5d7af99b","children":[],"id":"6ffeffaa784e","title":"注意： 连接条件 on 是针对外连接中在驱动表中查到记录没在被驱动表匹配是否应该把驱动表记录加入结果集提出的，所以内连接中使用on与where 一样"}],"collapsed":true,"id":"18aa5d7af99b","title":"内连接和外连接"},{"parent":"4720ab05768a","children":[{"parent":"45defe6b1254","children":[{"parent":"1bbec705c6d4","image":{"w":40,"h":22,"url":"http://cdn.processon.com/6153155f5653bb6791dc6169?e=1632838512&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:2ByT6kIDt8CXdfEVIH6GsvjRwG8="},"children":[],"id":"48eaf41c0909","title":"访问一次驱动表，访问多次被驱动表（取决于驱动表结果集）【每在驱动表中访问到一条记录就要去访问一次被驱动表】"},{"parent":"1bbec705c6d4","children":[],"id":"8207e0362935","title":"嵌套访问，如果有多层嵌套，时间复杂度就是指数型的，非常大"}],"id":"1bbec705c6d4","title":"嵌套循环连接"},{"parent":"45defe6b1254","children":[{"parent":"5611f473a47c","children":[],"id":"cd79d2a1822e","title":"因为查询驱动表和被驱动表的过程使用单表访问方法，所以可以使用索引加快查询"},{"parent":"5611f473a47c","children":[],"id":"ed4a7d4d07e4","title":"在查询列表中不要使用*，尽量写查询列，可能查询列正好满足索引列，这样就不用回表，使用单表访问方法index"},{"parent":"5611f473a47c","children":[],"id":"105d88350a54","title":"为适当的常用被驱动表创建索引，加快连接"}],"id":"5611f473a47c","title":"使用索引加快连接"},{"parent":"45defe6b1254","children":[{"parent":"649d4b696110","children":[],"id":"e7ac2e9ff6cd","title":"如果不能使用索引访问，而使用全表扫描；并且如果表非常大，扫描到后面没有内存了，就需要释放前面的表占用的内存；而被驱动表又要被多次访问，这会产生大量IO"},{"parent":"649d4b696110","children":[{"parent":"1c2570043513","children":[],"id":"1d4246606caf","title":"1. 扫描前申请一块固定的内存join buffer"},{"parent":"1c2570043513","children":[],"id":"0a8d702ae979","title":"2. 将驱动表记录放入join buffer"},{"parent":"1c2570043513","children":[],"id":"0b32dfefbfc3","title":"3. 在访问被驱动表时，将join buffer中每条记录与被驱动表记录进行匹配"}],"id":"1c2570043513","title":"join buffer可以解决上面这种场景"},{"parent":"649d4b696110","children":[],"id":"ee81d20483cc","title":"如果说join buffer够大，完全可以只访问一次被驱动表"},{"parent":"649d4b696110","children":[],"id":"9bea31f3bcde","title":"join buffer 只存储查询列表和搜索条件中的列，所以查询列表不要使用*，会占用join buffer的空间"}],"id":"649d4b696110","title":"基于块的嵌套循环连接"}],"collapsed":true,"id":"45defe6b1254","title":"连接原理"},{"parent":"4720ab05768a","children":[{"parent":"b5a1be4c949f","children":[],"id":"7093dc125743","title":"被驱动表可能被访问多次，适当为它建立索引"},{"parent":"b5a1be4c949f","children":[],"id":"b1bec30475a6","title":"不能使用索引加快时，适当加大join_buffer_size大小"},{"parent":"b5a1be4c949f","children":[],"id":"0749a71d4d92","title":"不要在查询列表中使用*，这可能导致无法使用Index或占用join buffer更多空间"}],"collapsed":false,"id":"b5a1be4c949f","title":"总结"}],"collapsed":true,"id":"4720ab05768a","title":"连接的原理"},{"parent":"82e0ccfc2eb4","children":[{"parent":"011e0487d68b","children":[{"parent":"68e632ea7601","children":[{"parent":"d88d93b2f301","children":[],"id":"cf05611a4c97","title":"`select&nbsp;*&nbsp;from&nbsp;(t1,(t2,t3))`&nbsp;=&gt;&nbsp;`select&nbsp;*&nbsp;from&nbsp;t1,t2,t3`"}],"id":"d88d93b2f301","title":"移除不必要括号"},{"parent":"68e632ea7601","children":[{"parent":"d8c025ef87b4","children":[],"id":"d1538f14f078","title":"`where&nbsp;a=5&nbsp;and&nbsp;b&gt;a`&nbsp;=&gt;&nbsp;&nbsp;`where&nbsp;a=5&nbsp;and&nbsp;b&gt;5"}],"id":"d8c025ef87b4","title":"常量传递&nbsp;:&nbsp;某列与常量等值比较时发生传递性"},{"parent":"68e632ea7601","children":[{"parent":"79bed98b0092","children":[],"id":"deb179851262","title":"`where&nbsp;a&lt;1&nbsp;and&nbsp;a=a`&nbsp;=&gt;&nbsp;`where&nbsp;a&lt;1&nbsp;and&nbsp;true`&nbsp;=&gt;&nbsp;`where&nbsp;a&lt;1`<br><br>`where&nbsp;a=5&nbsp;or&nbsp;a!=a`&nbsp;=&gt;&nbsp;`where&nbsp;a=5&nbsp;or&nbsp;false`&nbsp;=&gt;&nbsp;`where&nbsp;a=5`"}],"id":"79bed98b0092","title":"移除永远为true或false的表达式"},{"parent":"68e632ea7601","children":[{"parent":"6b263259167c","children":[],"id":"3f2d0d39ee7d","title":"`a&nbsp;=&nbsp;6&nbsp;+1`&nbsp;=&gt;&nbsp;`a=7`"}],"id":"6b263259167c","title":"表达式计算:&nbsp;表达式中只包含常量计算时会化简&nbsp;(该列必须以单独的形式作为表达式的操作数才会化简)"},{"parent":"68e632ea7601","children":[{"parent":"d51ce1e1fcdb","children":[],"id":"3485db8da17f","title":"const访问方式 + 联表查询"},{"parent":"d51ce1e1fcdb","children":[{"parent":"84c90c08b485","children":[],"id":"853b10912435","title":"`select&nbsp;id为1时各列常量值,t2.*&nbsp;from&nbsp;t1&nbsp;inner&nbsp;join&nbsp;t2&nbsp;on&nbsp;id为1时t1的k1列常量值=t2.k2&nbsp;`"}],"id":"84c90c08b485","title":"`select&nbsp;*&nbsp;from&nbsp;t1&nbsp;inner&nbsp;join&nbsp;t2&nbsp;on&nbsp;t1.k1=t2.k2&nbsp;where&nbsp;t1.id&nbsp;=1` =》&nbsp;"}],"id":"d51ce1e1fcdb","title":"常量表检测"}],"collapsed":true,"id":"68e632ea7601","title":"条件从简"},{"parent":"011e0487d68b","children":[{"parent":"8e5b6616cbe86267","children":[{"parent":"3a0448dbfa008b6b","children":[],"id":"c0367e2343de3690","title":"需要排序的列能够用索引，则不需要额外排序"},{"parent":"3a0448dbfa008b6b","children":[{"parent":"2464683ca2933f28","children":[{"parent":"cb239857224d14ab","children":[],"id":"be56ee276254a383","title":"查询字段长度 小于&nbsp;max_length_for_sort_data"},{"parent":"cb239857224d14ab","children":[],"id":"f84ffe6f96653198","title":"使用sort buffer对列进行排序，存储完整记录，排序完直接返回"}],"id":"cb239857224d14ab","title":"全字段排序"},{"parent":"2464683ca2933f28","children":[{"parent":"7e3665ac1ab05c79","children":[],"id":"e29a4a81443c5d51","title":"查询字段长度 超过 max_length_for_sort_data"},{"parent":"7e3665ac1ab05c79","children":[],"id":"843ed80ca88d3356","title":"使用sort buffer对列进行排序，存储需要排序的列和主键值，排序完回表查询完整记录再返回（多一次回表）"}],"id":"7e3665ac1ab05c79","title":"rowid排序"}],"id":"2464683ca2933f28","title":"需要排序的列不能用索引"},{"parent":"3a0448dbfa008b6b","children":[{"parent":"be7b08b01d8291c3","children":[],"id":"72a44f850005ca7e","title":"当数据量足够小时，使用sort buffer内存排序"},{"parent":"be7b08b01d8291c3","children":[],"id":"83d12ca174ffb20c","title":"当数据量太大时（内存不够），使用磁盘页辅助排序（归并算法，分成多个页排序再合并），可使用优化器追踪 optimizer_trace 查看"}],"id":"be7b08b01d8291c3","title":"不同数据量的查询"}],"id":"3a0448dbfa008b6b","title":"查询排序"},{"parent":"8e5b6616cbe86267","children":[{"parent":"f1d9b4e908427c11","children":[],"id":"d2196cca6dd4456a","title":"为需要排序（order by、group by）的字段建立合适的索引"},{"parent":"f1d9b4e908427c11","children":[],"id":"71d4d6e8bfc92ef5","title":"如果用不上索引可以调整sort buffer 或&nbsp;&nbsp;max_length_for_sort_data"}],"id":"f1d9b4e908427c11","title":"优化手段"}],"collapsed":true,"id":"8e5b6616cbe86267","title":"优化排序"},{"parent":"011e0487d68b","children":[{"parent":"fdaa97b1208b","children":[],"id":"01e3610ecab2","title":"内连接可以让查询优化器来选取最优驱动表与被驱动表，而外连接不行"},{"parent":"fdaa97b1208b","children":[],"id":"c3486c00519f","title":"外连接中,在驱动表中的记录且无法在被驱动表中找到on过滤的记录也会被加入结果集,只不过被驱动表中未被查到的列会被填充为NULL"},{"parent":"fdaa97b1208b","children":[{"parent":"b76b2915870d","children":[],"id":"1ad110bba12a","title":"select&nbsp;*&nbsp;from&nbsp;t1&nbsp;left&nbsp;join&nbsp;t2&nbsp;on&nbsp;t1.m1=t2.m2&nbsp;where&nbsp;t2.n2&nbsp;is&nbsp;not&nbsp;null"},{"parent":"b76b2915870d","children":[],"id":"bfe8dffd137c","title":"select&nbsp;*&nbsp;from&nbsp;t1&nbsp;left&nbsp;join&nbsp;t2&nbsp;on&nbsp;t1.m1=t2.m2&nbsp;where&nbsp;t2.n2 = 2"}],"id":"b76b2915870d","title":"空值拒绝： 当外连接使用where 隐式不允许被驱动表列为NULL"},{"parent":"fdaa97b1208b","children":[],"id":"eb6df6095a05","title":"当空值拒绝时，外连接可以优化成内连接，让查询优化器选取最优驱动表与被驱动表"}],"collapsed":true,"id":"fdaa97b1208b","title":"外连接消除"},{"parent":"011e0487d68b","children":[{"parent":"2df792c742e6","children":[{"parent":"c4e67a314770","children":[{"parent":"ca2481aab003","children":[],"id":"14f9abb5ac72","title":"标量子查询：一列一条记录"},{"parent":"ca2481aab003","children":[],"id":"816ebd7de61c","title":"行子查询：多列一条记录"},{"parent":"ca2481aab003","children":[],"id":"3c413a6c91cd","title":"列子查询：一列多条记录"},{"parent":"ca2481aab003","children":[],"id":"4d90320a28f8","title":"表子查询: 多列多条记录"}],"id":"ca2481aab003","title":"子查询结果集分类"},{"parent":"c4e67a314770","children":[{"parent":"d90f489092e3","children":[],"id":"b1d50c7b0c6d","title":"不相关子查询"},{"parent":"d90f489092e3","children":[],"id":"a15bbdd2c368","title":"相关子查询"}],"id":"d90f489092e3","title":"与外层查询关系分类"}],"id":"c4e67a314770","title":"分类"},{"parent":"2df792c742e6","children":[{"parent":"443e71d8fc34","children":[],"id":"23fb62a9a7a7","title":"物化： 将子查询结果集保存在临时表"},{"parent":"443e71d8fc34","children":[{"parent":"693fc66432d2","children":[],"id":"2145fff0e736","title":"结果集不大，使用内存，哈希索引"},{"parent":"693fc66432d2","children":[],"id":"bc84b3645dd1","title":"结果集大，使用磁盘，B+树索引"}],"id":"693fc66432d2","title":"物化表：存储子查询结果集的临时表"},{"parent":"443e71d8fc34","children":[],"id":"d33be1c96b94","title":"半连接：在一定条件下，外层查询与子查询的物化表进行内连接，但是要采取措施防止重复匹配"},{"parent":"443e71d8fc34","children":[{"parent":"adacebe7605e","children":[{"parent":"7939f8460263","children":[],"id":"358fc91d5786","title":"子查询必须与IN操作符组成布尔表达式,并且在外层查询的where或or子句中出现"},{"parent":"7939f8460263","children":[],"id":"93efb529f7f0","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">子查询不能是union连接起来的多个查询</span>"},{"parent":"7939f8460263","children":[],"id":"c7b2597a4ace","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">子查询不能包含group by,having或聚集函数</span>"},{"parent":"7939f8460263","children":[],"id":"72e014548248","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">外层查询其他搜索条件要用and 与 in子查询连接</span>"}],"id":"7939f8460263","title":"使用半连接的条件"},{"parent":"adacebe7605e","children":[{"parent":"2d32362f5cf6","children":[{"parent":"026bf4146323","children":[],"id":"6f9b8cb62634","title":"select&nbsp;s1.*&nbsp;from&nbsp;s1&nbsp;inner&nbsp;join&nbsp;s2&nbsp;on&nbsp;s1.key1=s2.m_val&nbsp;where&nbsp;s2.key2='a'"}],"id":"026bf4146323","title":"select&nbsp;*&nbsp;from&nbsp;s1&nbsp;where&nbsp;s1.key1&nbsp;in&nbsp;(select&nbsp;m_val&nbsp;from&nbsp;s2&nbsp;where&nbsp;s2.key2&nbsp;=&nbsp;'a') =》&nbsp; &nbsp;&nbsp;"},{"parent":"2d32362f5cf6","children":[],"id":"9f297345b083","title":"不完全成立，s2.m_val的记录可能有多条，导致记录会被多次加入结果集"},{"parent":"2d32362f5cf6","children":[],"id":"5a94a02c756d","title":"半连接:&nbsp;对于s1表的某条记录来说,只关心s2表是否存在与之匹配的记录,而不具体关心有几条,最终结果集中只保留s1的记录"},{"parent":"2d32362f5cf6","children":[{"parent":"d88f6345149f","children":[],"id":"600ca5ade8b3","title":"将不相关子查询物化,再将外层查询与物化表半连接 (因为将子查询结果加入物化表会进行去重,所以也不会发生情况A)"}],"id":"d88f6345149f","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">Semi-join Materialization 半连接物化 </span>"}],"id":"2d32362f5cf6","title":"子查询转半连接"},{"parent":"adacebe7605e","children":[{"parent":"bc61b66cff95","children":[{"parent":"71f6d0a9f4b4","children":[],"id":"f0637fdd075f","title":"循环:&nbsp;重复取一条外层查询记录然后去子查询表中匹配记录，在子查询表中找到则放入结果并停止（去重）；找到第一条和不找到都继续循环外层表"}],"id":"71f6d0a9f4b4","title":"FirstMatch&nbsp;首次匹配"},{"parent":"bc61b66cff95","children":[{"parent":"bcf0a4ebc1ec","children":[],"id":"069293822fa0","title":"子查询的查询列表为主键或唯一二级索引列时,最多只会出现一条匹配成功记录不会发生重复"}],"id":"bcf0a4ebc1ec","title":"Table&nbsp;pullout&nbsp;&nbsp;子查询表上拉"},{"parent":"bc61b66cff95","children":[{"parent":"e28367bed098","children":[],"id":"d551ea4f9a4b30cd","title":"物化表为驱动表 并且 拥有查询值的二级索引，索引有序，取第一条记录和跳过后续相同的记录"}],"id":"e28367bed098","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">LooseScan 松散扫描</span>"},{"parent":"bc61b66cff95","children":[{"parent":"ebe6e53314ab","children":[],"id":"40f0413b8157","title":"用临时表检查结果记录主键值去重&nbsp;(保证匹配成功记录不重复)"}],"id":"ebe6e53314ab","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">Duplicate Weedout 重复值消除</span>"}],"id":"bc61b66cff95","title":"半连接策略"}],"id":"adacebe7605e","title":"使用半连接的策略"},{"parent":"443e71d8fc34","children":[{"parent":"94bf8ceffc44","children":[{"parent":"5c0d4d43679a","children":[],"id":"52b7df461585","title":"使用not&nbsp;in"},{"parent":"5c0d4d43679a","children":[],"id":"2d11b96ac14e","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">外层查询其他搜索条件用or与in子查询连接</span>"},{"parent":"5c0d4d43679a","children":[],"id":"0f0910c61e25","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">select 列名 in 子查询</span>"},{"parent":"5c0d4d43679a","children":[],"id":"c413cc1b371f","title":"<span style=\"color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">子查询中包含union,group by,having或聚集函数</span>"}],"id":"5c0d4d43679a","title":"不使用 半连接的条件"},{"parent":"94bf8ceffc44","children":[],"id":"f0ea0e012ec7","title":"先将子查询物化，再查询"},{"parent":"94bf8ceffc44","children":[],"id":"5cde944cfb0f","title":"将IN子查询转换为exists子查询（可能用到索引）"}],"id":"94bf8ceffc44","title":"不能使用半连接的策略"}],"collapsed":true,"id":"443e71d8fc34","title":"in 子查询优化(相关子查询)"}],"collapsed":true,"id":"2df792c742e6","title":"子查询优化"}],"collapsed":false,"id":"011e0487d68b","title":"查询优化"}],"collapsed":true,"id":"82e0ccfc2eb4","title":"查询原理"}],"collapsed":true,"id":"a885b8a0d1315ebe","title":"索引查询篇"},{"parent":"root","lineStyle":{"randomLineColor":"#FD5155"},"children":[{"parent":"d79ae754fc9d","children":[{"parent":"4bb910870a0c","children":[{"parent":"31b914997aee","children":[],"id":"3cd99b9dfc2d","title":"事务是保证ACID原则的一个或多个操作"},{"parent":"31b914997aee","children":[{"parent":"011fc1e60afb","children":[],"id":"b93d2ecc74d4","title":"原子性（Atomicity）：现实世界中的一个操作可能对应数据中的一系列操作，这些操作要么都成功要么都失败，不能处于有的做成功了有的失败了的中间状态"},{"parent":"011fc1e60afb","children":[],"id":"6721c81a3b4e","title":"隔离性(Consistency)：多个操作访问相同数据时，要互不影响"},{"parent":"011fc1e60afb","children":[],"id":"9a60f0661255","title":"一致性（Isolation）：数据库中数据满足现实世界中（我们定义的）约束【转账中银行存款不能是负的】，大部分由业务层约束，数据库也可以约束"},{"parent":"011fc1e60afb","children":[],"id":"2a2b58f63db5","title":"持久性(Dutability)：现实世界中状态转换了，转换结果永久保存（事务一旦被提交，就永久保存在磁盘中）<br>"}],"id":"011fc1e60afb","title":"ACID原则"},{"parent":"31b914997aee","children":[{"parent":"87f5640de9eb","children":[{"parent":"a596a66d0583","children":[],"id":"96212b0a3e9b","title":"数据库事务正在执行的状态"}],"id":"a596a66d0583","title":"活动的"},{"parent":"87f5640de9eb","children":[{"parent":"4bdcc3e51748","children":[],"id":"6f8154970f93","title":"活动状态执行完事务，保存在内存中，还未存储到磁盘的状态"}],"id":"4bdcc3e51748","title":"部分提交的"},{"parent":"87f5640de9eb","children":[{"parent":"fd5700f911ed","children":[],"id":"0e77550d607a","title":"从活动状态或部分提交状态发生错误，手动停止事务或刷新到磁盘时出了问题的状态"}],"id":"fd5700f911ed","title":"失败的"},{"parent":"87f5640de9eb","children":[{"parent":"2a405a76fb76","children":[],"id":"a18ecf56d4b3","title":"部分提交状态成功刷新到磁盘的状态"}],"id":"2a405a76fb76","title":"提交的"},{"parent":"87f5640de9eb","children":[{"parent":"9ba99298d8b2","children":[],"id":"fab6962412dc","title":"失败状态执行回滚操作恢复到事务前的状态"}],"id":"9ba99298d8b2","title":"终止的"}],"id":"87f5640de9eb","title":"事务状态"},{"parent":"31b914997aee","children":[{"parent":"1ea0888cdd72","children":[{"parent":"b1fd6af96f85","children":[],"id":"502679f38ce8","title":"begin&nbsp;"},{"parent":"b1fd6af96f85","children":[{"parent":"1b85edc42396","children":[],"id":"85abcc1f51fd","title":"start transaction read only 只读事务"},{"parent":"1b85edc42396","children":[],"id":"2ead3ba9be13","title":"start transaction read write 读写事务"},{"parent":"1b85edc42396","children":[],"id":"4a953ae633d9","title":"start transaction with consistent snapshot 一致性读事务"}],"id":"1b85edc42396","title":"start transaction（读写事务）"}],"collapsed":true,"id":"b1fd6af96f85","title":"开启事务"},{"parent":"1ea0888cdd72","children":[{"parent":"663bd63bf107","children":[{"parent":"8a7cd960b4f3","children":[],"id":"95f1e249f746","title":"commit"}],"id":"8a7cd960b4f3","title":"提交事务&nbsp;"},{"parent":"663bd63bf107","children":[{"parent":"f139e3763d11","children":[],"id":"0e2c9255050a","title":"rollback 回滚到开启事务前的状态"},{"parent":"f139e3763d11","children":[{"parent":"3d0131d953cd","children":[],"id":"0933e3e36c47","title":"标记保存点 savepoint 保存点名"},{"parent":"3d0131d953cd","children":[],"id":"8d3adfba1229","title":"回滚到保存点 rollback to 保存点名"},{"parent":"3d0131d953cd","children":[],"id":"7452137dc288","title":"删除标记保存点 release savepoint 保存点名"}],"id":"3d0131d953cd","title":"保存点（不一定要回滚到事务前的状态，也可以回滚到保存点上）"}],"id":"f139e3763d11","title":"回滚事务"}],"collapsed":true,"id":"663bd63bf107","title":"结束事务"},{"parent":"1ea0888cdd72","children":[{"parent":"cd375a9db231","children":[],"id":"1ca4e7f2024b","title":"自动提交默认开启"},{"parent":"cd375a9db231","children":[{"parent":"75dfb854b5d2","children":[],"id":"bd7b19a09eb8","title":"begin / start transaction 开启事务"}],"id":"75dfb854b5d2","title":"关闭自动提交"},{"parent":"cd375a9db231","children":[{"parent":"570b2bd7f1ad","children":[],"id":"30cb3887da77","title":"执行DDL语句create，alter，drop"},{"parent":"570b2bd7f1ad","children":[],"id":"01d0d26cf4a1","title":"使用/修改系统库mysql中的表"},{"parent":"570b2bd7f1ad","children":[],"id":"6b850876b26b","title":"事务未提交或回滚又开启事务"}],"id":"570b2bd7f1ad","title":"隐式提交"}],"collapsed":true,"id":"cd375a9db231","title":"自动提交"}],"collapsed":false,"id":"1ea0888cdd72","title":"事务语法"}],"collapsed":true,"id":"31b914997aee","title":"事务"},{"parent":"4bb910870a0c","children":[{"parent":"ca7a753214d5","children":[{"parent":"515ef80f810c","children":[{"parent":"9f04a7aea406","children":[],"id":"309c48f583a6","title":"事务A修改了事务B修改未提交的数据"}],"id":"9f04a7aea406","title":"脏写"},{"parent":"515ef80f810c","children":[{"parent":"09e4c3999a53","children":[],"id":"5ac45c586009","title":"事务A读取了事务B修改未提交的数据，然后事务B回滚，事务A读到的是脏数据"}],"id":"09e4c3999a53","title":"脏读"},{"parent":"515ef80f810c","children":[{"parent":"2ac00e227ce5","children":[],"id":"e3a85f083b7a","title":"事务A修改了事务B读取未提交的数据，事务B再去读取，发现两次读取数据值不一样"}],"id":"2ac00e227ce5","title":"不可重复读"},{"parent":"515ef80f810c","children":[{"parent":"2343c1285987","children":[],"id":"f2061dfa5009","title":"事务A根据搜索条件查询出记录未提交，事务B根据搜索条件添加了记录，事务A再次以那个搜索条件查询时，前后查询记录数不同"},{"parent":"2343c1285987","children":[],"id":"0f53f78ae54a","title":"快照读或锁定读都是解决大部分幻读，快照读时如果当前事务修改了其他事务新增的记录后续读还是能看到；锁定读在事务中先快照读，其他事务新增记录后再锁定读也会出现幻读"}],"id":"2343c1285987","title":"幻读"}],"collapsed":true,"id":"515ef80f810c","title":"事务并发遇到的一致性问题"},{"parent":"ca7a753214d5","children":[{"parent":"5bca9787669c","children":[{"parent":"13f90cafd3e0","children":[],"id":"48a42c8ff66d","title":"允许事务A读取事务B未提交的修改数据"}],"id":"13f90cafd3e0","title":"read uncommitted 读未提交"},{"parent":"5bca9787669c","children":[{"parent":"a7316938f174","children":[],"id":"b4b6543e64bb","title":"解决脏读"},{"parent":"a7316938f174","children":[],"id":"1c5933e9a1fd","title":"允许事务A读取事务B已提交的修改数据"}],"collapsed":false,"id":"a7316938f174","title":"read committed 读已提交&nbsp;"},{"parent":"5bca9787669c","children":[{"parent":"134dece54623","children":[],"id":"a83d287dc669","title":"解决脏读，不可重复读"},{"parent":"134dece54623","children":[],"id":"c37a5cfd391a","title":"确保事务A多次读取记录值一致"}],"id":"134dece54623","title":"repeatable read 可重复读 （innodb默认）"},{"parent":"5bca9787669c","children":[{"parent":"9d115bdcea31","children":[],"id":"2d84e86e9334","title":"解决脏读，不可重复读，幻读"},{"parent":"9d115bdcea31","children":[],"id":"a068e8695f07","title":"确保事务A多次从同表中读到相同数据总量"}],"id":"9d115bdcea31","title":"serializable 串行化&nbsp;"},{"parent":"5bca9787669c","children":[],"id":"24e11ddb04e0","title":"隔离级别越高，数据一致性越好，并发性越低"}],"collapsed":true,"id":"5bca9787669c","title":"事务隔离级别"},{"parent":"ca7a753214d5","children":[{"parent":"f4aefdc78835","children":[],"id":"409d2fa05312","title":"`set&nbsp;transaction&nbsp;isolation&nbsp;level&nbsp;隔离级别`:设置下一个事务的隔离级别"},{"parent":"f4aefdc78835","children":[],"id":"4fc6e8601668","title":"<span class=\"md-pair-s md-expand\" style=\"box-sizing:border-box; color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">&lt;code style=\"box-sizing: border-box; font-family: var(--font-monospace); vertical-align: initial; padding: 2px 4px; border-radius: 2px; font-size: 0.92rem; color: rgb(233, 105, 0); background-color: rgb(248, 248, 248);\"&gt;set session transaction isolation level 隔离级别&lt;/code&gt;</span><span class=\"md-plain md-expand\" style=\"box-sizing:border-box; color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">:设置当前会话后续事务的隔离级别</span>"},{"parent":"f4aefdc78835","children":[],"id":"e991493e7b16","title":"<span class=\"md-pair-s\" style=\"box-sizing:border-box; color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">&lt;code style=\"box-sizing: border-box; font-family: var(--font-monospace); vertical-align: initial; padding: 2px 4px; border-radius: 2px; font-size: 0.92rem; color: rgb(233, 105, 0); background-color: rgb(248, 248, 248);\"&gt;set global transaction isolation level 隔离级别&lt;/code&gt;</span><span class=\"md-plain\" style=\"box-sizing:border-box; color:rgb(52, 73, 94); font-family:Ubuntu, &quot;Source Sans Pro&quot;, sans-serif; font-size:16px; word-spacing:0.8px;\">:设置下个会话的事务隔离级别</span>"}],"collapsed":true,"id":"f4aefdc78835","title":"设置事务隔离级别"}],"collapsed":true,"id":"ca7a753214d5","title":"事务隔离级别"}],"collapsed":false,"id":"4bb910870a0c","title":"事务"},{"parent":"d79ae754fc9d","children":[{"parent":"4c6942f01b00","children":[{"parent":"5146aa7a7da5","children":[{"parent":"0452ffdb04d8","children":[],"id":"89f4b8b6788d","title":"前面说到事务提交后的脏页会放在flush链表，还未刷新进磁盘，没有持久化，然后正好断电了，重启后就要使用redo日志来恢复"}],"collapsed":true,"id":"0452ffdb04d8","title":"使用redo日志满足持久化"},{"parent":"5146aa7a7da5","children":[{"parent":"c9da571e392d","children":[],"id":"b0acfc74dff7","title":"MTR 表示对底层的一次原子访问"},{"parent":"c9da571e392d","image":{"w":42,"h":29,"url":"http://cdn.processon.com/61553961f346fb69a7205f70?e=1632978801&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:WCynDK61uk2kSpV-DPrbbrsbp68="},"children":[{"parent":"1f02e9b8be86","children":[],"id":"34f414899d4a","title":"一个事务可能包含多条SQL语句"},{"parent":"1f02e9b8be86","children":[],"id":"e1ed92e79507","title":"一条SQL语句可能包含多个MTR（对底层的原子访问）"},{"parent":"1f02e9b8be86","children":[],"id":"bdf7654232d0","title":"一个MTR 对应多条redo日志"}],"id":"1f02e9b8be86","title":"关系"},{"parent":"c9da571e392d","children":[],"id":"8309449c4139","title":"因此，为了满足原子性，会将一个事务对应一组redo日志，以组的形式记录redo日志，要么都恢复要么都不恢复"}],"collapsed":true,"id":"c9da571e392d","title":"Mini-Transaction(MTR)"},{"parent":"5146aa7a7da5","children":[{"parent":"b847f5f700af","children":[],"id":"b0db90d1160b","title":"缓冲区默认刷新到MySQL数据目录下的`ib_logfile0`和`ib_logfile1`中"},{"parent":"b847f5f700af","image":{"w":63,"h":19,"url":"http://cdn.processon.com/61553de9e401fd6be07a40d7?e=1632979961&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:RX1YEJvco0gts-QQMs7htQ7_z1Q="},"children":[],"id":"e4f5f7a28762","title":"redo日志文件组会组成一个环，写满了就去覆盖环前面的redo日志文件"},{"parent":"b847f5f700af","image":{"w":50,"h":28,"url":"http://cdn.processon.com/61553e687d9c087fb0dc410e?e=1632980088&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:CzXkvRAGmeAaa5FNXwN5QgxR9Pw="},"children":[],"id":"f775648fd693","title":"redo日志文件格式与redo日志文件组（成环）前4个block管理信息，后面所有block用来存真实redo日志"}],"collapsed":true,"id":"b847f5f700af","title":"redo日志文件（存储在磁盘中的文件）"},{"parent":"5146aa7a7da5","children":[{"parent":"abe7b546dcab","image":{"w":58,"h":9,"url":"http://cdn.processon.com/615538241efad4243d4255e0?e=1632978484&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:TlmKlj8_0HNPr8j_2AHlYvidzsw="},"children":[{"parent":"b0653bc2693e","children":[],"id":"b4ea1982c2fa","title":"物理上修改了某页某位置的值"}],"id":"b0653bc2693e","title":"（修改）简单：要修改的地方只有一处"},{"parent":"abe7b546dcab","image":{"w":59,"h":37,"url":"http://cdn.processon.com/61553816e0b34d09123496b9?e=1632978471&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:sO36N4wq8vnq6-RjtA7oarz8FPA="},"children":[{"parent":"632242d05e25","children":[],"id":"ea00f6fbb26f","title":"逻辑：系统奔溃，服务重启后，调用插入函数，这些redo日志就可以当参数，恢复宕机前丢失的数据"}],"id":"632242d05e25","title":"（添加）复杂：要修改的地方很多（索引上的记录，统计数据）"}],"collapsed":true,"id":"abe7b546dcab","title":"redo日志格式"},{"parent":"5146aa7a7da5","children":[{"parent":"c28b65dd7fd8","image":{"w":64,"h":28,"url":"http://cdn.processon.com/61553aa56376891279431ec6?e=1632979125&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:kWjcYP5EeEFDyFeVbevUUiHe1Wc="},"children":[],"id":"b7df2125ae27","title":"redo日志由redo log block管理"},{"parent":"c28b65dd7fd8","image":{"w":97,"h":31,"url":"http://cdn.processon.com/61553aaf0791295710b1ca70?e=1632979135&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ptT6S9BWZMJI3ASN4oFHs4ARttQ="},"children":[],"id":"df5fc80b65f1","title":"redo&nbsp; buffer 由若干block组成"},{"parent":"c28b65dd7fd8","children":[],"id":"7cd1ab4d2fd2","title":"redo日志刷新进磁盘要先放入缓冲区"},{"parent":"c28b65dd7fd8","children":[{"parent":"b78f6bfc2cd5","image":{"w":39,"h":19,"url":"http://cdn.processon.com/61553d1ce0b34d0912349c30?e=1632979757&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:_32dXo8rZgKqpOyHSO94KY2SRlk="},"children":[],"id":"b91f3cb8f561","title":"顺序写入"},{"parent":"b78f6bfc2cd5","image":{"w":60,"h":34,"url":"http://cdn.processon.com/61553d285653bb6791dfed5f?e=1632979768&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Ejwk5IajaVZruTCI3FoA_-YlKOE="},"children":[],"id":"953cd5f6304e","title":"为满足原子性，每个MTR生成的一组redo会先放到临时区，当这个MTR执行完才放入缓冲区"},{"parent":"b78f6bfc2cd5","image":{"w":95,"h":40,"url":"http://cdn.processon.com/61553d311efad4243d425b04?e=1632979778&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:TPZyQx3MtAmaBkamE1v2j1sz-hU="},"children":[],"id":"ce8e1df81fd1","title":"不同MTR的不同redo组可以交替写入（组提交）<br>"}],"id":"b78f6bfc2cd5","title":"redo日志写入buffer过程"},{"parent":"c28b65dd7fd8","children":[{"parent":"ddab2aa5fe34","children":[],"id":"8ecc4431d769","title":"事务提交可以不把记录数据刷新到磁盘，但必须要把对应redo日志刷新进磁盘"},{"parent":"ddab2aa5fe34","children":[],"id":"bd09e4befacc","title":"redo buffer 大量被占用"},{"parent":"ddab2aa5fe34","children":[],"id":"1228d3c70102","title":"正常关闭服务器"},{"parent":"ddab2aa5fe34","children":[],"id":"7b5a2d4b3610","title":"master线程每秒将redo buffer的redo刷新到磁盘"},{"parent":"ddab2aa5fe34","children":[],"id":"639dd238f811","title":"checkpoint"}],"id":"ddab2aa5fe34","title":"redo日志从缓冲区刷新到磁盘的时机"}],"collapsed":true,"id":"c28b65dd7fd8","title":"redo日志写入redo buffer"},{"parent":"5146aa7a7da5","children":[{"parent":"a10d3c5af7ac","children":[],"id":"8d27d728dda2","title":"log sequence number (lsn): 总共生成redo日志量"},{"parent":"a10d3c5af7ac","children":[],"id":"653d554fd5b2","title":"flush_to_disk_lsn: 在缓冲区已经刷入磁盘的redo日志量"},{"parent":"a10d3c5af7ac","children":[],"id":"70fdaa45398b","title":"checkpoint_lsn：记录可以被覆盖的redo日志量"},{"parent":"a10d3c5af7ac","image":{"w":82,"h":32,"url":"http://cdn.processon.com/6155426be0b34d091234a0ea?e=1632981116&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ARkPQts20lGYP9Jwqyt9QbHgqlA="},"children":[{"parent":"b9a79cee8b60","children":[{"parent":"75c266707066","children":[],"id":"ebb71bce966f","title":"o_m：第一次放入时 lsn值"},{"parent":"75c266707066","children":[],"id":"eb1622b87032","title":"n_m：最近一次被修改时 lsn值"}],"id":"75c266707066","title":"flush链表中控制块记录信息"}],"id":"b9a79cee8b60","title":"flush链表使用头插法，最早被修改的控制块在链表尾部，多次被修改的控制块不会放在头部而是修改n_m"},{"parent":"a10d3c5af7ac","children":[{"parent":"0f702e9aa2ef","children":[],"id":"719af134076f","title":"MTR的redo日志被刷新进磁盘，但对应数据页还未被刷新进磁盘，是不能覆盖的"},{"parent":"0f702e9aa2ef","image":{"w":78,"h":36,"url":"http://cdn.processon.com/615544011efad4243d426071?e=1632981521&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:xJ6aPe3JwojplSJ7bne1YPvzcUQ="},"children":[{"parent":"d1d858e0e090","children":[],"id":"15298ed0d326","title":"checkpoint_lsn 前 都是可以覆盖的redo日志（数据页已经刷新到磁盘了）"},{"parent":"d1d858e0e090","children":[],"id":"9f465c89a682","title":"checkpoint_lsn与flush_to_disk_lsn之间 都是刷新进磁盘的redo日志（对应数据页可能刷新到磁盘也可能没刷新到磁盘）"},{"parent":"d1d858e0e090","children":[],"id":"050d7584e12d","title":"flush_to_disk_lsn与lsn之间 是未刷新进磁盘的redo日志（可能在redo buffer 也可能在MTR没执行完时放到的临时区）"}],"id":"d1d858e0e090","title":"数据页刷新进磁盘，会执行checkpoint更新checkpoint_lsn"}],"id":"0f702e9aa2ef","title":"执行checkpoint就是更新checkpoint_lsn"},{"parent":"a10d3c5af7ac","children":[],"id":"fc3dd9aeabc7","title":"如果后台线程无法即时把脏页刷新进磁盘，就不能checkpoint，导致不能覆盖，空间不足，最终用用户线程主动将flush链表尾部脏页刷新进磁盘，影响用户体验"}],"collapsed":true,"id":"a10d3c5af7ac","title":"checkpoint"},{"parent":"5146aa7a7da5","children":[{"parent":"6a9802582618","image":{"w":94,"h":28,"url":"http://cdn.processon.com/615545a3f346fb69a7206cc0?e=1632981940&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:VIWKCUMXOKaji92TzWIhlVa1KL0="},"children":[],"id":"704737943b61","title":"起点：checkpoint_lsn前可以覆盖，表示数据页已经刷新进磁盘了，不用恢复，所以起点是checkpoint_lsn"},{"parent":"6a9802582618","children":[],"id":"450f1d3c808c","title":"终点: block未满时，那个block就是终点"},{"parent":"6a9802582618","image":{"w":67,"h":39,"url":"http://cdn.processon.com/6155458e0e3e74663e9359d8?e=1632981919&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ckl5SSjZMmVon4d4UM5YwUQk4Nw="},"children":[{"parent":"6c1d8a270cc1","children":[],"id":"1577e99f83a6","title":"同一页的redo日志放在同一个槽中，顺序恢复"}],"id":"6c1d8a270cc1","title":"使用哈希索引优化恢复"}],"collapsed":true,"id":"6a9802582618","title":"崩溃恢复"}],"collapsed":true,"id":"5146aa7a7da5","title":"redo日志"},{"parent":"4c6942f01b00","children":[{"parent":"9b6e37ebf5b1","children":[],"id":"def22de23cbf","title":"使用undo日志记录回滚操作内容，满足原子性"},{"parent":"9b6e37ebf5b1","children":[{"parent":"a3a5fd979b44","image":{"w":101,"h":26,"url":"http://cdn.processon.com/615551c87d9c087fb0dc5eec?e=1632985048&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:neHcoHlwsfv7_2RDEtR81mNfnN4="},"children":[],"id":"2a3ad10a99a3","title":"事务对表中数据进行写操作时，会为这个事务分配一个id,保存在行格式的隐藏列trx_id （id递增，查询事务id为0）"},{"parent":"a3a5fd979b44","children":[],"id":"9b18a6e0fd8082ff","title":"事务id没到256的倍数时进行保持，下次重启时使用保持的值+256 作为事务id递增"}],"collapsed":false,"id":"a3a5fd979b44","title":"事务id&nbsp;"},{"parent":"9b6e37ebf5b1","children":[{"parent":"8eba980d8f78","children":[],"id":"fe34156a5e56","title":"整体：不同类型的undo log有不同类型的日志格式，不同类型的undo log不能混存在同一个页中，同类型的页逻辑使用回滚段管理，物理上用链表连接"},{"parent":"8eba980d8f78","children":[{"parent":"084a111088ea","children":[],"id":"0c0b28579da6","title":"使用回滚段来管理undo页链表"},{"parent":"084a111088ea","image":{"w":110,"h":65,"url":"http://cdn.processon.com/615559f61efad4243d4296ce?e=1632987142&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:eCmoVomhsLTRS4tPg6HBp8xD6nw="},"children":[],"id":"3e7dc1737f17","title":"回滚段有1024个undo_slot对应undo链表的首节点，全用完就不够用了，所以默认128个回滚段，还会为临时表和普通表分类不同的回滚段"}],"id":"084a111088ea","title":"回滚段"},{"parent":"8eba980d8f78","image":{"w":53,"h":29,"url":"http://cdn.processon.com/615556776376891279435083?e=1632986247&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:gpVpolYfdWkG_6qtN8FDRh1ZSF8="},"children":[{"parent":"abbc962f411f","children":[],"id":"7ba3dac3cf8c","title":"专门用于存储undo日志的页，前面说的undo日志格式就存储在这个页中"},{"parent":"abbc962f411f","image":{"w":89,"h":41,"url":"http://cdn.processon.com/615556950e3e74663e93823a?e=1632986277&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:RSJyg_eNb8ItC2Xp5SM2bptMW9g="},"children":[],"id":"8b2478668730","title":"undo page header"},{"parent":"abbc962f411f","children":[{"parent":"14f615afde4b","children":[],"id":"c9a563347290","title":"insert 增"},{"parent":"14f615afde4b","children":[],"id":"0435fead2685","title":"update 删，改"}],"id":"14f615afde4b","title":"类型"}],"collapsed":false,"id":"abbc962f411f","title":"FIL_PAGE_UNDO_LOG页"},{"parent":"8eba980d8f78","children":[{"parent":"b83f88872e2c","children":[{"parent":"069781345d2f","image":{"w":57,"h":23,"url":"http://cdn.processon.com/61555260e0b34d091234bd25?e=1632985201&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:9_xqDSe9XrLt9l7EPKeZ21gctFk="},"children":[],"id":"7b0fd22bb481","title":"格式"},{"parent":"069781345d2f","image":{"w":74,"h":32,"url":"http://cdn.processon.com/615552a90791295710b1ef0d?e=1632985273&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ViNQXemiNBgKoIJ4j5kG4mzEwMw="},"children":[],"id":"3cf88831be79","title":"undo log 存放undo日志（将2条记录插入索引与undo log关系图，roll pointer指向要回滚的undo 日志）"}],"collapsed":true,"id":"069781345d2f","title":"insert"},{"parent":"b83f88872e2c","children":[{"parent":"3c8c0e4db94a","children":[{"parent":"c0d12d844400","image":{"w":39,"h":31,"url":"http://cdn.processon.com/615553735653bb6791e010c2?e=1632985476&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Hlagf2DInpPKQjyz9JQe1MUBkiY=","direction":"up"},"children":[],"id":"d1a1767fb48c","title":"delete mark：将记录的deleted_flag设置为1，变为中间状态"},{"parent":"c0d12d844400","image":{"w":45,"h":30,"url":"http://cdn.processon.com/61555367e0b34d091234c064?e=1632985463&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:KfNC3r_CzFFAyJQfuNc2hpFC9lo="},"children":[],"id":"52ec74aa9441","title":"purge：将中间状态记录用头插法加入垃圾链表"}],"id":"c0d12d844400","title":"delete为了满足MVCC分为2个过程"},{"parent":"3c8c0e4db94a","children":[{"parent":"e367044a2f74","children":[],"id":"2f0d71478856","title":"如果链表头节点空间大于新记录所需空间会产生碎片"},{"parent":"e367044a2f74","children":[],"id":"51a336bfa4d5","title":"不够分配要申请空间"},{"parent":"e367044a2f74","children":[],"id":"653506e5e6db","title":"页满时，计算剩余空间+碎片空间能否容纳新记录，可以的话用临时表重新组织这些记录，开销大"}],"id":"e367044a2f74","title":"重用垃圾链表节点空间"},{"parent":"3c8c0e4db94a","image":{"w":43,"h":35,"url":"http://cdn.processon.com/6155540f6376891279434812?e=1632985632&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:a7rRDZAOjF8sI7XxNRp_fLWgPyg="},"children":[],"id":"f75f3fd7c20f","title":"格式"},{"parent":"3c8c0e4db94a","image":{"w":44,"h":18,"url":"http://cdn.processon.com/615554681e08533a03fe8910?e=1632985721&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:n3L3fxF-3PqNSWJTI3LJpGnpXEs="},"children":[],"id":"acc99d98d7c9","title":"对记录进行delete mark会把记录的trx_id和roll pointer记录在undo日志，形成版本链"}],"collapsed":true,"id":"3c8c0e4db94a","title":"delete"},{"parent":"b83f88872e2c","children":[{"parent":"1449b7b9b66b","image":{"w":37,"h":35,"url":"http://cdn.processon.com/615554b10791295710b1f6d1?e=1632985793&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:_nva4txVfghOx2gj9WVzERHTij4="},"children":[],"id":"03f4f9721e35","title":"格式"},{"parent":"1449b7b9b66b","children":[{"parent":"7b9833f61614","children":[{"parent":"4ce28257662e","children":[],"id":"899717825ffc","title":"被更新的列空间不动则就地更新"},{"parent":"4ce28257662e","children":[],"id":"66dd04c7b2c6","title":"被更新的列空间变化则先删除原记录（delete mark + purge）再插入新记录"}],"id":"4ce28257662e","title":"不修改主键"},{"parent":"7b9833f61614","children":[{"parent":"bb4b740c3f6e","children":[],"id":"3cb9bc28094f","title":"先delete mark 旧记录再创建新记录插入（因为要维护排序，不purge是因为维护MVCC）"}],"id":"bb4b740c3f6e","title":"修改主键"}],"id":"7b9833f61614","title":"聚簇索引"},{"parent":"1449b7b9b66b","children":[{"parent":"204add853327","children":[],"id":"22e3bf53eae3","title":"修改的列不涉及二级索引的列则不用变动"},{"parent":"204add853327","children":[{"parent":"0d560610044a","children":[],"id":"fdb769bbe584","title":"先delete mark 再插入（维护排序与MVCC）"}],"id":"0d560610044a","title":"涉及二级索引的列"}],"id":"204add853327","title":"二级索引"}],"collapsed":true,"id":"1449b7b9b66b","title":"update"}],"collapsed":false,"id":"b83f88872e2c","title":"undo日志格式（不同场景undo日志格式不同）"},{"parent":"8eba980d8f78","children":[{"parent":"3d3a55961152","image":{"w":87,"h":28,"url":"http://cdn.processon.com/615556d20791295710b1fde4?e=1632986339&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:LZ6Tas9e5qc_zeraxXkTVcHbXQ0="},"children":[],"id":"90e5abe5f490","title":"一个事务可能产生多个undo日志,一个undo页存放不下时用链表连接多个undo页"},{"parent":"3d3a55961152","image":{"w":75,"h":27,"url":"http://cdn.processon.com/61555717637689127943527d?e=1632986407&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:anVle0xgKhKveTRwrLsdAs990fk="},"children":[],"id":"bc9f577cad8d","title":"因为不同类型不允许混存，所以分insert链表和update链表"},{"parent":"3d3a55961152","image":{"w":92,"h":49,"url":"http://cdn.processon.com/615557411e08533a03fe92f8?e=1632986449&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:iA1zsYojNXAu_aMT8wS2u66OkGI="},"children":[],"id":"5ed985fe2667","title":"因为临时表和普通表不能混存，所以一个事务最多使用四个链表，用到才会生成"},{"parent":"3d3a55961152","image":{"w":58,"h":21,"url":"http://cdn.processon.com/615557bd63768912794354cb?e=1632986573&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:6FjeITCnXVIpYcs9JNQtbmlvopM="},"children":[],"id":"31ba9352ba95","title":"一个链表对应一个段，所以每个链表第一个页还要段信息"}],"collapsed":true,"id":"3d3a55961152","title":"undo页链表"}],"collapsed":false,"id":"8eba980d8f78","title":"存储"},{"parent":"9b6e37ebf5b1","children":[{"parent":"1ef84a60dc38","children":[],"id":"c061f0314df8","title":"为了节省空间会重用undo页"},{"parent":"1ef84a60dc38","children":[{"parent":"7def7db7de31","children":[],"id":"490a4b63181c","title":"链表上只有一个页（页多了要维护，成本大）"},{"parent":"7def7db7de31","children":[],"id":"7cd971f5259d","title":"undo页使用情况不能超过3/4"}],"id":"7def7db7de31","title":"重用条件"},{"parent":"1ef84a60dc38","children":[{"parent":"3beaba9b98a7","children":[],"id":"2bd2bfd36040","title":"insert 重用可以直接覆盖"},{"parent":"3beaba9b98a7","image":{"w":71,"h":40,"url":"http://cdn.processon.com/6155585ae0b34d091234d063?e=1632986730&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:_EAKBg3SuFfBgr8oBnWI8-I09uw="},"children":[],"id":"71da6643fa8e","title":"update 重用为了维护MVCC，不能覆盖，只能追加到后面"}],"id":"3beaba9b98a7","title":"页类型重用情况"}],"collapsed":false,"id":"1ef84a60dc38","title":"重用undo页"},{"parent":"9b6e37ebf5b1","children":[{"parent":"27caa6bd722f","children":[],"id":"34cc30eab369","title":"1. 发生改动申请回滚段（循环使用分配回滚段）"},{"parent":"27caa6bd722f","children":[],"id":"a30a65b0901a","title":"2. 查看cached链表是否有可重用的undo slot，有则分配；没有则遍历undo slot集合"},{"parent":"27caa6bd722f","children":[],"id":"31f56286643e","title":"3. 申请一个页为链表首页（记录段信息）"},{"parent":"27caa6bd722f","children":[],"id":"95a9d6ec73dd","title":"4. 将undo日志写入页中"}],"collapsed":false,"id":"27caa6bd722f","title":"为事务分配undo页链表详细过程"}],"collapsed":true,"id":"9b6e37ebf5b1","title":"undo日志"}],"collapsed":true,"id":"4c6942f01b00","title":"事务的实现"},{"parent":"d79ae754fc9d","children":[{"parent":"ec0a91225b07","children":[],"id":"db6af4ec5aac","title":"MVCC多版本并发控制：利用版本链并发控制访问相同记录的行为"},{"parent":"ec0a91225b07","children":[],"id":"653390a4a4fd","title":"使用MVCC无锁并发控制解决读-写的带来的脏读，不可重复读，幻读问题（读读不会有并发问题，写写需要加锁来保证）"},{"parent":"ec0a91225b07","children":[{"parent":"0f9440e31833","image":{"w":52,"h":24,"url":"http://cdn.processon.com/615565611efad4243d42c9b0?e=1632990066&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:vzRED-55qP314p5f7iuye8qgTbI="},"children":[],"id":"ea6774581346","title":"行记录的隐藏列roll_point会指向上一次修改的undo日志，而undo日志的roll_point又会指向上一次修改的undo日志，从而形成版本链"},{"parent":"0f9440e31833","children":[],"id":"7472bee37e02","title":"undo日志只记录索引列或修改的列"}],"id":"0f9440e31833","title":"版本链"},{"parent":"ec0a91225b07","children":[{"parent":"fda80e70580c","children":[],"id":"f15726d264e7","title":"使用read view来决定版本链中哪个版本是当前事务可见的"},{"parent":"fda80e70580c","children":[{"parent":"fcb830fe96f2","children":[],"id":"8dff1b2e03bb","title":"m_ids：当前活跃事务id列表"},{"parent":"fcb830fe96f2","children":[],"id":"496bd1756600","title":"min_trx_id：生成read view时，当前活跃事务最小id(m_ids中的最小值)"},{"parent":"fcb830fe96f2","children":[],"id":"f4fcd9c85992","title":"max_trx_id：生成read view时，系统要分配的下一个事务id(分配事务id是自增的)"},{"parent":"fcb830fe96f2","children":[],"id":"bd30f03d431b","title":"create_trx_id: 生成read view事务的事务id"}],"id":"fcb830fe96f2","title":"read view属性"},{"parent":"fda80e70580c","children":[{"parent":"2d71c1a16174","children":[],"id":"6b9790ac6a4b","title":"版本就是undo日志，版本trx_id就是undo日志事务id"},{"parent":"2d71c1a16174","children":[],"id":"1d3dc8055f46","title":"如果该版本trx_id等于create_trx_id，说明这个版本是当前事务自己修改的，可以访问"},{"parent":"2d71c1a16174","children":[],"id":"0f0e23702eed","title":"如果该版本trx_id小于min_trx_id，比当前活跃的事务最小id还小说明这个版本事务已经提交，可以访问"},{"parent":"2d71c1a16174","children":[],"id":"95938cc448d8","title":"如果该版本trx_id大于等于max_trx_id，说明该版本在read view生成后才修改，不能访问"},{"parent":"2d71c1a16174","children":[{"parent":"f2e6ad66fd64","children":[],"id":"1d6eba20c3d4","title":"存在，说明该事务活跃，不能访问"},{"parent":"f2e6ad66fd64","children":[],"id":"9b1d1a6bafe1","title":"不存在，说明该事务已提交，可以访问"}],"id":"f2e6ad66fd64","title":"如果该版本trx_id在min_trx_id与max_trx_id之间，就要在m_ids中查找trx_id是否存在"},{"parent":"2d71c1a16174","children":[],"id":"4128be80573c","title":"如果该版本不能访问就沿着版本链访问下一个版本，再做上面的判断"}],"id":"2d71c1a16174","title":"read view判断版本链中版本可见的规则"}],"id":"fda80e70580c","title":"read view"},{"parent":"ec0a91225b07","children":[{"parent":"0bce789457d6","children":[],"id":"3b2ee3050733","title":"read uncommitted 直接读到最新版本"},{"parent":"0bce789457d6","note":"1. 事务A读取一些记录,未提交 (此时会产生一个read view)\n2. 事务B修改事务A读取的记录,提交事务B\n3. 事务A再读取,又会生成一个read view,此时它可以看到事务B修改的记录值,所以read committed会出现不可重复读","children":[],"id":"01482e31f608","title":"read committed 每次读取数据时会产生一个read view"},{"parent":"0bce789457d6","note":"1. 事务A读取一些记录,未提交 (生成read view)\n2. 事务B修改事务A读取的记录,提交事务B\n3. 因为repeatable read只在第一次读取数据时才生成read view,此时事务A再读取,使用的还是步骤1那个read view,所以可见性和步骤1时一样,步骤2中事务B修改的,看不到","children":[{"parent":"6521a6d22f53","note":"- 事务A读取一些记录,未提交 (生成read view)\n- 事务B添加满足事务A刚刚读取搜索条件的记录,提交事务B\n- 事务A修改刚刚事务B添加的记录\n- 事务A再次读  ,发生幻读,因为事务A修改事务B添加的记录时会把记录对应的trx_id改为事务A的事务id,所以再次读时,根据read view规则这些修改的值也可见了","children":[],"id":"8078a63e2640","title":"repeatable read可以禁止绝大部分幻读， 只有部分幻读不能禁止"}],"id":"6521a6d22f53","title":"repeatable&nbsp;read&nbsp;在第一次读取数据时才生成read&nbsp;view"},{"parent":"0bce789457d6","children":[],"id":"660b79f9362d","title":"seriablizable 加锁"}],"style":{"color":"#000"},"id":"0bce789457d6","title":"各个隔离级别解决隔离性的缘故"},{"parent":"ec0a91225b07","children":[],"id":"5058f6e7557d","title":"如果read view不再访问版本链中undo日志已经delete mark的记录，就可以执行purge真正删除记录"}],"collapsed":true,"id":"ec0a91225b07","title":"MVCC"},{"parent":"d79ae754fc9d","children":[{"parent":"b58088788c7b","children":[{"parent":"9b75bc52082b","children":[{"parent":"5c8c23da30a0","children":[{"parent":"265f6b352804b781","children":[],"id":"2c5c006b47384c1e","title":"锁数据库实例"},{"parent":"265f6b352804b781","children":[],"id":"33d30d18514a0516","title":"数据同步"}],"id":"265f6b352804b781","title":"全局锁"},{"parent":"5c8c23da30a0","children":[{"parent":"b544211a1dd4b790","children":[],"id":"545342d1f06ae8cd","title":"表X锁"},{"parent":"b544211a1dd4b790","children":[],"id":"73448aae5a0bd902","title":"表S锁"},{"parent":"b544211a1dd4b790","children":[{"parent":"b620694c1b34438a","children":[],"id":"2e07842e2729993d","title":"修改表结构"}],"id":"b620694c1b34438a","title":"元数据所&nbsp;"}],"id":"b544211a1dd4b790","title":"表锁"},{"parent":"5c8c23da30a0","children":[],"id":"fc82355b6b9ec926","title":"页锁"},{"parent":"5c8c23da30a0","children":[{"parent":"435b023d260c","children":[],"id":"7251b936b0bd","title":"X锁 排他锁"},{"parent":"435b023d260c","children":[],"id":"43ad371aee95","title":"S锁 共享锁"}],"id":"435b023d260c","title":"行锁（类比读写锁）"}],"collapsed":false,"id":"5c8c23da30a0","title":"锁的作用域"},{"parent":"9b75bc52082b","children":[{"parent":"0240e17db6638ec0","children":[{"parent":"5f959b4e021c","children":[],"id":"63ee0cb00ad0","title":"意向往表中加锁，要获取表锁时，如何判断表中是否存在行锁？不可能去遍历，因此查看是否有意向锁"},{"parent":"5f959b4e021c","children":[],"id":"e945200096e2","title":"IX 意向排它锁"},{"parent":"5f959b4e021c","children":[],"id":"d72bbe85c75c","title":"IS 意向共享锁"}],"id":"5f959b4e021c","title":"意向锁 （表锁）"},{"parent":"0240e17db6638ec0","children":[{"parent":"cdfc88eeaa3d","children":[],"id":"7d39004c6e1c2e8f","title":"隐式锁"},{"parent":"cdfc88eeaa3d","children":[],"id":"aad8de3a2e00","title":"使用insert 时遇到gap锁会阻塞，加上插入意向锁：不会阻塞其他锁"},{"parent":"cdfc88eeaa3d","children":[],"id":"4463dcce95225c6a","title":"理解成行锁，当不冲突时不生成锁信息；其他事务要获取该记录的锁时根据该事务ID判断事务是否活跃，活跃则说明没提交，显示的帮它创建锁信息 X记录锁，然后在给自己生成锁信息 等待"}],"id":"cdfc88eeaa3d","title":"插入意向锁"},{"parent":"0240e17db6638ec0","children":[{"parent":"e9f1e43e766a","children":[{"parent":"3ddb9c4f57b43054","children":[],"id":"c7d901d153bd0ba0","title":"插入就要获取自增长锁"},{"parent":"3ddb9c4f57b43054","children":[],"id":"06a2952bc4cf7ac1","title":"并发性能差"}],"id":"3ddb9c4f57b43054","title":"传统模式"},{"parent":"e9f1e43e766a","children":[{"parent":"10d9b0efdec2e6f6","children":[],"id":"2ed89d6b1cb7","title":"对于插入明确数量时使用互斥量保证自增"},{"parent":"10d9b0efdec2e6f6","children":[],"id":"2bee6c1a7a2ff730","title":"对于插入不明确数量的情况下使用自增长锁"}],"id":"10d9b0efdec2e6f6","title":"连续模式"},{"parent":"e9f1e43e766a","children":[{"parent":"f632de3f3da89514","children":[],"id":"52de7df42e3ce134","title":"都使用互斥量加锁，并发下交叉分配，可能“漏”自增值"}],"id":"f632de3f3da89514","title":"交叉模式"}],"id":"e9f1e43e766a","title":"自增长锁"},{"parent":"0240e17db6638ec0","children":[{"parent":"830054d6b563d2c1","children":[],"id":"0fe311227cc7af18","title":"悲观锁可以是行锁的record"},{"parent":"830054d6b563d2c1","children":[],"id":"300a224f93d22ed0","title":"乐观锁可以加版本号"}],"id":"830054d6b563d2c1","title":"悲观锁、乐观锁"}],"id":"0240e17db6638ec0","title":"功能划分"},{"parent":"9b75bc52082b","children":[{"parent":"8dc3668e8234","children":[],"id":"c6a4e0c09fe4","title":"默认情况下的读，在并发读写时，不加锁使用mvcc来读取版本链上的记录"}],"id":"8dc3668e8234","title":"一致性非锁定读"},{"parent":"9b75bc52082b","children":[{"parent":"d05d7dd2812c","children":[],"id":"beb95d76a044","title":"加S锁 lock in share mode"},{"parent":"d05d7dd2812c","children":[],"id":"076c2f7d2277","title":"加X锁 for update"},{"parent":"d05d7dd2812c","children":[],"id":"580d1a4d6abf","title":"删改也可以看成加X锁的锁定读"}],"id":"d05d7dd2812c","title":"一致性（当前）锁定读"}],"collapsed":true,"id":"9b75bc52082b","title":"锁的划分"},{"parent":"b58088788c7b","children":[{"parent":"fd32ae000236","image":{"w":58,"h":32,"url":"http://cdn.processon.com/6155be171efad4243d436f8e?e=1633012775&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:237zB82v4JSEKI8BcFOsDydn0T0="},"children":[{"parent":"2331df92a761","children":[],"id":"7fc0ac3d540c","title":"锁这条行记录"}],"id":"2331df92a761","title":"record 记录锁"},{"parent":"fd32ae000236","image":{"w":62,"h":30,"url":"http://cdn.processon.com/6155be630e3e74663e945793?e=1633012851&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:p6qLlMUn21gr6UqwcEImsYKsPSQ="},"children":[{"parent":"9925308625ee","children":[],"id":"f25480742c48","title":"防止插入幻影记录(加gap&nbsp;lock解决幻读)"},{"parent":"9925308625ee","children":[],"id":"0ebb9528ab31","title":"禁止在加gap&nbsp;lock记录前的间隙插入记录"},{"parent":"9925308625ee","children":[],"id":"77856e628cff","title":"不限制其他事务向加了gap&nbsp;lock的记录加record&nbsp;lock"}],"id":"9925308625ee","title":"gap 锁"},{"parent":"fd32ae000236","image":{"w":87,"h":42,"url":"http://cdn.processon.com/6155be4f6376891279442f50?e=1633012831&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:fo8_1VrKnqS0Q-kLrhpmdpsU3G8="},"children":[],"id":"49c46ec241eb","title":"next-key 锁 = record 记录锁 + gap 锁"},{"parent":"fd32ae000236","children":[{"parent":"ab02870fb3d2","children":[],"id":"8cca63b17d2d","title":"当事务插入记录时因为碰到其他事务加的gap锁而等待生成的锁结构"}],"id":"ab02870fb3d2","title":"insert&nbsp;intention&nbsp;lock"},{"parent":"fd32ae000236","children":[],"id":"8f7c0ed8436c","title":"隐式锁&nbsp;:&nbsp;依靠记录属性trx_id(事务id)来保护不被别的事务改动改记录"}],"collapsed":true,"id":"fd32ae000236","title":"innodb行锁的算法"},{"parent":"b58088788c7b","image":{"w":82,"h":36,"url":"http://cdn.processon.com/6155bf11e401fd6be07b48bf?e=1633013025&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:fmXK5GReR_v6bPTOlaqX0u_VTLo="},"children":[{"parent":"901b32b2952a","note":"1. **同一个事务加锁**\n2. **记录在同一页**\n3. **加锁类型相同**\n4. **等待状态一致**","children":[],"id":"56ecaf04589a","title":"满足条件可以放在同一个锁内存中"}],"collapsed":true,"id":"901b32b2952a","title":"锁内存结构"},{"parent":"b58088788c7b","children":[{"parent":"376f8d00fcf2","children":[],"id":"63089594e00b","title":"MySQL检测到死锁发生时，让undo log小的事务进行回滚"},{"parent":"376f8d00fcf2","children":[],"id":"c4617bbff9d2","title":"死锁检测wait-for graph 图成环则发生死锁"},{"parent":"376f8d00fcf2","children":[],"id":"3e204d5689c3","title":"排查方案：show&nbsp;engine&nbsp;innodb&nbsp;status&nbsp;查看最近一次死锁，联表查询information_schema库中的innodb_trx、innodb_locks、innodb_lock_waits表等查看相关SQL、事务、锁、等待时间等信息；再去业务层排查代码写法问题，更改顺序等手段阻止死锁发生<br>"}],"collapsed":false,"id":"376f8d00fcf2","title":"死锁"},{"parent":"b58088788c7b","children":[{"parent":"e0f4152721e0","children":[],"id":"fe42fb2a2969","title":"加锁情况与隔离级别、SQL语句、扫描范围、使用索引、MySQL版本都有关"},{"parent":"e0f4152721e0","children":[{"parent":"bf6298397acc","children":[{"parent":"6e98e99b5a31","children":[],"id":"05cc15f42958e531","title":"使用read view被称为一致性读"},{"parent":"6e98e99b5a31","children":[{"parent":"439fabc22e21","children":[],"id":"1f4a7cce6715","title":"RU 不加锁"},{"parent":"439fabc22e21","children":[],"id":"25b0a7e1da33","title":"RC 不加锁，每次读生成read view"},{"parent":"439fabc22e21","children":[],"id":"a217c7a77068","title":"RR 不加锁，第一次读生成read view"},{"parent":"439fabc22e21","children":[],"id":"d1a26e2fd58f","title":"S 自动提交使用read view（因为整个事务只有这个读），不自动提交使用S锁next key"}],"id":"439fabc22e21","title":"select"}],"id":"6e98e99b5a31","title":"普通读（一致性读）"},{"parent":"bf6298397acc","children":[{"parent":"dac859b6d19e","children":[],"id":"c60b120724d9","title":"select X/S锁"},{"parent":"dac859b6d19e","children":[{"parent":"9eaab8f7b021","children":[],"id":"8c1ed19dc865c351","title":"记录字段空间未改变（原地修改）锁定读"},{"parent":"9eaab8f7b021","children":[],"id":"30273631dae4ec0c","title":"记录字段空间改变、主键值被改变（先删后增）定位位置的过程是锁定读，后续新增隐式锁保护"}],"id":"9eaab8f7b021","title":"update"},{"parent":"dac859b6d19e","children":[],"id":"38ed8cd025dc","title":"delete"}],"id":"dac859b6d19e","title":"锁定读"},{"parent":"bf6298397acc","children":[{"parent":"1753fd08b6b7","children":[{"parent":"984cd89e8072","children":[],"id":"3ebad724d2eb9b9c","title":"先读取记录最新版本，如果不满足修改条件则跳过（不加锁），尽量让update少被阻塞"}],"id":"984cd89e8072","title":"隔离级别不大于RC的update"}],"id":"1753fd08b6b7","title":"半一致性读"},{"parent":"bf6298397acc","children":[{"parent":"1c04055dda5d","children":[{"parent":"f8ae0caf7657","children":[{"parent":"014e710fb673","children":[],"id":"7f44144fa8b5abdb","title":"默认使用事务ID隐式锁，不阻塞"},{"parent":"014e710fb673","children":[],"id":"b591a63eb0502be9","title":"遇到gap锁阻塞等待，生成插入意向锁"}],"id":"014e710fb673","title":"正常情况下不加锁"},{"parent":"f8ae0caf7657","children":[{"parent":"e1e0765c76e0","children":[{"parent":"711026a400682290","children":[],"id":"08b8c0366e3f0c32","title":"插入的聚集索引记录包含了一个trx_id，然后其他事务要获取该记录的x锁或者s锁的时候，会判断trx_id是不是当前活跃事务。如果是帮该记录创建一个x锁，然后为自己创建一个锁，进入等待。"}],"id":"711026a400682290","title":"隐式X的record锁，冲突时才转换为显示锁"},{"parent":"e1e0765c76e0","children":[{"parent":"2874a9118b8c","children":[],"id":"0da174e8c80f","title":"RU/RC 的隔离级别下加S的record"},{"parent":"2874a9118b8c","children":[],"id":"c188555fa7be","title":"RR/S 的隔离级别下加S的next-key"}],"id":"2874a9118b8c","title":"主键"},{"parent":"e1e0765c76e0","children":[{"parent":"2438507e527b","children":[],"id":"b69ca6df1926","title":"无论什么隔离级别都加S的next-key（RC情况下也是，不加会重复）"}],"id":"2438507e527b","title":"唯一二级索引"},{"parent":"e1e0765c76e0","children":[],"id":"3aeb863ac13d","title":"如果 使用ON&nbsp;DUPLICATE&nbsp;KEY update 子句时，上述的S锁要换成X锁（因为有修改）"}],"collapsed":false,"id":"e1e0765c76e0","title":"遇到重复冲突（主键/唯一二级索引）"},{"parent":"f8ae0caf7657","children":[{"parent":"50de4aeed4a7","children":[],"id":"7b1a4574a0fa","title":"子表外键可以在父表中找到，父表加S的record锁"},{"parent":"50de4aeed4a7","children":[],"id":"f8010f0731c4","title":"子表外键不能在父表中找到，RC不加锁、RR在下一个记录加gap锁"}],"id":"50de4aeed4a7","title":"外键检查"}],"id":"f8ae0caf7657","title":"insert"}],"id":"1c04055dda5d","title":"新增&nbsp;"}],"collapsed":false,"id":"bf6298397acc","title":"SQL 语句&nbsp;"},{"parent":"e0f4152721e0","children":[{"parent":"a54db7312609","children":[{"parent":"ec66f5e7c8f3","children":[],"id":"e4464ed94dc4","title":"对于锁定读来说，会根据查询条件寻找符合条件的记录进行锁定"},{"parent":"ec66f5e7c8f3","children":[],"id":"ce9af8de4cbc","title":"如果使用update 并且需要修改的列为二级索引的列，则还会去二级索引中进行锁定（delete同理，删除所有索引上该记录）"}],"id":"ec66f5e7c8f3","title":"聚簇索引"},{"parent":"a54db7312609","children":[{"parent":"4ff8cb7cdc65","children":[],"id":"6a8142f92e42","title":"如果使用二级索引则先对二级索引记录进行加锁再回表对聚簇索引记录进行加锁"},{"parent":"4ff8cb7cdc65","children":[],"id":"6692eba79fa3","title":"在这种场景下，对索引加锁顺序不同会造成死锁，比如说一个SQL先加二级索引再加聚簇索引；另一个SQL先加聚簇索引再加二级索引"}],"id":"4ff8cb7cdc65","title":"二级索引"}],"collapsed":true,"id":"a54db7312609","title":"使用索引"},{"parent":"e0f4152721e0","children":[{"parent":"414c67eb7c80","children":[{"parent":"c000b9fc799f5d93","children":[],"id":"62b22813cad0","title":"RC使用record&nbsp;"},{"parent":"c000b9fc799f5d93","children":[],"id":"1f23c61bba50f7e5","title":"RR&nbsp;使用next&nbsp;key&nbsp;（加锁区间为左开右闭）"}],"id":"c000b9fc799f5d93","title":"RC、RR下的加锁"},{"parent":"414c67eb7c80","children":[{"parent":"5ebfebce987cc23c","children":[{"parent":"18ce5a049d4b96b8","children":[],"id":"905ad1ed5ddd6e6a","title":"该记录区间加间隙锁"}],"id":"18ce5a049d4b96b8","title":"找不到记录"},{"parent":"5ebfebce987cc23c","children":[{"parent":"a91bc8823a7f6ed6","children":[],"id":"8471afb689e234b4","title":"唯一索引：间隙锁退化为记录锁 （有且只有一条记录）"},{"parent":"a91bc8823a7f6ed6","children":[],"id":"6045de3ea7b29045","title":"非唯一索引：无法判断记录数量，类似范围查找，直到找到第一条不满足条件的记录，临键锁退化为间隙锁"}],"id":"a91bc8823a7f6ed6","title":"如果能找到记录"}],"id":"5ebfebce987cc23c","title":"等值查询"},{"parent":"414c67eb7c80","children":[{"parent":"097daa069a3ba2b8","children":[{"parent":"443c0452efd91739","children":[],"id":"5570859eb5ef749b","title":"5.7中唯一索引也会查询到不满足条件的第一条记录，8.0修复"}],"id":"443c0452efd91739","title":"一直查询到不满足条件的第一条记录然后临键锁退化为间隙锁"},{"parent":"097daa069a3ba2b8","children":[],"id":"c4221e002ee72de0","title":"等值查询的非唯一索引 就可以 看成 范围查询"}],"id":"097daa069a3ba2b8","title":"范围查询"},{"parent":"414c67eb7c80","children":[{"parent":"a5ad0006c510b19a","children":[],"id":"62b0a1398d2a355f","title":"要使用什么索引就在那个索引上加锁"},{"parent":"a5ad0006c510b19a","children":[],"id":"9a0bf81cf0d847dc","title":"遍历到哪条记录，就在哪条记录上加锁"}],"id":"a5ad0006c510b19a","title":"索引加锁"},{"parent":"414c67eb7c80","children":[{"parent":"b30cf577f593c745","children":[],"id":"c9ad468e68d2e8ca","title":"RR遍历到的记录，即使不满足查询条件也不会释放锁，事务提交才释放"},{"parent":"b30cf577f593c745","children":[],"id":"0e7e593551c57031","title":"RC遍历到的记录，不满足条件的记录会释放锁"}],"id":"b30cf577f593c745","title":"RC、RR下的释放锁"}],"collapsed":true,"id":"414c67eb7c80","title":"细节加锁规则"}],"collapsed":false,"id":"e0f4152721e0","title":"加锁情况"}],"collapsed":true,"id":"b58088788c7b","title":"锁"}],"collapsed":true,"id":"d79ae754fc9d","title":"事务日志与锁篇"},{"parent":"root","lineStyle":{"randomLineColor":"#02ACF4"},"children":[{"parent":"3f7fb4dcd6ed09c4","children":[{"parent":"15d377f72d13","children":[{"parent":"1a1245237230442e","children":[{"parent":"68c1f0dd410a0592","children":[{"parent":"2fc2f6fcf057d297","children":[{"parent":"b9865c4cf1a13d3e","children":[],"id":"3c6806d8658031fc","title":"部分场景有问题"}],"id":"b9865c4cf1a13d3e","title":"statement 记录SQL"},{"parent":"2fc2f6fcf057d297","children":[{"parent":"d4f727539f4c8221","children":[],"id":"b5c65add07cf579e","title":"批量数据修改 性能差"}],"id":"d4f727539f4c8221","title":"row 记录数据"},{"parent":"2fc2f6fcf057d297","children":[],"id":"b60c174fce4d583f","title":"mixed 混合"}],"id":"2fc2f6fcf057d297","title":"类型"},{"parent":"68c1f0dd410a0592","children":[{"parent":"d57105d21bfddfe0","children":[],"id":"5c3e603880540076","title":"一般不使用statement，因为主从会造成数据不一致"},{"parent":"d57105d21bfddfe0","children":[],"id":"c7be78b1d01e4916","title":"使用mixed或row，row可以方便回滚数据，即使误操作数据也可以进行回滚"}],"id":"d57105d21bfddfe0","title":"选择"}],"collapsed":true,"id":"68c1f0dd410a0592","title":"binlog"},{"parent":"1a1245237230442e","image":{"w":48,"h":28,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c8ae0744d527aafbe33f?e=1708512958&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:lqorQRF9JBG87HhFLngOWtm4GAQ=","direction":"up"},"children":[{"parent":"d19b5c303ec1870e","children":[],"id":"a29743b755733863","title":"主节点dump线程监听binlog日志变动并通知从节点复制"},{"parent":"d19b5c303ec1870e","children":[],"id":"82b47d43173db5b9","title":"从节点IO线程拉取日志复制写入中继日志relay log中"},{"parent":"d19b5c303ec1870e","children":[],"id":"c1c7e24ca8a64e74","title":"从节点SQL线程根据中继日志relay log恢复数据"},{"parent":"d19b5c303ec1870e","children":[],"id":"12c65ebc6bf3dfaa","title":"![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/076ebae1f5c448d0b1563944cb07fa7f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=895&amp;h=532&amp;s=63151&amp;e=png&amp;b=fbfbf1)"}],"collapsed":true,"id":"d19b5c303ec1870e","title":"流程"},{"parent":"1a1245237230442e","children":[{"parent":"84fbc96c6eee62f2","children":[{"parent":"cbcd3a24905af83e","children":[{"parent":"8719dcb733c470df","children":[],"id":"f138206195ec78e1","title":"所有从节点响应，主节点才响应"},{"parent":"8719dcb733c470df","children":[],"id":"0b74194d877c15f8","title":"性能慢 ，数据强一致"}],"id":"8719dcb733c470df","title":"同步复制"},{"parent":"cbcd3a24905af83e","children":[{"parent":"01fa3b85b2e9fa02","children":[],"id":"d72629c8668ac936","title":"通知完从节点，主节点就响应"},{"parent":"01fa3b85b2e9fa02","children":[],"id":"c3c9a84402330a9a","title":"性能最快，主从延迟时数据不一致"}],"id":"01fa3b85b2e9fa02","title":"异步复制"},{"parent":"cbcd3a24905af83e","children":[{"parent":"25e31dd50f5cf20a","children":[],"id":"d0a60872e963ddc5","title":"只要有一个从节点响应，主节点就响应"},{"parent":"25e31dd50f5cf20a","children":[],"id":"a9ca340aff2f57ee","title":"存在网络问题（超时）切换为异步复制，网络正常后再切回来"}],"id":"25e31dd50f5cf20a","title":"半同步复制"},{"parent":"cbcd3a24905af83e","children":[{"parent":"77bf348aaf3d1d3c","children":[],"id":"93fb5c7c78aa75dc","title":"半同步会先提交事务再等从节点响应，此时宕机会存在数据一致性问题"},{"parent":"77bf348aaf3d1d3c","children":[],"id":"fa345922a686662e","title":"在半同步基础上，主节点收到响应才提交事务"}],"id":"77bf348aaf3d1d3c","title":"增强半同步复制"},{"parent":"cbcd3a24905af83e","children":[{"parent":"23c61592301cc5fc","children":[],"id":"b948a2626072397b","title":"延时恢复数据"}],"id":"23c61592301cc5fc","title":"延迟复制"}],"collapsed":true,"id":"cbcd3a24905af83e","title":"方式"},{"parent":"84fbc96c6eee62f2","children":[{"parent":"f6f04cbb56b6e83b","children":[],"id":"af93031929dc05ac","title":"数据一致性： 同步 》 无损 》 半同步 》 异步"},{"parent":"f6f04cbb56b6e83b","children":[],"id":"516cde7c88a92022","title":"性能：异步 》 半同步 》 无损 》 同步"}],"collapsed":true,"id":"f6f04cbb56b6e83b","title":"对比"}],"id":"84fbc96c6eee62f2","title":"不同方式与对比"}],"collapsed":true,"id":"1a1245237230442e","title":"主从复制"},{"parent":"15d377f72d13","children":[{"parent":"b4d9b786b4a2c557","children":[],"id":"df871603ad51151e","title":"主从延迟时间&nbsp;seconds_behind_master"},{"parent":"b4d9b786b4a2c557","children":[{"parent":"c41727a7e1d79e3a","image":{"w":94,"h":25,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c8f70744d527aafbe354?e=1708513031&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:DeGool2q-UMqSGyYolW4LGqYbho=","direction":"up"},"children":[{"parent":"ab6ba8c09d3a5b6f","children":[],"id":"fb4d96d351893e15","title":"完成数据同步才切换，中间状态只读不写，从机延迟时间要小于一定阈值"}],"collapsed":true,"id":"ab6ba8c09d3a5b6f","title":"可靠"},{"parent":"c41727a7e1d79e3a","children":[{"parent":"9e12cade81bfa0ad","children":[{"parent":"4b8eeb96473894f8","image":{"w":90,"h":50,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c95470c9a07bf622e98d?e=1708513124&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:OEsEBeBl2iO0xENzIsx-K6C5bZA=","direction":"up"},"children":[],"id":"b860f9f4ade4bb22","title":"statement/mixed情况下主键混乱"},{"parent":"4b8eeb96473894f8","image":{"w":98,"h":48,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c9930744d527aafbe373?e=1708513187&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ptnM6zURarz8tUviLpXoZ9-2OGk=","direction":"up"},"children":[],"id":"ec15f6322caf01cd","title":"row情况下报错（提前暴露问题）"}],"id":"4b8eeb96473894f8","title":"直接完成切换，一边处理请求一边数据同步"}],"collapsed":true,"id":"9e12cade81bfa0ad","title":"可用"}],"id":"c41727a7e1d79e3a","title":"策略"},{"parent":"b4d9b786b4a2c557","children":[{"parent":"408794b38e8f6d0a","children":[],"id":"c26d43a162f748d4","title":"主从切换时 基于全局事务ID 无需指定恢复数据点"}],"collapsed":true,"id":"408794b38e8f6d0a","title":"GTID复制"}],"collapsed":false,"id":"b4d9b786b4a2c557","title":"主从切换"},{"parent":"15d377f72d13","children":[{"parent":"a6a18abc7e73effc","children":[{"parent":"9c298c390cead390","children":[{"parent":"540a26f12b22521e","children":[],"id":"fe6440d62148f210","title":"主机频繁接收写，从机需要同步"},{"parent":"540a26f12b22521e","children":[],"id":"f21e668b648b7dd2","title":"从机频繁接收读 高QPS"}],"collapsed":true,"id":"540a26f12b22521e","title":"从机压力大"},{"parent":"9c298c390cead390","children":[],"id":"5f0ea4aa6386e3db","title":"大事务"},{"parent":"9c298c390cead390","children":[],"id":"1870499b265d64c4","title":"从机配置差，多台从机共用一台机器"},{"parent":"9c298c390cead390","children":[],"id":"15f0edcebe76d7fc","title":"主从参数不一致（缓冲池、IO等参数）"},{"parent":"9c298c390cead390","children":[],"id":"e8f5b7245f1109b8","title":"从机本身就是延迟复制"}],"id":"9c298c390cead390","title":"来源"},{"parent":"a6a18abc7e73effc","children":[{"parent":"e5d3de031b1e7339","children":[],"id":"542502d577cfff0f","title":"canal 监听 （通知改为监听）"},{"parent":"e5d3de031b1e7339","children":[],"id":"8624db646d08fcc3","title":"调整从机IO参数 增强IO能力"},{"parent":"e5d3de031b1e7339","children":[{"parent":"6ebbb2e882b27a6f","children":[{"parent":"de4d9faa7ee37cbe","children":[],"id":"21bcd169d116ad64","title":"粒度为库，如果只有一个库或热点都在一个库时还是单线程"}],"id":"de4d9faa7ee37cbe","title":"5.6 并行复制"},{"parent":"6ebbb2e882b27a6f","children":[{"parent":"532f785bc59d5834","children":[],"id":"e2204c02d5426b9c","title":"基于组提交，同批事务经过redo log&nbsp;prepare阶段就不会有锁冲突，可以并行执行"},{"parent":"532f785bc59d5834","children":[{"parent":"e084c68be0bdd3b4","children":[],"id":"471853b83ef2caf7","title":"binlog_group_commit_sync_delay&nbsp;参数，表示延迟多少微秒后才调用&nbsp;fsync"},{"parent":"e084c68be0bdd3b4","children":[],"id":"a89293dd8b8f90e2","title":"binlog_group_commit_sync_no_delay_count&nbsp;参数，表示累积多少次以后才调用&nbsp;fsync。"}],"id":"e084c68be0bdd3b4","title":"可以通过调整参数 故意拉长组提交时间，拉慢主机速度，加快从机恢复速度"}],"id":"532f785bc59d5834","title":"5.7 并行复制"},{"parent":"6ebbb2e882b27a6f","children":[{"parent":"8171bf5d0d2b7103","children":[],"id":"50b8f4d1207d6a28","title":"COMMIT_ORDER，表示的就是前面介绍的，根据同时进入&nbsp;prepare&nbsp;和&nbsp;commit&nbsp;来判断是否可以并行的策略。"},{"parent":"8171bf5d0d2b7103","children":[],"id":"2769613cb78dcdf4","title":"WRITESET，表示的是对于事务涉及更新的每一行，计算出这一行的&nbsp;hash&nbsp;值，组成集合&nbsp;writeset。如果两个事务没有操作相同的行，也就是说它们的&nbsp;writeset&nbsp;没有交集，就可以并行。"},{"parent":"8171bf5d0d2b7103","children":[],"id":"d018c18f1d528c0e","title":"WRITESET_SESSION，是在&nbsp;WRITESET&nbsp;的基础上多了一个约束，即在主库上同一个线程先后执行的两个事务，在备库执行的时候，要保证相同的先后顺序。"}],"id":"8171bf5d0d2b7103","title":"5.7.22 并行复制"}],"collapsed":false,"id":"6ebbb2e882b27a6f","title":"并行复制"}],"id":"e5d3de031b1e7339","title":"缩短主从延迟"},{"parent":"a6a18abc7e73effc","children":[{"parent":"7b5f3cc8d9443479","children":[],"id":"a55a9254b08f29e7","title":"业务沟通"},{"parent":"7b5f3cc8d9443479","children":[{"parent":"5b5a13009e7704e3","children":[],"id":"26f9d6aa9ed5958a","title":"大量强一致性读，主机压力大"}],"collapsed":true,"id":"5b5a13009e7704e3","title":"直接查主库"},{"parent":"7b5f3cc8d9443479","children":[{"parent":"11a60dc87f2a2f05","children":[],"id":"bddd4c362f58d296","title":"查看 偏移量、GTID等信息"},{"parent":"11a60dc87f2a2f05","children":[],"id":"fc266274d727a929","title":"粒度大，不靠谱"}],"collapsed":true,"id":"11a60dc87f2a2f05","title":"等待从机没延迟"},{"parent":"7b5f3cc8d9443479","children":[{"parent":"79afebff6add51ae","children":[],"id":"9e93e13ba11ee24a","title":"强一致性"},{"parent":"79afebff6add51ae","children":[],"id":"6a4dcda13e4bc3a5","title":"性能差"}],"collapsed":true,"id":"79afebff6add51ae","title":"使用同步复制"},{"parent":"7b5f3cc8d9443479","children":[{"parent":"b71a0762566ea83d","children":[],"id":"683146bd6822c485","title":"一主一从 相当于同步复制"},{"parent":"b71a0762566ea83d","children":[{"parent":"6945a25a4d1f1f89","children":[],"id":"0108f9f02c6b34af","title":"实现复杂"},{"parent":"6945a25a4d1f1f89","children":[{"parent":"d9f27adc2b4e3812","note":"`select master_pos_wait(file, pos,[timeout])` 用于判断当前偏移量是否已经超过该位置\n\nfile 为 binlog 文件，pos 为 偏移量，timeout为等待的时间\n\n使用半同步复制时，一个从节点已经响应，其他从节点应该也是快要响应的状态，因此可以等待一段时间 50ms，100ms...\n\n如果超时则可以在业务中再去查主机，要注意如果都超时就相当于又全打在主机上\n\n通过该SQL能够以主库日志中偏移量的方式判断是否已执行该事务（已执行返回0）：\n\n1. 写操作完成时顺便获取binlog文件和偏移量的信息\n2. 携带这两个参数加上超时时间使用该SQL判断是否已执行\n3. 如果返回0（已执行）则查从机，否则查主机（注意限流）","children":[],"id":"5e7c6f544bedc847","title":"判断偏移量"},{"parent":"d9f27adc2b4e3812","note":"` select wait_for_executed_gtid_set(gtid_set, [timeout])`\n\nSQL的作用是判断是否已经执行GTID集合 返回0，超时返回1\n\n流程类似：\n\n1. 写操作时获取GTID集合\n2. 根据GTID集合判断从机是否已执行事务\n3. 已执行查询，否则查主库或限流","children":[],"id":"9fefe15cad9abd5a","title":"判断GTID集合"}],"id":"d9f27adc2b4e3812","title":"方式"}],"id":"6945a25a4d1f1f89","title":"一主多从 需要判断事务是否重做"}],"collapsed":true,"id":"b71a0762566ea83d","title":"使用半同步复制"}],"id":"7b5f3cc8d9443479","title":"解决方案"}],"collapsed":true,"id":"a6a18abc7e73effc","title":"主从延迟"},{"parent":"15d377f72d13","children":[{"parent":"9b4f974ebce1ccfd","children":[{"parent":"a095f0feaed0911f","children":[],"id":"ad1b8b902717b35d","title":"读写分离"},{"parent":"a095f0feaed0911f","children":[],"id":"5b1a697f4ae89896","title":"多从导致主节点压力大"},{"parent":"a095f0feaed0911f","children":[],"id":"8c40cb76f653d839","title":"多读场景"}],"collapsed":true,"id":"a095f0feaed0911f","title":"一主 一/多从"},{"parent":"9b4f974ebce1ccfd","children":[{"parent":"064047917d87461e","children":[],"id":"4484618d70834d20","title":"解决 多从导致主节点压力大"},{"parent":"064047917d87461e","children":[],"id":"4af841ba2f9b7285","title":"延时更高"},{"parent":"064047917d87461e","children":[],"id":"3f72f3ed0da5fb98","title":"多读场景"}],"collapsed":true,"id":"064047917d87461e","title":"一主 多从 层级"},{"parent":"9b4f974ebce1ccfd","children":[{"parent":"575f7f308c9bda38","children":[],"id":"599f0315e644a802","title":"平摊读写"},{"parent":"575f7f308c9bda38","children":[],"id":"de035d5c53cb62ab","title":"写A读B有延时"},{"parent":"575f7f308c9bda38","children":[],"id":"a75268a151db5229","title":"读写平分场景"},{"parent":"575f7f308c9bda38","children":[{"parent":"76e20bd5514a449d","children":[],"id":"37ff7696c08c8119","title":"生成binlog给另一个主节点同步数据时，会造成循环同步"},{"parent":"76e20bd5514a449d","children":[],"id":"d5661246aef9a4b9","title":"根据server id 判断是否给另一个节点同步数据，如果id是自己说明该日志是自己发的，不同步数据"}],"id":"76e20bd5514a449d","title":"双主循环复制问题"}],"collapsed":true,"id":"575f7f308c9bda38","title":"双主"},{"parent":"9b4f974ebce1ccfd","children":[{"parent":"028ae8679405b355","children":[],"id":"6daf2b08151bdeed","title":"多主分摊写"},{"parent":"028ae8679405b355","children":[],"id":"a32e806cdd6ac905","title":"只有从有全量数据"},{"parent":"028ae8679405b355","children":[],"id":"715fdda2ef4230ff","title":"多写场景"}],"collapsed":true,"id":"028ae8679405b355","title":"多主一从"}],"collapsed":true,"id":"9b4f974ebce1ccfd","title":"主从架构"}],"collapsed":true,"id":"15d377f72d13","title":"主从"},{"parent":"3f7fb4dcd6ed09c4","children":[{"parent":"d791f73c7b7df20d","children":[{"parent":"b9f6c157f0d7","children":[],"id":"b231c0a8dac3","title":"保持能不分就不分的原则（分离后系统复杂度上升），性能下降时先尝试使用缓存、异步等其他手段进行优化性能"},{"parent":"b9f6c157f0d7","children":[],"id":"03694072670f","title":"先尝试使用主从架构，读写分离"},{"parent":"b9f6c157f0d7","children":[],"id":"472c1049b875","title":"并发高分库"},{"parent":"b9f6c157f0d7","children":[],"id":"ae111e3299f3","title":"数据量大分表"}],"collapsed":false,"id":"b9f6c157f0d7","title":"什么情况下进行分库分表？"},{"parent":"d791f73c7b7df20d","children":[{"parent":"ff9c179dff4f9742","children":[{"parent":"13b7686b2828d286","children":[],"id":"19b27b2d9cc60ab1","title":"商品、订单、用户等模块共用一个库"}],"id":"13b7686b2828d286","title":"垂直分库"},{"parent":"ff9c179dff4f9742","children":[{"parent":"9814c533375de656","children":[],"id":"7a2bc801b6b4bc3f","title":"随着业务量上升各个服务对应一个库或多个库"}],"id":"9814c533375de656","title":"水平分库"}],"id":"ff9c179dff4f9742","title":"分库"},{"parent":"d791f73c7b7df20d","children":[{"parent":"05edde673c9eb129","children":[{"parent":"d27880221b16c5ab","children":[],"id":"118d26d72a62cdd2","title":"根据字段进行拆分，拆分后表结构不同"}],"id":"d27880221b16c5ab","title":"垂直拆分"},{"parent":"05edde673c9eb129","children":[{"parent":"66f10bb1df445194","children":[],"id":"68999fc39a39c98e","title":"根据数据量拆分，比如ID基数、偶数各放在一个表，表结构不变，数据变"}],"id":"66f10bb1df445194","title":"水平拆分"}],"id":"05edde673c9eb129","title":"分表"},{"parent":"d791f73c7b7df20d","children":[{"parent":"44443b9c55e9","children":[],"id":"c6422c5009ba","title":"基于本地AOP实现，拦截SQL后重写路由规则"},{"parent":"44443b9c55e9","children":[],"id":"4e59dd48eacb","title":"代理MySQL服务器，代理用户请求进行转发"}],"id":"44443b9c55e9","title":"实现思路"},{"parent":"d791f73c7b7df20d","children":[{"parent":"6a41062f6a44","children":[{"parent":"777979a3ecf4","children":[],"id":"79743d1b2a03","title":"代理"}],"id":"777979a3ecf4","title":"mycat&nbsp;&nbsp;"},{"parent":"6a41062f6a44","children":[{"parent":"ca91b35b917a","children":[{"parent":"777cf314f440","children":[],"id":"8d42210ca3a5","title":"本地AOP"}],"id":"777cf314f440","title":"jdbc&nbsp;"},{"parent":"ca91b35b917a","children":[{"parent":"47cf6506206d","children":[],"id":"c80fcc11d8d6","title":"代理"}],"id":"47cf6506206d","title":"proxy&nbsp;"}],"id":"ca91b35b917a","title":"sharding share"}],"id":"6a41062f6a44","title":"中间件"},{"parent":"d791f73c7b7df20d","children":[{"parent":"db7b30016e4ec83b","children":[],"id":"7e303de39b1b","title":"性能下降"},{"parent":"db7b30016e4ec83b","children":[{"parent":"253ec33d414c5ff1","children":[],"id":"053e9ccb7400660f","title":"联表字段冗余，但要修改其他"},{"parent":"253ec33d414c5ff1","children":[],"id":"0afe69eb435c03db","title":"业务层整合"}],"id":"253ec33d414c5ff1","title":"跨库关联"},{"parent":"db7b30016e4ec83b","children":[{"parent":"feefc358717402ee","children":[],"id":"022ec9f3e6319c12","title":"redis自增"},{"parent":"feefc358717402ee","children":[],"id":"883f9536534651a1","title":"雪花算法"}],"id":"feefc358717402ee","title":"分布式ID"},{"parent":"db7b30016e4ec83b","children":[{"parent":"8c966f867e9a1c32","children":[],"id":"4d85c944190708d5","title":"分片查询后业务层整合"}],"id":"8c966f867e9a1c32","title":"排序、聚合"},{"parent":"db7b30016e4ec83b","children":[{"parent":"b14eff8be3daea41","children":[],"id":"cc3d728ce9cf2c22","title":"client路由 或 proxy 代理"}],"id":"b14eff8be3daea41","title":"多数据源"},{"parent":"db7b30016e4ec83b","children":[{"parent":"70e7614b919ff21f","children":[],"id":"15b3a4b0893e9f46","title":"TCC"},{"parent":"70e7614b919ff21f","children":[],"id":"615778944cc397dd","title":"XA"},{"parent":"70e7614b919ff21f","children":[],"id":"e7c588829f252861","title":"AT"},{"parent":"70e7614b919ff21f","children":[],"id":"ff2307ec2907500a","title":"MQ"}],"id":"70e7614b919ff21f","title":"分布式事务"}],"id":"db7b30016e4ec83b","title":"带来的问题"}],"collapsed":true,"id":"d791f73c7b7df20d","title":"分库分表"},{"parent":"3f7fb4dcd6ed09c4","children":[],"id":"06c34b6f76ec9af4","title":"分库分表 + 主从 ：分库分表解决性能、主从 解决高可用"}],"collapsed":true,"id":"3f7fb4dcd6ed09c4","title":"架构篇"},{"parent":"root","lineStyle":{"randomLineColor":"#3D5EC2"},"children":[{"parent":"4aa333ba5c716536","children":[{"parent":"58ab96d31ec5b938","children":[],"id":"c8a3149383b12c2a","title":"有良好习惯，在测试、灰度可以测出慢SQL，不会到生产上"},{"parent":"58ab96d31ec5b938","children":[{"parent":"83cb0eb21b0f2ea1","children":[],"id":"f5e5fff3ad4a55fd","title":"优化器没用/用错 索引"},{"parent":"83cb0eb21b0f2ea1","children":[],"id":"fc5a7fe18d80c64f","title":"业务的并发导致阻塞 从而导致慢"}],"id":"83cb0eb21b0f2ea1","title":"生产上可能的情况"},{"parent":"58ab96d31ec5b938","children":[{"parent":"a206e42ce3f0d23c","children":[{"parent":"a76d157894ab4aad","children":[],"id":"fb32540bd2fc3a44","title":"慢SQK日志可以看到查询时间、阻塞时间、查询数据量、查询结果数量等信息"},{"parent":"a76d157894ab4aad","children":[],"id":"9f9e4c98c5e911ed","title":"如果查询时间大，根据查询数据量、结果数量和explain排查SQL（如果有多套执行计划可追踪优化器选择执行计划的日志）"},{"parent":"a76d157894ab4aad","children":[],"id":"d93c01bc50773439","title":"如果阻塞时间长，排查业务代码，查看是否为长事务等原因导致阻塞，调整隔离级别、修改业务代码来解决"}],"id":"a76d157894ab4aad","title":"查看监控工具/慢SQL日志"},{"parent":"a206e42ce3f0d23c","children":[{"parent":"973028eaa5d57112","children":[{"parent":"18aa81814fbe114d","children":[],"id":"011f15517fb7aa58","title":"show&nbsp;status&nbsp;like&nbsp;'innodb_row_lock%'"}],"id":"18aa81814fbe114d","title":"查看阻塞相关"}],"id":"973028eaa5d57112","title":"查看系统参数"}],"id":"a206e42ce3f0d23c","title":"解决方案"}],"collapsed":true,"id":"58ab96d31ec5b938","title":"慢SQL"},{"parent":"4aa333ba5c716536","children":[{"parent":"fdf65395c0160a04","children":[{"parent":"aa2a1442777d1b70","children":[{"parent":"e73767f534e3b319","children":[],"id":"507a26584cda6804","title":"show&nbsp;variables like&nbsp;'%conn%'&nbsp;&nbsp;查看连接数、最大连接数"}],"id":"e73767f534e3b319","title":"排查连接数是否已满"}],"collapsed":true,"id":"aa2a1442777d1b70","title":"连接"},{"parent":"fdf65395c0160a04","children":[{"parent":"3afc4ec23961f33a","children":[{"parent":"991f34cf7916","children":[{"parent":"93f11c7c4496b337","children":[],"id":"729215bce5ac32af","title":"top 查看CPU最高的是不是mysqld，记录pid"},{"parent":"93f11c7c4496b337","children":[],"id":"e86a066847bacf71","title":"top -Hp&nbsp; pid&nbsp; : 查看 CPU 最高的线程，记录pid"},{"parent":"93f11c7c4496b337","children":[],"id":"d47418b54e85d1a6","title":"查看performance_schema库中线程信息：SELECT&nbsp;*&nbsp;FROM&nbsp;performance_schema.threads&nbsp;where&nbsp;THREAD_OS_ID&nbsp;=&nbsp;pid;"},{"parent":"93f11c7c4496b337","children":[{"parent":"5d6a2e28df58a65e","children":[],"id":"a0ab9a9aae3b","title":"explain"},{"parent":"5d6a2e28df58a65e","children":[],"id":"d3d9c4a34ca2","title":"show profiles"}],"id":"5d6a2e28df58a65e","title":"分析该线程在执行什么SQL 并 解决"}],"id":"93f11c7c4496b337","title":"链路排查"},{"parent":"991f34cf7916","children":[{"parent":"7b51e7a08caf","children":[],"id":"c94fc57246fecfb5","title":"show processlist 查看当前线程列表（如果导致CPU飙升的线程执行完，会看不到，同时CPU也会下降）"}],"id":"7b51e7a08caf","title":"大致观察"}],"id":"991f34cf7916","title":"排查方式"},{"parent":"3afc4ec23961f33a","children":[{"parent":"c331876960cd","children":[],"id":"7801ed29dd74","title":"高并发请求"},{"parent":"c331876960cd","children":[],"id":"179d6664fb01","title":"慢SQL"},{"parent":"c331876960cd","children":[{"parent":"2e4c18502afa","children":[],"id":"de65d429e148ee7d","title":"show&nbsp;engine&nbsp;innodb&nbsp;status&nbsp;，再查表，定位业务层代码，进行修改"}],"id":"2e4c18502afa","title":"死锁"},{"parent":"c331876960cd","children":[],"id":"56cd8ba9ae0d","title":"虚拟机、OS等问题..."}],"id":"c331876960cd","title":"可能出现的原因"},{"parent":"3afc4ec23961f33a","children":[{"parent":"89bf2cd3a7595ff6","children":[{"parent":"a59ddf69fca7","children":[],"id":"a8243641487e","title":"Java服务缓存失效 或 没加锁 ，高并发请求打到DB上导致CPU飙升"},{"parent":"a59ddf69fca7","children":[{"parent":"0cd3b5e721fc","children":[],"id":"868983ab17ed","title":"缓存续期"},{"parent":"0cd3b5e721fc","children":[],"id":"aa5b87bd487f","title":"查DB前加锁"}],"id":"0cd3b5e721fc","title":"解决方案"}],"id":"a59ddf69fca7","title":"高并发请求导致CPU飙升"},{"parent":"89bf2cd3a7595ff6","children":[{"parent":"e9e463e9d662","children":[],"id":"dd5add49527f","title":"没做缓存预热，高并发请求（参数不同）打到DB，并且DB索引失效"},{"parent":"e9e463e9d662","children":[{"parent":"58649e87e935","children":[],"id":"3e5413e8ac19","title":"缓存预热"},{"parent":"58649e87e935","children":[],"id":"b07f10c592c5","title":"优化索引"}],"id":"58649e87e935","title":"解决方案"}],"id":"e9e463e9d662","title":"大量慢SQL导致CPU飙升"},{"parent":"89bf2cd3a7595ff6","children":[{"parent":"50c9b52abdae","children":[{"parent":"f11afca372b33414","children":[],"id":"ffe013ade9b6ca50","title":"select xx where&nbsp; a = X and b = X for update 两个事务执行当前读，查询条件a不同，b相同；其中索引有a,b 执行计划使用索引交集合并；事务一先使用a索引，事务二先使用b索引，事务一获取完a索引记录后锁住聚簇索引上的主键然后去b索引上寻找被阻塞，而事务二锁住b索引记录去聚簇索引上锁时被阻塞"},{"parent":"f11afca372b33414","children":[],"id":"729cdc0209f15c59","title":"事务隔离级别使用rc&nbsp; 虽然在索引上寻找时不满足条件的记录会释放，但是还是死锁"},{"parent":"f11afca372b33414","children":[{"parent":"d091c1e335c86f3c","children":[],"id":"c91da3552a1c3e1f","title":"它们获取锁的顺序不有序导致成环，改成a,b联合索引（不熟悉业务代码的情况）"}],"id":"d091c1e335c86f3c","title":"解决方案"}],"id":"f11afca372b33414","title":"多索引、使用索引合并、聚簇索引，使用索引不同，获取锁顺序不同导致死锁"},{"parent":"50c9b52abdae","children":[{"parent":"a542e552289ea178","children":[],"id":"39cd3a52b8b333cc","title":"使用RR，先删除时使用gap 禁止插入，从而同时禁止插入（同区间gap锁可以同时获取）"},{"parent":"a542e552289ea178","children":[],"id":"04bf9cbd325fc77d","title":"解决方案：使用RC，不加gap锁"}],"id":"a542e552289ea178","title":"业务层 需要批量修改数据，使用多线程先删除再新增，使用RR，线程删除时同时获取gap锁导致无法新增从而死锁"},{"parent":"50c9b52abdae","note":"","image":{"w":300,"h":88.21621621621621,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6571e7e09cb364352cc1a040?e=1701967344&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:pKvu5X2KGJ-iwMo7rSGcrD0_vJY=","direction":"up"},"children":[{"parent":"185c63cbd994","note":"","children":[],"id":"3534229366b4","title":"一个事务中执行两个insert语句:a2,a1；其中新增a1时会插入到a2前面（a1\\a2的列为唯一索引）"},{"parent":"185c63cbd994","children":[],"id":"4bef1e3c9e89","title":"两个事务同时执行：T1执行完a2，给a2加上隐式X record锁；此时T2新增a2遇到重复，加S的next key锁，此时a2的隐式锁变为显示X record锁，T2被该X record锁阻塞；接着T1执行a1，由于新增a1在a2前面，此时被T2的gap锁阻塞，进入死锁状态"},{"parent":"185c63cbd994","children":[],"id":"3c12f151988f","title":"解决：每个事务只新增一条/先新增a1再新增a2"}],"id":"185c63cbd994","title":"重复键insert导致死锁"}],"id":"50c9b52abdae","title":"死锁导致CPU飙升"}],"collapsed":false,"id":"89bf2cd3a7595ff6","title":"案例"}],"collapsed":true,"id":"3afc4ec23961f33a","title":"CPU飙升"},{"parent":"fdf65395c0160a04","children":[{"parent":"d2a89eb763657969","children":[],"id":"3e4a6b2f1e870568","title":"iotop 、pstack"},{"parent":"d2a89eb763657969","children":[{"parent":"546b363d5358d74d","children":[],"id":"859f3245caf49c1e","title":"批量修改、删除请求同时进来"},{"parent":"546b363d5358d74d","children":[],"id":"a37c80e419814813","title":"高并发请求 磁盘处理不过来"},{"parent":"546b363d5358d74d","children":[],"id":"409617c19263d240","title":"日志处理不过来"},{"parent":"546b363d5358d74d","children":[],"id":"9926a9a908d029c5","title":"缓冲池太小"},{"parent":"546b363d5358d74d","children":[],"id":"3f24fc4c4861d3d0","title":"查大表全表扫描从磁盘加载数据"},{"parent":"546b363d5358d74d","children":[],"id":"491e1e7841103391","title":"临时表太大，转到磁盘存储"}],"id":"546b363d5358d74d","title":"原因"},{"parent":"d2a89eb763657969","children":[{"parent":"9b886755fea48c43","children":[],"id":"b8bf74f9c5e32b64","title":"磁盘升级固态"},{"parent":"9b886755fea48c43","children":[],"id":"1bbc1cc3fd57643c","title":"缓冲池大小设置70%-75%"},{"parent":"9b886755fea48c43","children":[],"id":"9c4ee08fad18ac55","title":"引入缓存 降低读压力"},{"parent":"9b886755fea48c43","children":[],"id":"be213e5f9870b2e2","title":"引入异步 降低写压力"}],"id":"9b886755fea48c43","title":"解决方案"}],"collapsed":true,"id":"d2a89eb763657969","title":"IO 飙升"},{"parent":"fdf65395c0160a04","children":[{"parent":"ac9f041c37ae","children":[],"id":"3d01150ffbdb","title":"查看MySQL、OS系统日志进行定位"},{"parent":"ac9f041c37ae","children":[],"id":"bc94934d835d","title":"MySQL应用进程被异常关闭后，守护线程会进行重启，可能占用内存过大出现OOM导致一直被kill"}],"collapsed":false,"id":"ac9f041c37ae","title":"MySQL服务器异常重启"}],"collapsed":false,"id":"fdf65395c0160a04","title":"机器"}],"collapsed":true,"id":"4aa333ba5c716536","title":"排查篇"},{"parent":"root","lineStyle":{"randomLineColor":"#0F80C4"},"children":[{"parent":"e68dc1c96fee","children":[{"parent":"b17e24c7dda7","children":[{"parent":"406f4039c42d","children":[{"parent":"5075ff784634","children":[],"id":"fa12706ab46e","title":"基于LSN，复制ibd文件前后记录LSN，复制完ibd再复制对应的LSN"}],"id":"5075ff784634","title":"热备份"},{"parent":"406f4039c42d","children":[],"id":"f40524810f68","title":"冷备份"}],"id":"406f4039c42d","title":"类型"},{"parent":"b17e24c7dda7","children":[{"parent":"05eb83809896","children":[{"parent":"f36ef385c549","children":[],"id":"e554254a9e0c","title":"复制frm、ibd、redolog文件"},{"parent":"f36ef385c549","children":[],"id":"480344dc1bd7","title":"恢复快但存在跨平台、版本问题"}],"id":"f36ef385c549","title":"裸文件备份"},{"parent":"05eb83809896","children":[{"parent":"5d2be8d60c7a","children":[],"id":"cf8bbe90b158","title":"Linux：mysqldump -add-drop-database --database 库名 &gt; xx.sql"},{"parent":"5d2be8d60c7a","children":[],"id":"bd4bf15c8672","title":"MySQL： resource /xxx/xxx/xx.sql"}],"id":"5d2be8d60c7a","title":"逻辑备份 SQL"},{"parent":"05eb83809896","children":[{"parent":"e8e30977edcf","children":[],"id":"0e491065fc6e","title":"MySQL： flush logs"},{"parent":"e8e30977edcf","children":[],"id":"c4bf2f9a38af","title":"linux : mysqlbinlog xxx"}],"id":"e8e30977edcf","title":"日志备份 binlog"}],"id":"05eb83809896","title":"文件内容"},{"parent":"b17e24c7dda7","children":[{"parent":"f7e88086f1df","children":[],"id":"aa611cfdb2db","title":"完全备份"},{"parent":"f7e88086f1df","children":[],"id":"f2468998bde3","title":"增量备份"}],"id":"f7e88086f1df","title":"数据内容"}],"collapsed":true,"id":"b17e24c7dda7","title":"备份分类"}],"collapsed":true,"id":"e68dc1c96fee","title":"备份与恢复篇"},{"parent":"root","lineStyle":{"randomLineColor":"#0F80C4"},"children":[{"parent":"faf2d8c3d9ea5b27","children":[{"parent":"aa801023414b1735","children":[{"parent":"45a41a0d6c2f0a80","image":{"w":41,"h":31,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65e1930516848c3099e4812f?e=1709285653&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:20NkGzi9-hJ6yWgfmIMVJfb3At8=","direction":"up"},"children":[{"parent":"c33b0d52853ef198","children":[],"id":"a3ab0b3e17da4493","title":"组件: 连接器、分析器、优化器、执行器、缓存、存储引擎、日志系统、文件系统、备份工具"},{"parent":"c33b0d52853ef198","children":[{"parent":"213e5e435381331f","children":[{"parent":"e4a75683c079ea28","children":[],"id":"17c16c33ffa493d5","title":"客户端携带用户信息请求服务端（TCP通信）"},{"parent":"e4a75683c079ea28","children":[],"id":"d480adeec9f0cfa0","title":"服务端使用线程处理认证请求"},{"parent":"e4a75683c079ea28","children":[],"id":"dc4909b48bf0ef4b","title":"服务端认证成功后等待客户端发送SQL"},{"parent":"e4a75683c079ea28","children":[],"id":"afcc77a0e14fd8de","title":"连接器池化技术复用连接"}],"collapsed":true,"id":"e4a75683c079ea28","title":"连接管理"},{"parent":"213e5e435381331f","children":[{"parent":"12b29214aaba50f9","children":[{"parent":"46b6029dd7517c65","children":[],"id":"2a7ea68e68a85c17","title":"缓存查询语句，不推荐代价大"}],"id":"46b6029dd7517c65","title":"查询缓存"},{"parent":"12b29214aaba50f9","children":[{"parent":"0a1a3c1087685e43","children":[],"id":"9c087dd724685731","title":"判断SQL语法是否有误"}],"id":"0a1a3c1087685e43","title":"（分析器）语法解析"},{"parent":"12b29214aaba50f9","children":[{"parent":"19899d74321dd425","children":[],"id":"1bb0212124a756b2","title":"优化SQL语句，生成合适的查询计划"}],"id":"19899d74321dd425","title":"（优化器）查询优化"},{"parent":"12b29214aaba50f9","children":[{"parent":"93c97b55a60af45e","children":[],"id":"f89d08f73aa56a82","title":"调用存储引擎层接口，将查到的数据与其他搜索条件匹配，匹配则放入结果集，待会一起返回给客户端"}],"id":"93c97b55a60af45e","title":"（执行器）执行查询计划"}],"collapsed":true,"id":"12b29214aaba50f9","title":"解析与优化"}],"collapsed":false,"id":"213e5e435381331f","title":"server层"},{"parent":"c33b0d52853ef198","children":[{"parent":"b58829594e8e6a11","children":[],"id":"de197fd8c8263c21","title":"server层调用存储引擎层提供的接口，真正由存储引擎来对文件进行读写"}],"collapsed":true,"id":"b58829594e8e6a11","title":"存储引擎层"}],"collapsed":true,"id":"c33b0d52853ef198","title":"服务端结构"},{"parent":"45a41a0d6c2f0a80","image":{"w":54,"h":22,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65dd7c3db3ecff464b798f0c?e=1709017677&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:fR0neI0VmldFmk3PL64lQpiPi_s=","direction":"up"},"children":[{"parent":"e943feb7be06f10f","children":[{"parent":"1bf4ca3c7dbc2ec1","children":[{"parent":"ce49ab9c938ab1a7","children":[],"id":"37e114784b7f08a7","title":"一个表数据文件（表名.ibd）对应一个独立表空间"},{"parent":"ce49ab9c938ab1a7","children":[{"parent":"bb52d21a8098ccd1","children":[],"id":"8d7916b478b3313b","title":"独立表由若干个区组成"}],"id":"bb52d21a8098ccd1","title":"独立表结构"}],"id":"ce49ab9c938ab1a7","title":"独立表空间"},{"parent":"1bf4ca3c7dbc2ec1","children":[{"parent":"c3ccfde0b1509aa1","children":[],"id":"6511c089431d35e7","title":"与独立表空间类似，只不过是用来服务元数据（为了管理用户记录而引入的数据）的"}],"id":"c3ccfde0b1509aa1","title":"系统表空间"}],"collapsed":true,"id":"1bf4ca3c7dbc2ec1","title":"表空间"},{"parent":"e943feb7be06f10f","children":[{"parent":"df1779a9069b0bb1","children":[],"id":"309d37abac843e76","title":"由若干零散页与区组成"},{"parent":"df1779a9069b0bb1","children":[],"id":"52025618d040f311","title":"段是逻辑上的概念，一个索引对应叶子节点段和非叶子节点段"},{"parent":"df1779a9069b0bb1","children":[{"parent":"fddb8f972cd5706d","children":[],"id":"53dc5006be678151","title":"为了防止存储一点数据就直接使用一个区，所以先分配碎片区中的零散页"},{"parent":"fddb8f972cd5706d","children":[],"id":"a8e395f936b4dd6e","title":"段使用32个碎片区页面后，开始用区分配"}],"id":"fddb8f972cd5706d","title":"段的分配空间"},{"parent":"df1779a9069b0bb1","children":[{"parent":"ddbc8132082830fe","children":[{"parent":"fbdd558331869b1e","children":[{"parent":"6731d6a20d975acc","children":[],"id":"4a43d9b468fd0d39","title":"如果有，就申请这个碎片区的页使用"},{"parent":"6731d6a20d975acc","children":[],"id":"c17132962b06ee47","title":"如果没有，则在FREE链表中获取一个空闲区，此时这个区状态变为空闲碎片区，加入FREE_FRAG链表（后面的段也是来这个碎片页，直到它没有空闲页，加入FULL_PRAG链表）"}],"id":"6731d6a20d975acc","title":"查看表空间FREE_FRAG链表是否有剩余空闲页的碎片区"}],"id":"fbdd558331869b1e","title":"数据少时"},{"parent":"ddbc8132082830fe","children":[{"parent":"5c7bbdc4b5e47c48","children":[],"id":"d01b7f160da86533","title":"每次直接申请FREE链表中的空闲页，该页加入NOT_FULL链表，存满记录后放入FULL链表（后续也是重新申请空闲页的操作）"}],"id":"5c7bbdc4b5e47c48","title":"数据多时（占满32个碎片区的页）"}],"collapsed":true,"id":"ddbc8132082830fe","title":"段中插入数据过程"},{"parent":"df1779a9069b0bb1","image":{"w":36,"h":22,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65dd7d0d801f707879c2b961?e=1709017885&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:r31gOS9C0g1Pdy624cXVK8qtKOY=","direction":"up"},"children":[],"id":"6f8e21320085ad7a","title":"叶子节点段、非叶子节点段组成索引树"}],"collapsed":true,"id":"df1779a9069b0bb1","title":"段"},{"parent":"e943feb7be06f10f","children":[{"parent":"944670f7c9f93e32","children":[],"id":"e3be668b1919e514","title":"规定一个区由64个连续的页组成（64 * 16KB = 1 MB）"},{"parent":"944670f7c9f93e32","children":[{"parent":"884b3f3cb1f7fc1a","children":[],"id":"a1b580e6fdb58007","title":"范围查询时，会从第一条记录沿着单向链表一直扫描下去，扫描完该页后根据页与页之间的双向链表扫描下一个页（因为页与页直接用双向链表连接，要求它们在物理上可以不连续），这样就会出现随机IO"}],"collapsed":true,"id":"884b3f3cb1f7fc1a","title":"为了解决大量随机IO，使用区来管理页"},{"parent":"944670f7c9f93e32","children":[{"parent":"21158ac97a757d9e","children":[{"parent":"78c7d128b8823b11","children":[{"parent":"013ca608071a1267","children":[],"id":"1a6881ac3d8575e4","title":"加入FREE链表"}],"id":"013ca608071a1267","title":"空闲的区&nbsp;"},{"parent":"78c7d128b8823b11","children":[{"parent":"36b65c2961145564","children":[],"id":"e9c751bde23c5d7f","title":"加入FREE_FRAG链表"}],"id":"36b65c2961145564","title":"有剩余空闲页面的碎片区"},{"parent":"78c7d128b8823b11","children":[{"parent":"0c335dfa6abf5868","children":[],"id":"0f8fb23a520f8ba4","title":"加入FULL_FRAG链表"}],"id":"0c335dfa6abf5868","title":"没空闲页面的碎片区"}],"collapsed":true,"id":"78c7d128b8823b11","title":"表空间管理的区"},{"parent":"21158ac97a757d9e","children":[{"parent":"cfaeb3921f811551","children":[{"parent":"30aa38cffa1adc24","children":[],"id":"41cdcfa4fa8f3ef0","title":"加入FREE链表"}],"id":"30aa38cffa1adc24","title":"同段空闲区"},{"parent":"cfaeb3921f811551","children":[{"parent":"5299b14dc1354fdf","children":[],"id":"0af536b1468b87d5","title":"加入NOT_FULL链表"}],"id":"5299b14dc1354fdf","title":"同段有空闲页的区"},{"parent":"cfaeb3921f811551","children":[{"parent":"04e252baf742f5fa","children":[],"id":"09c0f960bb1d35df","title":"加入FULL链表"}],"id":"04e252baf742f5fa","title":"同段无空闲页的区"}],"collapsed":true,"id":"cfaeb3921f811551","title":"附属某段的区"}],"id":"21158ac97a757d9e","title":"区的类型"}],"collapsed":true,"id":"944670f7c9f93e32","title":"区"},{"parent":"e943feb7be06f10f","image":{"w":29,"h":24,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65dd7c9fa38b0a62879795a8?e=1709017775&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:7fLNs-15dFjAOXy5gYS73Z9IhfE=","direction":"up"},"children":[{"parent":"cf38a7b5c449e64e","children":[],"id":"4cdfabb551d0810d","title":"innodb索引页分为多个组，整个页的记录维护成一个排序的单向链表，每个组中最大值记录被槽指向（槽记录范围） 【infimum记录表示最小值，一个记录一组；supremum记录是最大值】<br>"},{"parent":"cf38a7b5c449e64e","children":[],"id":"7cd030d85e9fb951","title":"查找过程：使用二分法定位到对应的槽，再遍历单向链表寻找"},{"parent":"cf38a7b5c449e64e","children":[],"id":"bcc66ba883573117","title":"数据页是B+树的叶子节点，为了方便范围扫描，它们之间组成双向链表"}],"collapsed":true,"id":"cf38a7b5c449e64e","title":"索引页（数据页）"},{"parent":"e943feb7be06f10f","children":[{"parent":"ba5f61b2f721c471","children":[{"parent":"91dcf90d34f7336f","children":[{"parent":"41c470737e9472d5","children":[],"id":"4731d90ee34dce34","title":"查询：将磁盘数据加载到内存"},{"parent":"41c470737e9472d5","children":[],"id":"f5e3592bed1f83d3","title":"增删改：将内存数据写入磁盘"},{"parent":"41c470737e9472d5","children":[],"id":"2ce9f9cc67e666d6","title":"内存与磁盘交互的基本单位是页（磁盘-&gt;内存，内存-&gt;磁盘）"}],"id":"41c470737e9472d5","title":"处理数据是在内存中"}],"id":"91dcf90d34f7336f","title":"页"},{"parent":"ba5f61b2f721c471","children":[{"parent":"62c76973c31470b1","image":{"w":72,"h":16,"url":"http://cdn.processon.com/6151a80f1efad4243d3b788d?e=1632744991&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:mIv40VDUCJVEIn7G33zsE2Nqulg="},"children":[{"parent":"19f6dc22722656dd","children":[],"id":"b0bc7dda6b3086bf","title":"逆序可变长字段列 + NULL标记（第几位列为NULL标记第几位为1） + 头信息（next指针、删除标识等） + 隐藏列（回滚指针、事务id、rowid） + 数据列"}],"collapsed":true,"id":"19f6dc22722656dd","title":"compact<br>"},{"parent":"62c76973c31470b1","children":[{"parent":"3835b76259d9429a","children":[],"id":"fff7110cc4c787f0","title":"与compact相比，varchar为null时都不占空间；而char为null时占满空间"}],"collapsed":true,"id":"3835b76259d9429a","title":"redundant"},{"parent":"62c76973c31470b1","children":[],"id":"60476a5ca1b5cad4","title":"溢出页：数据量太大，溢出的数据存储在溢出页中"},{"parent":"62c76973c31470b1","children":[{"parent":"43f856059eb7668c","children":[],"id":"17323f11a1f93eab","title":"比compact与redundant在发生行溢出时，行记录中占用的空间更少，数据记录在溢出页中（记录更小意味着每页记录更多，查询相同记录时，IO开销更小）"}],"collapsed":true,"id":"43f856059eb7668c","title":"compressed、dynamic"},{"parent":"62c76973c31470b1","children":[{"parent":"a776500a44edcc16","children":[],"id":"1887729b7e703f85","title":"char直接分配n个字符的空间（无论真实数据写不写满都占用，没满的用空字符占用）；varchar只占用真实数据需要的空间，还会在行记录的额外信息中记录字符长度"},{"parent":"a776500a44edcc16","children":[],"id":"6acaeb5aabd85c85","title":"char 上限255，varchar上限两个字节长度"},{"parent":"a776500a44edcc16","children":[],"id":"28a79a7c000e6095","title":"char 会截断末尾的空字符，varchar不会"},{"parent":"a776500a44edcc16","children":[],"id":"d25dbd74d33e2cc8","title":"char适合存储短，固定的字符串，字符没填充完时，时间（IO）空间开销大"},{"parent":"a776500a44edcc16","children":[],"id":"f7186ea2b39f8273","title":"char（n）表示字符长度，真正字节长度与字符集有关，有个最小长度~最大长度，存储也算可变长字符"},{"parent":"a776500a44edcc16","children":[{"parent":"223e6b98ef89d4fc","children":[{"parent":"f68e801c56d6d0c3","children":[],"id":"5b93dc3db358c708","title":"查询时char减少了字符长度判断，如果char有很多字符未填充，相比于varchar会造成空间浪费，导致查询相同量数据的IO开销更大"}],"id":"f68e801c56d6d0c3","title":"查询"},{"parent":"223e6b98ef89d4fc","children":[{"parent":"70ed7aef1257a2cb","children":[],"id":"bf434afc4949c3bd","title":"修改时，char可以就地修改，varchar空间变化了就要先删除再添加"}],"id":"70ed7aef1257a2cb","title":"修改"}],"id":"223e6b98ef89d4fc","title":"效率分析"}],"collapsed":true,"id":"a776500a44edcc16","title":"char(n)与varchar(n)区别"}],"id":"62c76973c31470b1","title":"行"}],"collapsed":true,"id":"ba5f61b2f721c471","title":"记录存储结构"}],"collapsed":false,"id":"e943feb7be06f10f","title":"空间存储"}],"collapsed":true,"id":"45a41a0d6c2f0a80","title":"结构"},{"parent":"aa801023414b1735","children":[{"parent":"061164b114c709ae","children":[{"parent":"605059929b6f806f","children":[],"id":"8a6ebf03c27e6d32","title":"建立TCP连接，加密连接采用SSL握手"},{"parent":"605059929b6f806f","children":[],"id":"c7521f714e83e4b3","title":"半双工通信（同时只能一向发送/接收）"},{"parent":"605059929b6f806f","children":[],"id":"2a1eb1c66c69fbd8","title":"连接池管理，线程复用，即使断开连接也不会销毁线程，只是抹除session会话信息"},{"parent":"605059929b6f806f","children":[],"id":"05975a2a198939d1","title":"查询 mysql.user 表 验证授权"}],"collapsed":true,"id":"605059929b6f806f","title":"建立连接"},{"parent":"061164b114c709ae","image":{"w":37,"h":21,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65e1936f5a4fe6084bac441b?e=1709285759&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:70Z5dzFxjse_azbTwAeO026k4wo=","direction":"up"},"children":[{"parent":"5823f1b95a1eae8a","children":[],"id":"2dbc33e539073d03","title":"接收查询语句"},{"parent":"5823f1b95a1eae8a","children":[],"id":"116a76e806c84e29","title":"缓存处理 查询"},{"parent":"5823f1b95a1eae8a","children":[],"id":"f80b994261cfb946","title":"分析器：分析语句语法"},{"parent":"5823f1b95a1eae8a","children":[],"id":"17a4d1ba289d785b","title":"优化器：优化SQL，根据索引选择不同执行方案，计算成本，生成它认为最优的执行计划"},{"parent":"5823f1b95a1eae8a","children":[],"id":"3957b069ecab801c","title":"执行器：根据执行计划调用存储引擎层接口，查到的记录再与其他搜索条件比较成功放入结果集，继续调用存储引擎的接口取下一条记录"}],"collapsed":true,"id":"5823f1b95a1eae8a","title":"查询流程"},{"parent":"061164b114c709ae","image":{"w":54,"h":24,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65e19389b7540b4e78c7f554?e=1709285786&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:n2kQQtsp1VbRSQxOCMlRb8OO-eI=","direction":"up"},"children":[{"parent":"dc0adcfb4c478cbf","children":[{"parent":"96bf77cf886cff29","children":[],"id":"222a318ac7cc49ef","title":"接收语句"},{"parent":"96bf77cf886cff29","children":[],"id":"1255da6068f1366f","title":"缓存处理 删除"},{"parent":"96bf77cf886cff29","children":[],"id":"d2add9d124cd8d49","title":"分析器：分析语句语法"},{"parent":"96bf77cf886cff29","children":[],"id":"a4bb0fc9b3fd1e04","title":"优化器：优化SQL，根据索引选择不同执行方案，计算成本，生成它认为最优的执行计划"}],"id":"96bf77cf886cff29","title":"前面流程类似"},{"parent":"dc0adcfb4c478cbf","children":[{"parent":"b246927f0dd2753a","children":[],"id":"ebfed375c3e03985","title":"如果在则修改数据，后续刷入磁盘（checkpoint）"},{"parent":"b246927f0dd2753a","children":[],"id":"d80fd8fbb3d187e0","title":"如果不在则需要先将数据页加载到缓冲池再处理或者使用change buffer优化&nbsp;"}],"id":"b246927f0dd2753a","title":"判断数据页是否在缓冲池"},{"parent":"dc0adcfb4c478cbf","children":[{"parent":"0e89036ecaf564a3","children":[{"parent":"f44ececcb47cec0d","children":[],"id":"1d102348a182ad3c","title":"3.1 redo log write&nbsp;"},{"parent":"f44ececcb47cec0d","children":[],"id":"96925457fb9a2f74","title":"3.2 binlog write"},{"parent":"f44ececcb47cec0d","children":[],"id":"a61507cf90a3d93f","title":"3.3 redolog fsync"},{"parent":"f44ececcb47cec0d","children":[],"id":"ed49d3b82c43e4e6","title":"3.4 binlog fsync"},{"parent":"f44ececcb47cec0d","children":[],"id":"ac6b02e25c860b6e","title":"3.5 redolog commit"}],"id":"f44ececcb47cec0d","title":"两阶段提交"}],"id":"0e89036ecaf564a3","title":"在此期间会记录一些日志如undo log 和 redo log 、 binlog的两阶段提交等"}],"collapsed":true,"id":"dc0adcfb4c478cbf","title":"修改流程"}],"collapsed":true,"id":"061164b114c709ae","title":"执行流程"}],"collapsed":true,"id":"aa801023414b1735","title":"结构流程篇"},{"parent":"faf2d8c3d9ea5b27","children":[{"parent":"01f19ba153ac88a7","children":[{"parent":"0bc5f80c502eae15","children":[{"parent":"d32a0030f210cd64","children":[{"parent":"8ac6bf54f58f1a4a","children":[{"parent":"d10c460efc5956bd","children":[{"parent":"600b57fc1a29c095","children":[],"id":"f879f6ddf618e431","title":"枚举用tinyint"},{"parent":"600b57fc1a29c095","children":[{"parent":"b9cd1f1adaa5a7f2","children":[],"id":"a4124bd25716ed91","title":"int(1) int(20) 都是4字节"}],"id":"b9cd1f1adaa5a7f2","title":"整形宽度占用空间无区别，只是用于补零"},{"parent":"600b57fc1a29c095","children":[],"id":"229585e7029eb389","title":"善用无符号 UNSIGNED ，可以提高一倍的容量"}],"id":"600b57fc1a29c095","title":"整型"},{"parent":"d10c460efc5956bd","children":[{"parent":"e9a9c28d5ef556ff","children":[{"parent":"0e7602b7498ed864","children":[],"id":"3e5fe68eb6b74dee","title":"4字节"}],"id":"0e7602b7498ed864","title":"float"},{"parent":"e9a9c28d5ef556ff","children":[{"parent":"c19214bf583edf68","children":[],"id":"8b057e53027aadda","title":"8字节"}],"id":"c19214bf583edf68","title":"double&nbsp;"},{"parent":"e9a9c28d5ef556ff","children":[],"id":"f147da71f5d75556","title":"精度会丢失"}],"id":"e9a9c28d5ef556ff","title":"浮点型"},{"parent":"d10c460efc5956bd","children":[{"parent":"f9b617da72fa3c7e","children":[],"id":"29b5e24d2807af42","title":"不会发生精度丢失"}],"id":"f9b617da72fa3c7e","title":"decimal"}],"collapsed":true,"id":"d10c460efc5956bd","title":"数字存储"},{"parent":"8ac6bf54f58f1a4a","children":[{"parent":"6cc294e9a4318bd7","children":[{"parent":"eec6478b1e082a62","children":[{"parent":"54613bedad5a701f","children":[],"id":"01f22c3a7586ccd0","title":"固定长度，占用空间的范围 = 长度 *【字符集最小字符，字符集最大字符】"},{"parent":"54613bedad5a701f","children":[],"id":"30abc4a50f1803b0","title":"如果占用空间未满会使用空格填充，末尾不能存储空格"},{"parent":"54613bedad5a701f","children":[],"id":"85012944e5eaa585","title":"查询时，如果空间都占满性能最好；如果空间未满剩余很多，可能会导致每页记录少，查询相同记录数量时IO次数变多"},{"parent":"54613bedad5a701f","children":[],"id":"9549138dadf86efd","title":"修改时，可以在原始记录中进行修改，性能好"}],"id":"54613bedad5a701f","title":"char"},{"parent":"eec6478b1e082a62","children":[{"parent":"9fcdb5d68388d19f","children":[],"id":"1ae13f20d4e8215d","title":"可变长长度，除了计算真实占用空间，还需要用1~2的字节记录长度（长度255以下1字节）"},{"parent":"9fcdb5d68388d19f","children":[],"id":"23e01b31976736d9","title":"末尾不会用空格填充，末尾可以存储空格"},{"parent":"9fcdb5d68388d19f","children":[],"id":"eaad807fad30d8b4","title":"查询时，占满的情况下略低于char，在空间未占满的情况下优于char"},{"parent":"9fcdb5d68388d19f","children":[],"id":"59d0ac30b9a0a4f8","title":"修改时可能变长，需要重写构建记录；如果页已满，还需要构建新的页，将新记录放入页中；频繁修改开销大"}],"id":"9fcdb5d68388d19f","title":"varchar"},{"parent":"eec6478b1e082a62","children":[{"parent":"757862d1d6045311","children":[],"id":"448fe009076e9e89","title":"固定长度、频繁写使用char"},{"parent":"757862d1d6045311","children":[],"id":"dc9be3e8b0e0622b","title":"不定长度、末尾要保存空格使用varchar"},{"parent":"757862d1d6045311","children":[],"id":"5ee4c645d0ec6d03","title":"使用时尽量让空间小，varchar不超过255（可变长长度只要1字节记录）"}],"id":"757862d1d6045311","title":"最佳实践"}],"collapsed":true,"id":"eec6478b1e082a62","title":"字符串"},{"parent":"6cc294e9a4318bd7","children":[{"parent":"ae8e82f3700297bf","children":[{"parent":"abda1000e765374e","children":[],"id":"c3ec6b6cfbda5f68","title":"使用utf8mb4字符集"}],"id":"abda1000e765374e","title":"存储emoji表情"},{"parent":"ae8e82f3700297bf","children":[{"parent":"5a0a4c8c93619988","children":[],"id":"889a525d126ee550","title":"字符存储 最长需要15字符，不符合范围查找IP段"},{"parent":"5a0a4c8c93619988","children":[{"parent":"d9685ac03692f8ec","children":[],"id":"5bf8205dcb03a3d1","title":"select&nbsp;inet_aton('192.168.0.1')"},{"parent":"d9685ac03692f8ec","children":[],"id":"57ed0b450dabd180","title":"select&nbsp;INET_NTOA(3232235521)"}],"id":"d9685ac03692f8ec","title":"无符号整型存储，4字节，可以建索引 适合范围查找；需要进行转换"}],"id":"5a0a4c8c93619988","title":"存储IP"}],"collapsed":false,"id":"ae8e82f3700297bf","title":"某些场景存储"}],"collapsed":true,"id":"6cc294e9a4318bd7","title":"字符存储"},{"parent":"8ac6bf54f58f1a4a","children":[{"parent":"cc5eb18cbf0d5ca6","children":[{"parent":"5641602194aea097","children":[{"parent":"3759dbdffe874e48","children":[],"id":"02552c6039c4772f","title":"year"}],"id":"3759dbdffe874e48","title":"年"},{"parent":"5641602194aea097","children":[{"parent":"e66d40982ccb04dd","children":[],"id":"69be8ca7b8d55841","title":"date"}],"id":"e66d40982ccb04dd","title":"日期"},{"parent":"5641602194aea097","children":[{"parent":"37a194f85ee97dba","children":[],"id":"b6b125b66603f2ea","title":"time"}],"id":"37a194f85ee97dba","title":"时间"}],"id":"5641602194aea097","title":"部分时间"},{"parent":"cc5eb18cbf0d5ca6","children":[{"parent":"d2453b7e91b824a7","children":[{"parent":"734e89f33c9b2733","children":[],"id":"2db2fb50d12c67ba","title":"DB可视化"},{"parent":"734e89f33c9b2733","children":[],"id":"921940260571e9b3","title":"固定时间 无时区"},{"parent":"734e89f33c9b2733","children":[],"id":"de4880312d3f9319","title":"可以精确到毫秒、微秒"},{"parent":"734e89f33c9b2733","children":[],"id":"87e984670f93d4f2","title":"性能较好"}],"collapsed":false,"id":"734e89f33c9b2733","title":"datetime"},{"parent":"d2453b7e91b824a7","children":[{"parent":"562d251aa9050d4b","image":{"w":300,"h":47.291666666666664,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-652d3b423df1750ad721244d?e=1697466706&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:xy4tGyT_neAJWhoEXann5-6wEVk=","direction":"up"},"children":[{"parent":"31d02c2a98fe8444","children":[],"id":"a6f3cbaa19ddcd9d","title":"DB可视化"},{"parent":"31d02c2a98fe8444","children":[],"id":"e9c21d45ad4a0ac9","title":"有时区，服务端时区改变读取时会改变"},{"parent":"31d02c2a98fe8444","children":[],"id":"4c57ccae04c818eb","title":"存储时先将本地时区转换为UTC再转换为整形时间戳存储；读取时将整形转换为UTC再转换为本地时区"},{"parent":"31d02c2a98fe8444","children":[],"id":"6e33f09299a9cd06","title":"有时间限制，需要考虑未来2038年XX解决方案"},{"parent":"31d02c2a98fe8444","children":[],"id":"fcf8f66456dedd6e","title":"可以精确到毫秒、微秒"},{"parent":"31d02c2a98fe8444","children":[],"id":"7a7b9a5ac13fc515","title":"性能不好，使用系统时区高并发下有性能开销"}],"collapsed":false,"id":"31d02c2a98fe8444","title":"timestamp"},{"parent":"562d251aa9050d4b","children":[{"parent":"1ba2dc232a0c46bb","children":[{"parent":"772db8248f4b4e96","children":[{"parent":"590484be4b66d9b9","children":[],"id":"41453155597c85ba","title":"有时间限制，空间小"}],"id":"590484be4b66d9b9","title":"int"},{"parent":"772db8248f4b4e96","children":[{"parent":"ef80d4e1192f3b9d","children":[],"id":"a6ba94ead5210903","title":"有时间限制，今生够用&nbsp;2106-2-7&nbsp;14:28:15"}],"id":"ef80d4e1192f3b9d","title":"无符号int&nbsp;"},{"parent":"772db8248f4b4e96","children":[{"parent":"96494b289dfc0e61","children":[],"id":"1d3ce41b823b56c1","title":"无时间限制"}],"id":"96494b289dfc0e61","title":"bigint"}],"id":"772db8248f4b4e96","title":"类型"},{"parent":"1ba2dc232a0c46bb","children":[],"id":"13dff05db41b88c8","title":"DB可视化不好"},{"parent":"1ba2dc232a0c46bb","children":[],"id":"9518a31eba77265f","title":"可自由转换时区 适合国际化"},{"parent":"1ba2dc232a0c46bb","children":[],"id":"ab2e46238441d69c","title":"性能最好"}],"id":"1ba2dc232a0c46bb","title":"整形"}],"collapsed":false,"id":"562d251aa9050d4b","title":"时间戳"}],"id":"d2453b7e91b824a7","title":"详细时间"},{"parent":"cc5eb18cbf0d5ca6","children":[{"parent":"ac63f8a090cb9331","children":[],"id":"8d3e7303375a1cc2","title":"只需要部分时间，年、日期、时间"},{"parent":"ac63f8a090cb9331","children":[{"parent":"0c800d3caba90f0e","children":[],"id":"ceec2f89aed44887","title":"后管时间、需要DB可视化、无时区 使用datetime"},{"parent":"0c800d3caba90f0e","children":[],"id":"596c0f1ba4cb19b2","title":"追求性能、可以自由转换时区、不注重DB可视化 使用整形时间戳"}],"id":"0c800d3caba90f0e","title":"需要详细时间"}],"id":"ac63f8a090cb9331","title":"最佳实践"}],"collapsed":true,"id":"cc5eb18cbf0d5ca6","title":"时间存储"},{"parent":"8ac6bf54f58f1a4a","children":[{"parent":"4e391ba896bcc89a","children":[],"id":"4b36dc76eae8977e","title":"TEXT"},{"parent":"4e391ba896bcc89a","children":[{"parent":"20c33b6c1752902a","children":[{"parent":"13be2b290ae0545a","children":[],"id":"f28aa7d4f2ac5bbd","title":"将大文本与关键字冷热数据分表存储（新闻标题、简介与内容）"}],"id":"13be2b290ae0545a","title":"分表存储"},{"parent":"20c33b6c1752902a","children":[{"parent":"a4d1baa5e7f0b32d","children":[],"id":"ea9cba29725b178f","title":"将大文本分为多端存储（可以是多条记录也可以是多列）"}],"id":"a4d1baa5e7f0b32d","title":"多段存储"},{"parent":"20c33b6c1752902a","children":[{"parent":"c89f0b077e4c7bc9","children":[],"id":"7ecb000e221b21da","title":"如果需求是匹配开头，要指定索引长度"},{"parent":"c89f0b077e4c7bc9","children":[],"id":"bc514029b52a939e","title":"如果需求是全文检索，可以把数据存储到搜索引擎"}],"id":"c89f0b077e4c7bc9","title":"如何建立索引？"}],"collapsed":false,"id":"20c33b6c1752902a","title":"大段文本如何存储？"}],"collapsed":false,"id":"4e391ba896bcc89a","title":"文本存储"},{"parent":"8ac6bf54f58f1a4a","children":[{"parent":"8f17cff556313344","children":[{"parent":"fb99bb2399b94a10","children":[],"id":"7f93061b7199ab08","title":"BLOB"}],"id":"fb99bb2399b94a10","title":"二进制"},{"parent":"8f17cff556313344","children":[],"id":"92a86fab94c4e2ac","title":"一般不存储在MySQL中，一般存储在文件服务器中，MySQL中只存储找到文件的URL"},{"parent":"8f17cff556313344","children":[],"id":"aee2524144657ec0","title":"如果非要在MySQL中存储，也是需要查询频率高，空间小的文件"}],"collapsed":false,"id":"8f17cff556313344","title":"文件存储"},{"parent":"8ac6bf54f58f1a4a","children":[{"parent":"b6633154ed16e44c","children":[],"id":"acba418206ecc99b","title":"NULL特殊处理，不好优化"},{"parent":"b6633154ed16e44c","children":[],"id":"3817b268dc3b14a0","title":"默认NULL认为重复值，重复值太多无法使用索引"}],"id":"b6633154ed16e44c","title":"避免NULL"}],"collapsed":true,"id":"8ac6bf54f58f1a4a","title":"类型选择"},{"parent":"d32a0030f210cd64","children":[],"id":"9665783a3b8ad2de","title":"字段类型尽量小（主键、索引列）"},{"parent":"d32a0030f210cd64","children":[],"id":"52f18ac0304f714a","title":"插入主键升序"}],"collapsed":true,"id":"d32a0030f210cd64","title":"表结构设计"},{"parent":"0bc5f80c502eae15","children":[{"parent":"224c478ebf4a509c","children":[{"parent":"fc18d1d06a8a33ea","children":[],"id":"5c04f0ed5902a69f","title":"考虑为常用于查询的列建立索引"},{"parent":"fc18d1d06a8a33ea","children":[],"id":"65b553e7cbbf3704","title":"考虑为常要排序（order，group&nbsp;by）的列创建索引"},{"parent":"fc18d1d06a8a33ea","children":[],"id":"dc0c134ca187f4fa","title":"考虑为联表查询的被驱动表关联列建立索引"},{"parent":"fc18d1d06a8a33ea","children":[],"id":"4dfa6454fd7b91a8","title":"考虑为列前缀创建索引"},{"parent":"fc18d1d06a8a33ea","children":[],"id":"765572e25cc3cd49","title":"考虑索引列中不重复值个数，cardinality值太小不偏向使用索引"},{"parent":"fc18d1d06a8a33ea","children":[],"id":"eca861d3459de24e","title":"唯一性业务要用唯一索引"},{"parent":"fc18d1d06a8a33ea","children":[],"id":"38e9cf3ff623be33","title":"避免创建过多索引"},{"parent":"fc18d1d06a8a33ea","children":[],"id":"e9fb4d914e198454","title":"避免冗余索引"}],"collapsed":true,"id":"fc18d1d06a8a33ea","title":"创建"},{"parent":"224c478ebf4a509c","children":[{"parent":"3c9403bc54b6ebd3","children":[{"parent":"c32a8491c2e92f5c","children":[],"id":"d925c7fdb403afa2","title":"不熟悉二级索引存储规则导致"},{"parent":"c32a8491c2e92f5c","children":[{"parent":"eeef42abc3c3265c","children":[],"id":"3efea909bd9adeca","title":"使用左模糊"},{"parent":"eeef42abc3c3265c","children":[],"id":"a1c7d8f177ceecb3","title":"使用联合索引不满足最左匹配原则"}],"id":"eeef42abc3c3265c","title":"案例"}],"id":"c32a8491c2e92f5c","title":"使用索引不当"},{"parent":"3c9403bc54b6ebd3","children":[{"parent":"00ca5b1fecd43f2a","children":[],"id":"c11a473d4dba6e80","title":"存储引擎层无法识别索引列"},{"parent":"00ca5b1fecd43f2a","children":[{"parent":"032d55a7fbe0547e","children":[],"id":"cbd4aa647f39f496","title":"索引列使用表达式"},{"parent":"032d55a7fbe0547e","children":[],"id":"6e9304202b573a62","title":"索引列显示/隐式使用函数"}],"id":"032d55a7fbe0547e","title":"案例"}],"id":"00ca5b1fecd43f2a","title":"存储引擎层索引失效"},{"parent":"3c9403bc54b6ebd3","children":[{"parent":"3cff3ae55eeca9e7","children":[],"id":"f9baf24def607fd6","title":"优化器认为使用索引成本太高（或重复值太多）不偏向使用索引"},{"parent":"3cff3ae55eeca9e7","children":[{"parent":"b53d1d9dc67157a5","children":[{"parent":"49c5826a791790c2","children":[],"id":"7a666eb44f1a3981","title":"is null"},{"parent":"49c5826a791790c2","children":[],"id":"21d96be4452ec9d2","title":"is not null"},{"parent":"49c5826a791790c2","children":[],"id":"757666c3ee6baf5f","title":"深分页 limit 1000000,10"}],"id":"49c5826a791790c2","title":"回表数据量大，成本变高"},{"parent":"b53d1d9dc67157a5","children":[{"parent":"7065c4a73441cd8e","children":[],"id":"56ea8d59046b285d","title":"标记唯一值的估计数量，太多值重复可能导致回表太多，不偏向使用索引"},{"parent":"7065c4a73441cd8e","children":[],"id":"f64f18bad0acaab6","title":"空闲时使用analyze table 重新统计cardinality"}],"id":"7065c4a73441cd8e","title":"重复值太多，cardinality太小导致不能使用索引"}],"id":"b53d1d9dc67157a5","title":"案例"}],"id":"3cff3ae55eeca9e7","title":"Server层索引失效"},{"parent":"3c9403bc54b6ebd3","children":[{"parent":"09decbfc98309c4d","children":[],"id":"7751f87704003036","title":"强制使用索引 force index"},{"parent":"09decbfc98309c4d","children":[],"id":"a1e15a85b2d4070c","title":"如果是cardinality导致不使用索引可以空闲时使用analyze table重新统计"}],"id":"09decbfc98309c4d","title":"优化器使用错索引"}],"collapsed":true,"id":"3c9403bc54b6ebd3","title":"索引失效"}],"collapsed":true,"id":"224c478ebf4a509c","title":"索引"},{"parent":"0bc5f80c502eae15","children":[{"parent":"74b074455a7a0cf0","children":[],"id":"ee5a3a97d35b484f","title":"避免select *"},{"parent":"74b074455a7a0cf0","children":[],"id":"c913f61bbfdd6335","title":"少用is null、or、!="},{"parent":"74b074455a7a0cf0","children":[],"id":"bb3bbb93b8312bc0","title":"联表查注意性能"},{"parent":"74b074455a7a0cf0","children":[],"id":"c9637726c406bdd6","title":"统计使用count(*)"},{"parent":"74b074455a7a0cf0","children":[],"id":"153abb3e7a276577","title":"注意优化深分页"},{"parent":"74b074455a7a0cf0","children":[],"id":"8052447ddd1e63cf","title":"读写善用limit"},{"parent":"74b074455a7a0cf0","children":[],"id":"3c47a47d42a82da5","title":"数据量小、查询次数多考虑冗余查"},{"parent":"74b074455a7a0cf0","children":[],"id":"0255a096c1e28d6e","title":"频繁写考虑批处理"},{"parent":"74b074455a7a0cf0","children":[],"id":"c23afd247973afec","title":"避免出现长事务"},{"parent":"74b074455a7a0cf0","children":[],"id":"fc242752cc5ef052","title":"考虑事务中写操作顺序"},{"parent":"74b074455a7a0cf0","children":[],"id":"86cd911e2b1a9e30","title":"考虑调整事务隔离级别"}],"collapsed":true,"id":"74b074455a7a0cf0","title":"使用"}],"id":"0bc5f80c502eae15","title":"高性能"},{"parent":"01f19ba153ac88a7","children":[{"parent":"6745884e5159834c","children":[{"parent":"893091bc08c0edce","children":[{"parent":"2ee551ad092f","children":[],"id":"26d02cd3c9fb","title":"session会话级别，将预编译的SQL缓存下来，提高复用，减少重新编译、解析的开销"},{"parent":"2ee551ad092f","children":[],"id":"ac66432380f8","title":"提高安全，防止SQL注入"}],"collapsed":true,"id":"2ee551ad092f","title":"服务端预编译SQL"},{"parent":"893091bc08c0edce","children":[{"parent":"037564fb8ea07e11","children":[{"parent":"7cfb0e051533de20","children":[],"id":"096cd4c2573067a5","title":"SHOW&nbsp;VARIABLES&nbsp;LIKE&nbsp;'optimizer_switch';"}],"id":"7cfb0e051533de20","title":"查看优化参数"},{"parent":"037564fb8ea07e11","children":[{"parent":"cdb43cd978f9c8d0","children":[{"parent":"c7e0c421a398f36a","children":[{"parent":"302dd5e0025f2fd9","children":[],"id":"d21746345392f1de","title":"是否开启存储引擎判断条件"},{"parent":"302dd5e0025f2fd9","children":[],"id":"9b2d30942ecfbb66","title":"其他存储引擎使用"}],"id":"302dd5e0025f2fd9","title":"engine_condition_pushdown=on"},{"parent":"c7e0c421a398f36a","children":[{"parent":"5ba1e47ec1f19b9c","children":[],"id":"7371153cc5da18cb","title":"是否开启ICP"}],"id":"5ba1e47ec1f19b9c","title":"index_condition_pushdown=on"}],"collapsed":true,"id":"c7e0c421a398f36a","title":"icp相关"},{"parent":"cdb43cd978f9c8d0","children":[{"parent":"8b6f4f98f219b5b6","children":[{"parent":"f451473adaec8840","children":[],"id":"104df4958311cf3f","title":"是否开启 mrr&nbsp;"}],"id":"f451473adaec8840","title":"mrr=on"},{"parent":"8b6f4f98f219b5b6","children":[{"parent":"aaf07605d4331d78","children":[],"id":"afbc5c830d17f275","title":"是否开启基于成本判断是否使用mrr"}],"id":"aaf07605d4331d78","title":"mrr_cost_based=on"}],"collapsed":true,"id":"8b6f4f98f219b5b6","title":"mrr相关"},{"parent":"cdb43cd978f9c8d0","children":[{"parent":"36df3112a4bd3007","children":[{"parent":"28817c888892bcfb","children":[],"id":"6c5c71e7160bc165","title":"是否开启Join Buffer优化"}],"id":"28817c888892bcfb","title":"block_nested_loop=on"},{"parent":"36df3112a4bd3007","children":[{"parent":"73016b853302e756","children":[],"id":"c5ca962a338d674d","title":"是否开启hash join"}],"id":"73016b853302e756","title":"hash_join=on"},{"parent":"36df3112a4bd3007","children":[{"parent":"3bfaa884e3b13e2f","children":[],"id":"71aae256206b3d58","title":"是否开启BKA算法优化"},{"parent":"3bfaa884e3b13e2f","children":[],"id":"32030fce984ffb80","title":"使用BKA算法的前提是使用被驱动表索引和MRR（mrr=on,mrr_cost_based=off）"}],"id":"3bfaa884e3b13e2f","title":"batched_key_access=off"}],"collapsed":true,"id":"36df3112a4bd3007","title":"连接相关"},{"parent":"cdb43cd978f9c8d0","children":[{"parent":"ce220ee1d03b70b6","children":[{"parent":"6b36bc8ba47a65a1","children":[],"id":"a93d14045d90fc55","title":"是否开启索引合并"}],"id":"6b36bc8ba47a65a1","title":"index_merge=on<br>"},{"parent":"ce220ee1d03b70b6","children":[{"parent":"7c6ceaea72ef5422","children":[],"id":"4c8c024e4bb0d261","title":"是否开启交集索引合并"}],"id":"7c6ceaea72ef5422","title":"index_merge_intersection=on"},{"parent":"ce220ee1d03b70b6","children":[{"parent":"0683e45b6dd4284f","children":[],"id":"c0ffd92c18d48112","title":"是否开启并集索引合并"}],"id":"0683e45b6dd4284f","title":"index_merge_union=on<br>"},{"parent":"ce220ee1d03b70b6","children":[{"parent":"d2723ec8e6cdd3de","children":[],"id":"07eeb6d8fb2d8012","title":"是否开启排序的并集索引合并"}],"id":"d2723ec8e6cdd3de","title":"index_merge_sort_union=on<br>"}],"collapsed":true,"id":"ce220ee1d03b70b6","title":"索引合并相关"},{"parent":"cdb43cd978f9c8d0","children":[{"parent":"9095f5dbcf611c56","children":[{"parent":"0fc31b9290466b29","children":[{"parent":"cfbc16a228ce24ce","children":[],"id":"f55013d9e3e82414","title":"是否开启物化"}],"id":"cfbc16a228ce24ce","title":"materialization=on"},{"parent":"0fc31b9290466b29","children":[{"parent":"526c36d85e8a026d","children":[],"id":"23e2508a97f73aea","title":"是否开启基于成本判断是否物化"}],"id":"526c36d85e8a026d","title":"subquery_materialization_cost_based=on"}],"id":"0fc31b9290466b29","title":"物化相关"},{"parent":"9095f5dbcf611c56","children":[{"parent":"70d60881e5ff4604","children":[{"parent":"a4cca6ddff0307eb","children":[],"id":"dd14286ec8ad7d48","title":"是否开启半连接优化"}],"id":"a4cca6ddff0307eb","title":"semijoin=on"},{"parent":"70d60881e5ff4604","children":[{"parent":"d2b1a6fc85343eef","children":[],"id":"7de51cc1f22de4c1","title":"是否开启firstmatch策略"}],"id":"d2b1a6fc85343eef","title":"firstmatch=on"},{"parent":"70d60881e5ff4604","children":[{"parent":"fa088517a1049819","children":[],"id":"8df98a11f571be9a","title":"是否开启loosescan策略"}],"id":"fa088517a1049819","title":"loosescan=on"},{"parent":"70d60881e5ff4604","children":[{"parent":"e7420cd7f8de8f63","children":[],"id":"269e50ac4b338e19","title":"是否开启duplicateweedout策略"}],"id":"e7420cd7f8de8f63","title":"duplicateweedout=on"}],"id":"70d60881e5ff4604","title":"半连接相关"}],"collapsed":true,"id":"9095f5dbcf611c56","title":"子查询相关"}],"id":"cdb43cd978f9c8d0","title":"优化参数"},{"parent":"037564fb8ea07e11","children":[{"parent":"d0bfae12c3b9b4e5","children":[{"parent":"d3ab20b75df603ad","image":{"w":54,"h":34,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6538775a90220c21ac75f793?e=1698202987&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:GXpJv2dlXuZtdabCGyKjAqXg_ZE=","direction":"up"},"children":[{"parent":"7e38b2bbd4c9d16b","children":[],"id":"91263c6a371efd7d","title":"将server层的where过滤下推到存储引擎层，在使用索引时利用索引包含的列对查询条件进行判断，减少回表次数"}],"id":"7e38b2bbd4c9d16b","title":"索引条件下推 Index Condition Push"},{"parent":"d3ab20b75df603ad","image":{"w":92,"h":37,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-653b57ec33b77b6c45ee69dd?e=1698391548&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:PtRx2KomiqxHmrWCaAp-IZW5qgw=","direction":"up"},"children":[{"parent":"4a3ea2a98cad9174","children":[],"id":"23a60f9e280b957b","title":"使用缓冲池将要回表的随机主键值排序后再回表，将随机IO转换为顺序IO"},{"parent":"4a3ea2a98cad9174","children":[],"id":"4a703979b6ff4080","title":"默认开启基于成本判断是否使用MRR&nbsp;"},{"parent":"4a3ea2a98cad9174","children":[],"id":"0432dc8d868309a7","title":"相关参数"}],"id":"4a3ea2a98cad9174","title":"多范围读取 multi range read&nbsp;"}],"id":"d3ab20b75df603ad","title":"减小回表开销"},{"parent":"d0bfae12c3b9b4e5","children":[{"parent":"a504c87cdf4f2eec","children":[{"parent":"7c7170d4a48f0122","children":[],"id":"d787575b0cd258d9","title":"使用的二级索引满足查询条件不用回表"}],"id":"7c7170d4a48f0122","title":"覆盖索引"}],"id":"a504c87cdf4f2eec","title":"避免回表"}],"collapsed":true,"id":"d0bfae12c3b9b4e5","title":"回表优化"},{"parent":"037564fb8ea07e11","children":[{"parent":"fb00c0b50cf8825c","image":{"w":68,"h":31,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6541a85440177f1d22701703?e=1698805348&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:QQ0FXkX3aLq82IaqjqTgwYDKfjc=","direction":"up"},"children":[{"parent":"3d0df50cd8c8237b","children":[],"id":"b3fc4afed15d09d7","title":"交集索引合并，使用二级索引过滤满足条件的记录后，用主键值取交集再回表，减少回表开销"},{"parent":"3d0df50cd8c8237b","children":[{"parent":"0d76038fbf0bb71f","children":[],"id":"43f5a5133af2de0e","title":"and 条件使用"}],"id":"0d76038fbf0bb71f","title":"使用前提"}],"collapsed":true,"id":"3d0df50cd8c8237b","title":"index merge intersection"},{"parent":"fb00c0b50cf8825c","image":{"w":90,"h":52,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6541a83db80d15776e87611f?e=1698805325&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:d2-6avobdUFWr9G-YBMZQ48lx3U=","direction":"up"},"children":[{"parent":"37252dec595d5b51","children":[],"id":"626dcf99c5b0db4d","title":"并集索引合并，使用二级索引过滤满足条件的记录后，用主键值取并集再回表"},{"parent":"37252dec595d5b51","children":[{"parent":"262e24709de7022d","children":[],"id":"ca46853465b3094a","title":"or条件使用"},{"parent":"262e24709de7022d","children":[],"id":"a7d9173148b769d9","title":"使用二级索引后主键值有序 ="}],"id":"262e24709de7022d","title":"使用前提"}],"collapsed":true,"id":"37252dec595d5b51","title":"index merge union"},{"parent":"fb00c0b50cf8825c","image":{"w":54,"h":26,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6541a829aec04a56bf484d2f?e=1698805305&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:spYvj6enelD6ZMdCqVpV7NmYy4I=","direction":"up"},"children":[{"parent":"945b183751a841c5","children":[],"id":"796841fe60a23c92","title":"并集使用前提苛刻，or 场景会用不上索引，对主键排序后再合并"}],"collapsed":true,"id":"945b183751a841c5","title":"index merge sort union"}],"collapsed":true,"id":"fb00c0b50cf8825c","title":"索引合并优化"},{"parent":"037564fb8ea07e11","children":[{"parent":"3cf624053917b45d","image":{"w":32,"h":24,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6541a4cdaec04a56bf484c91?e=1698804446&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:l-X6IjiDeytCD5tFmbIa3ETa67E=","direction":"up"},"children":[{"parent":"04680cee0c1bdd7b","children":[],"id":"9c7a443366a47b8c","title":"先从驱动表找到满足条件记录，再根据关联条件查询被驱动表"}],"id":"04680cee0c1bdd7b","title":"循环嵌套查询"},{"parent":"3cf624053917b45d","image":{"w":44,"h":36,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6541a50f40177f1d22701674?e=1698804511&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:JSs_iBNUGgI7WIIlYgopb0-CuTg=","direction":"up"},"children":[{"parent":"a4b3d4c26bd27047","children":[],"id":"a5580c7dfc3e7b14","title":"被驱动表关联条件的列增加索引，加快访问被驱动表的速度"}],"id":"a4b3d4c26bd27047","title":"索引"},{"parent":"3cf624053917b45d","image":{"w":68,"h":23,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6541a5a0950a3654a7a811a2?e=1698804656&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:4fWvG-lmk-rx98zGfPAEniuZ79Q=","direction":"up"},"children":[{"parent":"af498b114b7141ba","children":[],"id":"879feac97c8aa97b","title":"在不使用索引的情况下，使用Join Buffer缓存驱动表记录再访问被驱动表，减少访问被驱动表次数"}],"id":"af498b114b7141ba","title":"Block&nbsp;Nested&nbsp;Loop"},{"parent":"3cf624053917b45d","image":{"w":59,"h":24,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-6541a6e12e3cd330560a3427?e=1698804977&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:oTlDEkf6BsHAWz0M-yOWCOLOWhE=","direction":"up"},"children":[{"parent":"e0066214ebef05a6","children":[],"id":"4557413603ef44f9","title":"在使用被驱动表使用索引的情况下，驱动表的记录可能是乱序的，这样会产生随机IO，BKA使用MRR将随机IO变为有序IO"},{"parent":"e0066214ebef05a6","children":[],"id":"37a2947727eff3bb","title":"MRR估算成本高，需要关闭 SET&nbsp;optimizer_switch='mrr=on,mrr_cost_based=off,batched_key_access=on'"}],"id":"e0066214ebef05a6","title":"Batched&nbsp;Key&nbsp;Acess"}],"collapsed":true,"id":"3cf624053917b45d","title":"连接优化"},{"parent":"037564fb8ea07e11","children":[{"parent":"07a50042bccaf848","children":[],"id":"1fd72e3e1da2b84f","title":"物化： 将子查询结果集保存在临时表"},{"parent":"07a50042bccaf848","children":[{"parent":"818b677fdc469f61","children":[],"id":"388c472ce45b9177","title":"结果集不大，使用内存，哈希索引"},{"parent":"818b677fdc469f61","children":[],"id":"5e57e7bffb0a6d32","title":"结果集大，使用磁盘，B+树索引"}],"id":"818b677fdc469f61","title":"物化表：存储子查询结果集的临时表"},{"parent":"07a50042bccaf848","children":[{"parent":"4116c0b50d7e3f42","children":[],"id":"5737cf652563e918","title":"在一定条件下，外层查询与子查询的物化表进行内连接，但是要采取措施防止重复匹配"},{"parent":"4116c0b50d7e3f42","children":[{"parent":"2b4c697b49dbae5a","children":[{"parent":"ab1de86f877ac927","children":[],"id":"5d279f23214689fe","title":"子查询必须与IN操作符组成布尔表达式,并且在外层查询的where或or子句中出现"},{"parent":"ab1de86f877ac927","children":[],"id":"2ced5d861d6426e1","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">子查询不能是union连接起来的多个查询</span>"},{"parent":"ab1de86f877ac927","children":[],"id":"2270d09ff87acca4","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">子查询不能包含group by,having或聚集函数</span>"},{"parent":"ab1de86f877ac927","children":[],"id":"c883635302fbb6df","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">外层查询其他搜索条件要用and 与 in子查询连接</span>"}],"id":"ab1de86f877ac927","title":"使用半连接的条件"},{"parent":"2b4c697b49dbae5a","children":[{"parent":"d5119883ef67c67a","children":[],"id":"03e16124f4e77541","title":"子查询 select&nbsp;*&nbsp;from&nbsp;s1&nbsp;where&nbsp;s1.key1&nbsp;in&nbsp;(select&nbsp;m_val&nbsp;from&nbsp;s2&nbsp;where&nbsp;s2.key2&nbsp;=&nbsp;'a')&nbsp; &nbsp; &nbsp;"},{"parent":"d5119883ef67c67a","children":[],"id":"788505ff7c5bff22","title":"内连接&nbsp; select&nbsp;s1.*&nbsp;from&nbsp;s1&nbsp;inner&nbsp;join&nbsp;s2&nbsp;on&nbsp;s1.key1=s2.m_val&nbsp;where&nbsp;s2.key2='a'"},{"parent":"d5119883ef67c67a","children":[],"id":"f1de84e1a8162b57","title":"半连接:&nbsp;对于s1表的某条记录来说，只关心s2表是否存在与之匹配的记录，而不具体关心有几条，最终结果集中只保留s1的记录"},{"parent":"d5119883ef67c67a","children":[{"parent":"22153299f08bbb05","children":[],"id":"99f140b3060494a8","title":"将不相关子查询物化，再将外层查询与物化表半连接 (因为将子查询结果加入物化表会进行去重,所以也不会发生情况A)"}],"id":"22153299f08bbb05","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">Semi-join Materialization 半连接物化 </span>"}],"id":"d5119883ef67c67a","title":"子查询转半连接"},{"parent":"2b4c697b49dbae5a","children":[{"parent":"91b3eceb41c00e80","children":[{"parent":"8704b42b3a8832e4","children":[],"id":"9b38fc6f0b5586c0","title":"循环: 重复取一条外层查询记录然后去子查询表中匹配记录，在子查询表中找到则放入结果并停止（去重）；找到第一条和不找到都继续循环外层表"},{"parent":"8704b42b3a8832e4","children":[],"id":"f532b9b8caa68cc0","title":"循环查找，找到停止去重"}],"id":"8704b42b3a8832e4","title":"FirstMatch 首次匹配"},{"parent":"91b3eceb41c00e80","children":[{"parent":"9b5cccb0c6ab2c8c","children":[],"id":"b4557af59d269c4f","title":"子查询的查询列表为主键或唯一二级索引列时，最多只会出现一条匹配成功记录不会发生重复"},{"parent":"9b5cccb0c6ab2c8c","children":[],"id":"0a5ceee3800a5851","title":"唯一索引去重"}],"id":"9b5cccb0c6ab2c8c","title":"Table pullout  子查询表上拉"},{"parent":"91b3eceb41c00e80","children":[{"parent":"916fbbdb305d42f7","children":[],"id":"10a30fd6f70a31be","title":"物化表为驱动表 并且 拥有查询值的二级索引，索引有序，取第一条记录和跳过后续相同的记录"},{"parent":"916fbbdb305d42f7","children":[],"id":"c839e6244036a186","title":"驱动表 + 索引有序 去重"}],"id":"916fbbdb305d42f7","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">LooseScan 松散扫描</span>"},{"parent":"91b3eceb41c00e80","children":[{"parent":"7dfd35f392910d64","children":[],"id":"4ec3fcf4eb11c099","title":"用临时表检查结果记录主键值去重 (保证匹配成功记录不重复)"},{"parent":"7dfd35f392910d64","children":[],"id":"239178b0be957936","title":"临时表记录结果去重"}],"id":"7dfd35f392910d64","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">Duplicate Weedout 重复值消除</span>"}],"id":"91b3eceb41c00e80","title":"半连接策略"}],"collapsed":false,"id":"2b4c697b49dbae5a","title":"使用半连接的策略"},{"parent":"4116c0b50d7e3f42","children":[{"parent":"897f4b9e14fcaaa8","children":[{"parent":"ddba4ed09afa692d","children":[],"id":"28d14939954b202a","title":"使用not in"},{"parent":"ddba4ed09afa692d","children":[],"id":"6a0dd52e615c9d78","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">外层查询其他搜索条件用or与in子查询连接</span>"},{"parent":"ddba4ed09afa692d","children":[],"id":"9eb55571bd0354a3","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">select 列名 in 子查询</span>"},{"parent":"ddba4ed09afa692d","children":[],"id":"11e69193783e95a9","title":"<span style=\"color:rgb(52, 73, 94); font-size:16px; word-spacing:0.8px;\">子查询中包含union,group by,having或聚集函数</span>"}],"id":"ddba4ed09afa692d","title":"不使用 半连接的条件"},{"parent":"897f4b9e14fcaaa8","children":[],"id":"3ab06513e605cf14","title":"先将子查询物化，再查询"},{"parent":"897f4b9e14fcaaa8","children":[],"id":"07e5408536fa5c38","title":"将IN子查询转换为exists子查询（可能用到索引）"}],"collapsed":true,"id":"897f4b9e14fcaaa8","title":"不能使用半连接的策略"}],"collapsed":false,"id":"4116c0b50d7e3f42","title":"半连接"}],"collapsed":true,"id":"07a50042bccaf848","title":"子查询优化"},{"parent":"037564fb8ea07e11","children":[],"id":"faff3283780a372b","title":"跳跃扫描"}],"collapsed":true,"id":"037564fb8ea07e11","title":"优化器参数优化"},{"parent":"893091bc08c0edce","children":[],"id":"b964da2ff03b2993","title":"change buffer"}],"collapsed":false,"id":"893091bc08c0edce","title":"MySQL优化手段"},{"parent":"6745884e5159834c","children":[{"parent":"37e0cdd515ca5d2c","children":[{"parent":"c494edca28187a7b","children":[],"id":"a7d58b14bca45167","title":"主要调整客户端连接池IO任务：最大线程数量&nbsp;=&nbsp;CPU核数&nbsp;*&nbsp;2&nbsp;&nbsp;（如果SSD就+1，线程数量过多会导致上下文切换）"}],"collapsed":true,"id":"c494edca28187a7b","title":"连接层调优"},{"parent":"37e0cdd515ca5d2c","children":[{"parent":"68ca441b4f0cf294","children":[],"id":"f69d5484be965ed7","title":"DBA调整"}],"collapsed":true,"id":"68ca441b4f0cf294","title":"参数调优"},{"parent":"37e0cdd515ca5d2c","children":[{"parent":"a6ec346a481bdb32","children":[],"id":"e797e7016ed04d86","title":"表中不易存放太多字段，热、冷字段分表"},{"parent":"a6ec346a481bdb32","children":[],"id":"dc4201c13e20a927","title":"满足三范式，某些场景下可以冗余取代联表"},{"parent":"a6ec346a481bdb32","children":[],"id":"74cddd7a1a6fff0e","title":"主键空间尽量小，插入尽量升序"},{"parent":"a6ec346a481bdb32","children":[],"id":"13ae2d7127116456","title":"实时性不高，访问量大"},{"parent":"a6ec346a481bdb32","children":[],"id":"7dc9239417b3772a","title":"字段选型"}],"collapsed":true,"id":"a6ec346a481bdb32","title":"表结构调优"},{"parent":"37e0cdd515ca5d2c","children":[{"parent":"360703113fff","children":[{"parent":"11a3f04276bafba8","children":[{"parent":"dc0d7ffe02d28bd1","children":[],"id":"bc6c7d2e498dffac","title":"排查查询慢的拼接是索引失效？SQL问题？还是数据量太大？"}],"id":"dc0d7ffe02d28bd1","title":"查询慢"},{"parent":"11a3f04276bafba8","children":[{"parent":"532e5a30f476e32e","children":[],"id":"072792d4b8f17ffe","title":"排查阻塞原因，调整业务，避免出现行锁、死锁阻塞等"}],"id":"532e5a30f476e32e","title":"阻塞慢"}],"id":"11a3f04276bafba8","title":"调优方向"},{"parent":"360703113fff","children":[{"parent":"56c96224b54b","children":[],"id":"ac68a8a5fe52","title":"explain 查看SQL执行计划"},{"parent":"56c96224b54b","children":[],"id":"cef9f0262d90","title":"optimizer_trace 查看SQL所有执行计划的预估开销"},{"parent":"56c96224b54b","children":[],"id":"26606a2132cf","title":"show profiles 查看上条SQL各个阶段耗时"}],"collapsed":true,"id":"56c96224b54b","title":"排查工具"}],"collapsed":true,"id":"360703113fff","title":"慢查询调优"},{"parent":"37e0cdd515ca5d2c","children":[{"parent":"cbfe37e0f76e8925","children":[{"parent":"2e41137900bb5c59","children":[],"id":"485fb48081ae5f93","title":"MQ异步削峰值 缓解写压力"},{"parent":"2e41137900bb5c59","children":[],"id":"3f47116a6c94e93a","title":"分布式缓存 缓解读压力"}],"id":"2e41137900bb5c59","title":"引入中间件"},{"parent":"cbfe37e0f76e8925","children":[{"parent":"5fae520b37264bb0","children":[],"id":"8e2be23ee1e80ac6","title":"主从集群"},{"parent":"5fae520b37264bb0","children":[],"id":"652aec69f3cf2dce","title":"分库分表"}],"id":"5fae520b37264bb0","title":"数据库架构升级"}],"collapsed":true,"id":"cbfe37e0f76e8925","title":"架构优化"},{"parent":"37e0cdd515ca5d2c","children":[{"parent":"43bfb073a6ea","children":[{"parent":"ea64d59ff832","children":[],"id":"1ba48aee086d","title":"64位、支持大内存的前提；多核，处理脏页刷新、redolog刷新、回收undo log等"}],"id":"ea64d59ff832","title":"CPU"},{"parent":"43bfb073a6ea","children":[{"parent":"1af1df70bd86","children":[],"id":"430e3511ba27","title":"提升缓冲池容量；提升命中率（缓冲读/缓冲读+磁盘读+预读）"}],"id":"1af1df70bd86","title":"内存"},{"parent":"43bfb073a6ea","children":[{"parent":"99063a60f621","children":[],"id":"466ec8e3b199","title":"机械硬盘：寻道、转速是指标，顺序读比随机读快"},{"parent":"99063a60f621","children":[],"id":"923321037904","title":"固态硬盘：读写比机械快，基于闪存，修改/删除block时需要擦除，block有擦除限制，利用读多写少"}],"id":"99063a60f621","title":"硬盘"},{"parent":"43bfb073a6ea","children":[{"parent":"74244d429bfc","children":[{"parent":"f7329c12d461","children":[],"id":"48f1de4e9f2f","title":"水平扩展，将数据分散到不同磁盘，无冗余镜像，不可靠"}],"id":"f7329c12d461","title":"RAID 0"},{"parent":"74244d429bfc","children":[{"parent":"6cacc1700ec6","children":[],"id":"2f7a92da3754","title":"垂直扩展，将数据做冗余镜像，可靠，浪费空间"}],"id":"6cacc1700ec6","title":"RAID 1"},{"parent":"74244d429bfc","children":[{"parent":"eae185ca812e","children":[],"id":"cd6bca3f8d7c","title":"先将数据分散到不同组磁盘再做镜像"}],"id":"eae185ca812e","title":"RAID 01"},{"parent":"74244d429bfc","children":[{"parent":"c59ce7a42329","children":[],"id":"446ef0c33996","title":"向对数据做冗余镜像再分散到不同磁盘"}],"id":"c59ce7a42329","title":"RAID 10"},{"parent":"74244d429bfc","children":[],"id":"e72f783bcb68","title":"RAID&nbsp;Write&nbsp;Back：写入磁盘时，先写到缓存中，延迟堆积到了再写到磁盘；如果发生断电会用备份电池将缓存数据写入磁盘，备份电池充电时则默认不开启该功能"}],"collapsed":true,"id":"74244d429bfc","title":"RAID 磁盘阵列"}],"collapsed":true,"id":"43bfb073a6ea","title":"机器调优"}],"collapsed":true,"id":"37e0cdd515ca5d2c","title":"性能调优"},{"parent":"6745884e5159834c","children":[{"parent":"0fb7d3211fe2","children":[{"parent":"8de5349a5add","children":[],"id":"17921d7b3545","title":"减少请求，将同个页面的某些请求查询SQL合并"},{"parent":"8de5349a5add","children":[],"id":"cdd46717febb","title":"缓存数据，会话保存，避免无效刷新"}],"id":"8de5349a5add","title":"前端优化"},{"parent":"0fb7d3211fe2","children":[{"parent":"276a7b90e9c2","children":[],"id":"21a9162333f2","title":"分布式缓存、本地缓、网关入口缓存..."}],"id":"276a7b90e9c2","title":"多级缓存优化"},{"parent":"0fb7d3211fe2","children":[{"parent":"0f59f20924fa","children":[],"id":"8f979dc9afba","title":"字段优化"},{"parent":"0f59f20924fa","children":[],"id":"5c708d6d9ff9","title":"表结构优化"},{"parent":"0f59f20924fa","children":[],"id":"9e1def0f4808","title":"索引优化"},{"parent":"0f59f20924fa","children":[{"parent":"24b388048418","children":[],"id":"e16f258b5475","title":"读写分离"},{"parent":"24b388048418","children":[],"id":"0770e26b9479","title":"分库"},{"parent":"24b388048418","children":[],"id":"e97fd41060d6","title":"分表"}],"id":"24b388048418","title":"架构优化"}],"id":"0f59f20924fa","title":"数据库优化"}],"collapsed":true,"id":"0fb7d3211fe2","title":"千万数据量优化查询"}],"id":"6745884e5159834c","title":"优化"}],"collapsed":true,"id":"01f19ba153ac88a7","title":"索引查询篇"},{"parent":"faf2d8c3d9ea5b27","children":[{"parent":"0f9ad0c6e18a30fa","children":[{"parent":"cc1ce95e60f8d572","children":[{"parent":"92f4ce066c2c6527","children":[{"parent":"f3341c8872426048","image":{"w":75,"h":21,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca04f6601fd6363e653fb?e=1706864223&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:XV1ZGRRxwSvDYJa9ZA0kkki14zs=","direction":"up"},"children":[{"parent":"344c34dd8549b386","children":[],"id":"9fa52576c0e590c7","title":"控制块"},{"parent":"344c34dd8549b386","children":[],"id":"41eb26cf75c8cb7d","title":"缓存页"},{"parent":"344c34dd8549b386","children":[],"id":"baba2535d1787f91","title":"碎片"}],"collapsed":false,"id":"344c34dd8549b386","title":"chunk&nbsp;"},{"parent":"f3341c8872426048","image":{"w":41,"h":27,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca06021db3620e31b4e3e?e=1706864240&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Q1hGqkllCavqbwsVPNhsV1fV41Y=","direction":"up"},"children":[],"id":"98cc2ba169014bb0","title":"缓冲池大小 = 缓冲池实例数量 * chunk数量&nbsp;"},{"parent":"f3341c8872426048","image":{"w":52,"h":23,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca06f8273dc120894fec4?e=1706864255&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:NJ8f7dpx_FHMjyUMcVIjCT3tB7w=","direction":"up"},"children":[{"parent":"a95197595e46f095","children":[{"parent":"b9b85698a86055e3","children":[],"id":"d5fa2ea19c5f551d","title":"空闲"},{"parent":"b9b85698a86055e3","children":[],"id":"ed951f503c2dd39f","title":"已使用页干净"},{"parent":"b9b85698a86055e3","children":[],"id":"56763270ad04512b","title":"已使用脏页"}],"collapsed":true,"id":"b9b85698a86055e3","title":"缓存页"},{"parent":"a95197595e46f095","children":[{"parent":"766d0adf4a742aa6","children":[],"id":"01a64f7ee5c0c737","title":"空闲链表"},{"parent":"766d0adf4a742aa6","children":[],"id":"8bae42885047212c","title":"脏页链表"},{"parent":"766d0adf4a742aa6","children":[{"parent":"fc84657c6dee6c7b","children":[],"id":"a1edd2ef5ff36b0c","title":"将链表分为冷(old)热(young)数据区，初次访问的页只放到old区的头部"},{"parent":"fc84657c6dee6c7b","children":[],"id":"ffee524b6f674541","title":"全表扫描可能多次访问同一页，所以在规定时间内多次访问某页，不会把它对应控制块放到young区头部"},{"parent":"fc84657c6dee6c7b","children":[],"id":"a99c01984dc52394","title":"如果页对应控制块就在young头部附近就不移动（规定在1/4）"}],"collapsed":false,"id":"fc84657c6dee6c7b","title":"LRU链表"}],"collapsed":true,"id":"766d0adf4a742aa6","title":"链表管理"}],"id":"a95197595e46f095","title":"管理"}],"collapsed":true,"id":"f3341c8872426048","title":"缓冲池"},{"parent":"92f4ce066c2c6527","children":[{"parent":"61c5b8e117767816","children":[{"parent":"44c1ee96c66cf006","image":{"w":94,"h":19,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca094ea71e5432979db52?e=1706864292&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:w-Q2EKOcXEf38VlYPCOnojLaEkw=","direction":"up"},"children":[],"id":"79e2e0bdf40b40c8","title":"环形文件"},{"parent":"44c1ee96c66cf006","image":{"w":74,"h":31,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca09c21db3620e31b4e49?e=1706864300&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:wGeApn-LXoFp_wrBmAno0aCHbUg=","direction":"up"},"children":[{"parent":"ba8d482aae70183c","children":[],"id":"a50140df4ad06a91","title":"交替写入，组提交"},{"parent":"ba8d482aae70183c","image":{"w":59,"h":45,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca0d867bb713334ad6018?e=1706864360&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Rr0hXetsS0dNmDaZ7j1RF-QK3ik=","direction":"up"},"children":[],"id":"d050feaec3162706","title":"先write再fsync"}],"id":"ba8d482aae70183c","title":"redo log buffer"}],"id":"44c1ee96c66cf006","title":"redo log"},{"parent":"61c5b8e117767816","children":[{"parent":"039a21e06876fec8","children":[],"id":"0066489725d07e7d","title":"两阶段提交"}],"id":"039a21e06876fec8","title":"bin log"},{"parent":"61c5b8e117767816","children":[{"parent":"8b2077503bc80dcf","children":[],"id":"9bcb21fb3d5ad619","title":"保证页的完整"}],"id":"8b2077503bc80dcf","title":"double write"},{"parent":"61c5b8e117767816","image":{"w":39,"h":16,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65bca08a293e510df6cc94e6?e=1706864282&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ERE8B1JTrILAU_Deua8crv0xwKM=","direction":"up"},"children":[{"parent":"47a02c0847b591d8","children":[],"id":"0d8494b8082ca550","title":"脏页刷盘"}],"id":"47a02c0847b591d8","title":"checkpoint"}],"collapsed":false,"id":"61c5b8e117767816","title":"持久化实现"},{"parent":"92f4ce066c2c6527","children":[{"parent":"4eee84316e4c7d67","children":[{"parent":"0bebd42c3642a064","children":[],"id":"e1315e348e75699c","title":"redo log已满，用被动等待checkpoint脏页刷盘"},{"parent":"0bebd42c3642a064","children":[],"id":"f059405a43dc30fb","title":"缓冲池已满，old区末尾页为脏页，被动等待脏页刷盘"}],"id":"0bebd42c3642a064","title":"被动"},{"parent":"4eee84316e4c7d67","children":[{"parent":"a9fd164dc49af682","children":[],"id":"606767aeeea67709","title":"定时脏页刷盘"},{"parent":"a9fd164dc49af682","children":[],"id":"f5d2844c6f5eae1e","title":"关机前脏页刷盘"}],"id":"a9fd164dc49af682","title":"主动"}],"collapsed":false,"id":"4eee84316e4c7d67","title":"脏页刷盘"}],"collapsed":false,"id":"92f4ce066c2c6527","title":"持久性"},{"parent":"cc1ce95e60f8d572","children":[{"parent":"01945c1fdbe024ae","image":{"w":51,"h":18,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65be10611e8cfe4d5e7e8602?e=1706958449&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Z6J0gmzxLryi0gaKDR4fe_w8fh4=","direction":"up"},"children":[],"id":"c88ea5d5a9f50a19","title":"回滚指针"},{"parent":"01945c1fdbe024ae","children":[],"id":"2c1be2148cb57c0f","title":"undo log"},{"parent":"01945c1fdbe024ae","image":{"w":43,"h":28,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65be10782466073b1daab521?e=1706958472&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:jy2rYv4ipJjuxpg59RpzgQ-CK_o=","direction":"up"},"children":[],"id":"5b9cb060ad67ec16","title":"版本链"}],"collapsed":true,"id":"01945c1fdbe024ae","title":"原子性"},{"parent":"cc1ce95e60f8d572","children":[{"parent":"564e2c9be23bb6d3","children":[{"parent":"1e502d3d3576daa4","children":[],"id":"b6e940cda78c0800","title":"脏写"},{"parent":"1e502d3d3576daa4","children":[],"id":"e3843bb2798dee92","title":"脏读"},{"parent":"1e502d3d3576daa4","children":[],"id":"1bd0552ffe6c2c2e","title":"不可重复读"},{"parent":"1e502d3d3576daa4","children":[],"id":"2226dfa22ad49e81","title":"幻读"}],"collapsed":false,"id":"1e502d3d3576daa4","title":"隔离性问题"},{"parent":"564e2c9be23bb6d3","children":[{"parent":"38c821093689e510","children":[],"id":"a191ec453f0625d8","title":"读未提交 RU"},{"parent":"38c821093689e510","children":[],"id":"13a6d2bfb0851207","title":"读已提交 RC"},{"parent":"38c821093689e510","children":[],"id":"03dc8b26ed1de5e7","title":"可重复读 RR"},{"parent":"38c821093689e510","children":[],"id":"a21710f7dc093716","title":"串行化 S"}],"collapsed":false,"id":"38c821093689e510","title":"隔离级别"},{"parent":"564e2c9be23bb6d3","children":[{"parent":"45ff416ed8ff86c4","children":[],"id":"8e55a872730c9a95","title":"事务ID"},{"parent":"45ff416ed8ff86c4","children":[],"id":"6ce66a9aae0a8bfb","title":"版本链"},{"parent":"45ff416ed8ff86c4","image":{"w":49,"h":21,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65be108b39acfe32a8f7a943?e=1706958491&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:VL6PtNGeN9FhSkrw6Qnx5LG7nl8=","direction":"up"},"children":[{"parent":"2c911985fbd1221c","children":[{"parent":"dbfa3e5cd9f99122","children":[],"id":"a4e35b5db3829b29","title":"最小事务id"},{"parent":"dbfa3e5cd9f99122","children":[],"id":"84c03f81fe03213c","title":"最大事务id"},{"parent":"dbfa3e5cd9f99122","children":[],"id":"e843d8bb09fe97fb","title":"活跃事务列表"}],"id":"dbfa3e5cd9f99122","title":"记录内容"},{"parent":"2c911985fbd1221c","note":"1.  **如果read view的最小事务id大于该记录的事务id，说明该记录的事务已经提交了，那么是可以查看的**\n2.  **如果read view的最大事务id小于该记录的事务id，说明该记录的事务在当前事务开启后才开始，那么无法查看**\n3.  **如果该记录id在read view最小、大事务id之间，那么要查看当前活跃事务列表，如果在列表中，说明该列的事务活跃（还未结束），则无法查看；反之则可以查看**\n4.  **如果记录的事务id是当前事务，则可以查询**（当前事务执行的，当然可以查看）\n\n**当该版本的记录无法查看时，就会遍历版本链继续向下一条记录使用该规则**","children":[],"id":"9d0b7aabe6ffd351","title":"比较规则"}],"id":"2c911985fbd1221c","title":"read view"}],"collapsed":false,"id":"45ff416ed8ff86c4","title":"MVCC"}],"collapsed":true,"id":"564e2c9be23bb6d3","title":"隔离性"},{"parent":"cc1ce95e60f8d572","children":[{"parent":"e783356286a32f87","children":[],"id":"4ccf74b3517074f9","title":"通过原子性、隔离性、持久性等手段保证数据一致性"}],"collapsed":true,"id":"e783356286a32f87","title":"一致性"}],"collapsed":true,"id":"cc1ce95e60f8d572","title":"ACID"},{"parent":"0f9ad0c6e18a30fa","children":[{"parent":"c6ed73aea3a20169","children":[],"id":"e68452fc14cdc76f","title":"加锁情况与隔离级别、SQL语句、扫描范围、使用索引、MySQL版本都有关"},{"parent":"c6ed73aea3a20169","children":[{"parent":"aed41b24730a68a1","children":[{"parent":"dee868e1a319efed","children":[],"id":"6103f08e9c8c7d91","title":"使用read view被称为一致性读"},{"parent":"dee868e1a319efed","children":[{"parent":"3d3168ad4382155c","children":[],"id":"9512d3ec23a7905e","title":"RU 不加锁"},{"parent":"3d3168ad4382155c","children":[],"id":"a914c51dcf64a122","title":"RC 不加锁，每次读生成read view"},{"parent":"3d3168ad4382155c","children":[],"id":"03784d2c543152c4","title":"RR 不加锁，第一次读生成read view"},{"parent":"3d3168ad4382155c","children":[],"id":"43d48c952f31cc32","title":"S 自动提交使用read view（因为整个事务只有这个读），不自动提交使用S锁next key"}],"id":"3d3168ad4382155c","title":"select"}],"id":"dee868e1a319efed","title":"普通读（一致性读）"},{"parent":"aed41b24730a68a1","children":[{"parent":"5db21e6d9b0dbe55","children":[{"parent":"f73c6e66241ba2b4","children":[],"id":"ccc75e811bab2f5b","title":"先读取记录最新版本，如果不满足修改条件则跳过（不加锁），尽量让update少被阻塞"}],"id":"f73c6e66241ba2b4","title":"隔离级别不大于RC的update"}],"id":"5db21e6d9b0dbe55","title":"半一致性读"},{"parent":"aed41b24730a68a1","children":[{"parent":"bbf5054f0d06663c","children":[],"id":"97dc79d849b853cc","title":"select X/S锁"},{"parent":"bbf5054f0d06663c","children":[{"parent":"da05eebb2b3f58fa","children":[],"id":"7ba6ed0bf6480ce5","title":"记录字段空间未改变（原地修改）锁定读"},{"parent":"da05eebb2b3f58fa","children":[],"id":"cfe1251ff5783fd9","title":"记录字段空间改变、主键值被改变（先删后增）定位位置的过程是锁定读，后续新增隐式锁保护"}],"id":"da05eebb2b3f58fa","title":"update"},{"parent":"bbf5054f0d06663c","children":[],"id":"e7d092e8fb6613f8","title":"delete"}],"id":"bbf5054f0d06663c","title":"锁定读"},{"parent":"aed41b24730a68a1","children":[{"parent":"edb4873045611d33","children":[{"parent":"435db17d2c55ebc9","children":[{"parent":"b819acfa6651ef15","children":[],"id":"756e5d83f24b72fb","title":"默认使用事务ID隐式锁，不阻塞"},{"parent":"b819acfa6651ef15","children":[],"id":"7a912f6b661bdd6c","title":"遇到gap锁阻塞等待，生成插入意向锁"}],"id":"b819acfa6651ef15","title":"正常情况下不加锁"},{"parent":"435db17d2c55ebc9","children":[{"parent":"9452bb3cee124b76","children":[{"parent":"923e0cb2a1837b88","children":[],"id":"97eeb89af6969e97","title":"插入的聚集索引记录包含了一个trx_id，然后其他事务要获取该记录的x锁或者s锁的时候，会判断trx_id是不是当前活跃事务。如果是帮该记录创建一个x锁，然后为自己创建一个锁，进入等待。"}],"id":"923e0cb2a1837b88","title":"隐式X的record锁，冲突时才转换为显示锁"},{"parent":"9452bb3cee124b76","children":[{"parent":"985455922ca4df2a","children":[],"id":"b0007f8e14de5412","title":"RU/RC 的隔离级别下加S的record"},{"parent":"985455922ca4df2a","children":[],"id":"1914adea9bc6f039","title":"RR/S 的隔离级别下加S的next-key"}],"id":"985455922ca4df2a","title":"主键"},{"parent":"9452bb3cee124b76","children":[{"parent":"ee1c9ec1d8238c72","children":[],"id":"879d82acb785799f","title":"无论什么隔离级别都加S的next-key（RC情况下也是，不加会重复）"}],"id":"ee1c9ec1d8238c72","title":"唯一二级索引"},{"parent":"9452bb3cee124b76","children":[],"id":"848aeca143e505a7","title":"如果 使用ON&nbsp;DUPLICATE&nbsp;KEY update 子句时，上述的S锁要换成X锁（因为有修改）"}],"collapsed":false,"id":"9452bb3cee124b76","title":"遇到重复冲突（主键/唯一二级索引）"},{"parent":"435db17d2c55ebc9","children":[{"parent":"8709a45c35f092c6","children":[],"id":"4ae3114363bf41e8","title":"子表外键可以在父表中找到，父表加S的record锁"},{"parent":"8709a45c35f092c6","children":[],"id":"0d6f864387838cbe","title":"子表外键不能在父表中找到，RC不加锁、RR在下一个记录加gap锁"}],"id":"8709a45c35f092c6","title":"外键检查"}],"id":"435db17d2c55ebc9","title":"insert"}],"id":"edb4873045611d33","title":"新增&nbsp;"}],"collapsed":true,"id":"aed41b24730a68a1","title":"SQL 语句&nbsp;"},{"parent":"c6ed73aea3a20169","children":[{"parent":"74b6b601d0129ae6","children":[{"parent":"be2b55a942c3ed43","children":[],"id":"1d25fa13e4d8f187","title":"对于锁定读来说，会根据查询条件寻找符合条件的记录进行锁定"},{"parent":"be2b55a942c3ed43","children":[],"id":"7bbc45541401276f","title":"如果使用update 并且需要修改的列为二级索引的列，则还会去二级索引中进行锁定（delete同理，删除所有索引上该记录）"}],"id":"be2b55a942c3ed43","title":"聚簇索引"},{"parent":"74b6b601d0129ae6","children":[{"parent":"3bf7e75165a1d14b","children":[],"id":"091a6df04b12756b","title":"如果使用二级索引则先对二级索引记录进行加锁再回表对聚簇索引记录进行加锁"},{"parent":"3bf7e75165a1d14b","children":[],"id":"f37353dee67d93ec","title":"在这种场景下，对索引加锁顺序不同会造成死锁，比如说一个SQL先加二级索引再加聚簇索引；另一个SQL先加聚簇索引再加二级索引"}],"id":"3bf7e75165a1d14b","title":"二级索引"}],"collapsed":false,"id":"74b6b601d0129ae6","title":"使用索引"},{"parent":"c6ed73aea3a20169","children":[{"parent":"d08456823981e609","children":[{"parent":"99127181ea712204","children":[],"id":"c306ad9977f6a332","title":"RC使用record&nbsp;"},{"parent":"99127181ea712204","children":[],"id":"fc5f9e0b4f9991ec","title":"RR&nbsp;使用next&nbsp;key&nbsp;（加锁区间为左开右闭）"}],"id":"99127181ea712204","title":"RC、RR下的加锁"},{"parent":"d08456823981e609","children":[{"parent":"63637499af9659f2","children":[{"parent":"58c79ccec8ea0aea","children":[],"id":"78147c4e3bcc890b","title":"该记录区间加间隙锁"}],"id":"58c79ccec8ea0aea","title":"找不到记录"},{"parent":"63637499af9659f2","children":[{"parent":"ef0665aa29a284a9","children":[],"id":"8e7aa52a2fb29720","title":"唯一索引：间隙锁退化为记录锁 （有且只有一条记录）"},{"parent":"ef0665aa29a284a9","children":[],"id":"e1b2ae5114cdb3bb","title":"非唯一索引：无法判断记录数量，类似范围查找，直到找到第一条不满足条件的记录，临键锁退化为间隙锁"}],"id":"ef0665aa29a284a9","title":"如果能找到记录"}],"id":"63637499af9659f2","title":"等值查询"},{"parent":"d08456823981e609","children":[{"parent":"3e41263abab46dbc","children":[{"parent":"4499233c1c1bdda2","children":[],"id":"f7a7244c03ac7730","title":"5.7中唯一索引也会查询到不满足条件的第一条记录，8.0修复"}],"id":"4499233c1c1bdda2","title":"一直查询到不满足条件的第一条记录然后临键锁退化为间隙锁"},{"parent":"3e41263abab46dbc","children":[],"id":"053f064dc84d9538","title":"等值查询的非唯一索引 就可以 看成 范围查询"}],"id":"3e41263abab46dbc","title":"范围查询"},{"parent":"d08456823981e609","children":[{"parent":"77167f61c030ee65","children":[],"id":"80de38121dba6e36","title":"要使用什么索引就在那个索引上加锁"},{"parent":"77167f61c030ee65","children":[],"id":"04ac7bd56b7d7375","title":"遍历到哪条记录，就在哪条记录上加锁"}],"id":"77167f61c030ee65","title":"索引加锁"},{"parent":"d08456823981e609","children":[{"parent":"8e4d328929b5bf69","children":[],"id":"e5c7faf14f33e8f1","title":"RR遍历到的记录，即使不满足查询条件也不会释放锁，事务提交才释放"},{"parent":"8e4d328929b5bf69","children":[],"id":"cd5ff89039cd5531","title":"RC遍历到的记录，不满足条件的记录会释放锁"}],"id":"8e4d328929b5bf69","title":"RC、RR下的释放锁"}],"collapsed":false,"id":"d08456823981e609","title":"细节加锁规则"}],"collapsed":true,"id":"c6ed73aea3a20169","title":"Innodb 行锁加锁规则"}],"id":"0f9ad0c6e18a30fa","title":"事务日志与锁篇"},{"parent":"faf2d8c3d9ea5b27","children":[{"parent":"b301c3163e074c31","lineStyle":{"lineType":"curve","underLine":true,"lineWidth":3},"children":[{"parent":"6c27e2513afcf667","children":[{"parent":"76a5617a03c5ebf3","children":[{"parent":"0172a420f787b6a0","children":[{"parent":"bac5a98ac7fbea14","children":[{"parent":"605dbc3705a50e65","children":[],"id":"a680a59ed3ea3e4f","title":"部分场景有问题"}],"id":"605dbc3705a50e65","title":"statement 记录SQL"},{"parent":"bac5a98ac7fbea14","children":[{"parent":"b0aa949480ab9bde","children":[],"id":"0a86b27655502e32","title":"批量数据修改 性能差"}],"id":"b0aa949480ab9bde","title":"row 记录数据"},{"parent":"bac5a98ac7fbea14","children":[],"id":"dfd22913a46aec20","title":"mixed 混合"}],"id":"bac5a98ac7fbea14","title":"类型"},{"parent":"0172a420f787b6a0","children":[{"parent":"9a3b5c8fce7cbaa6","children":[],"id":"3bc4537e8d039f40","title":"一般不使用statement，因为主从会造成数据不一致"},{"parent":"9a3b5c8fce7cbaa6","children":[],"id":"31232fd65b7c8992","title":"使用mixed或row，row可以方便回滚数据，即使误操作数据也可以进行回滚"}],"id":"9a3b5c8fce7cbaa6","title":"选择"}],"collapsed":true,"id":"0172a420f787b6a0","title":"binlog"},{"parent":"76a5617a03c5ebf3","image":{"w":48,"h":28,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c8ae0744d527aafbe33f?e=1708512958&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:lqorQRF9JBG87HhFLngOWtm4GAQ=","direction":"up"},"children":[{"parent":"7428e18b8bb9dc4f","children":[],"id":"ae13a319f4364c90","title":"主节点dump线程监听binlog日志变动并通知从节点复制"},{"parent":"7428e18b8bb9dc4f","children":[],"id":"f952f83eb13f4b23","title":"从节点IO线程拉取日志复制写入中继日志relay log中"},{"parent":"7428e18b8bb9dc4f","children":[],"id":"331d013fa98c01de","title":"从节点SQL线程根据中继日志relay log恢复数据"}],"collapsed":true,"id":"7428e18b8bb9dc4f","title":"流程"},{"parent":"76a5617a03c5ebf3","children":[{"parent":"7b59055008436399","children":[{"parent":"5de4bd7ec3951a21","children":[{"parent":"5a77def04fdba9ef","children":[],"id":"632001b75cf2b635","title":"所有从节点响应，主节点才响应"},{"parent":"5a77def04fdba9ef","children":[],"id":"304cfad055894e9c","title":"性能慢 ，数据强一致"}],"id":"5a77def04fdba9ef","title":"同步复制"},{"parent":"5de4bd7ec3951a21","children":[{"parent":"de5af82c38ea218a","children":[],"id":"ead5ef34ee3eff4a","title":"通知完从节点，主节点就响应"},{"parent":"de5af82c38ea218a","children":[],"id":"50c2b1eb52c33c22","title":"性能最快，主从延迟时数据不一致"}],"id":"de5af82c38ea218a","title":"异步复制"},{"parent":"5de4bd7ec3951a21","children":[{"parent":"ad3be9b044c7f3bd","children":[],"id":"cc803cae31ae0a0f","title":"只要有一个从节点响应，主节点就响应"},{"parent":"ad3be9b044c7f3bd","children":[],"id":"2d783286b0a521a7","title":"存在网络问题（超时）切换为异步复制，网络正常后再切回来"}],"id":"ad3be9b044c7f3bd","title":"半同步复制"},{"parent":"5de4bd7ec3951a21","children":[{"parent":"4666f5fec7f2156e","children":[],"id":"9703df22b428f9e5","title":"半同步会先提交事务再等从节点响应，此时宕机会存在数据一致性问题"},{"parent":"4666f5fec7f2156e","children":[],"id":"a3be329f6b4c40af","title":"在半同步基础上，主节点收到响应才提交事务"}],"id":"4666f5fec7f2156e","title":"增强半同步复制"},{"parent":"5de4bd7ec3951a21","children":[{"parent":"8bc34b7efb9ba234","children":[],"id":"eb0f7b554f930a7a","title":"延时恢复数据"}],"id":"8bc34b7efb9ba234","title":"延迟复制"}],"collapsed":true,"id":"5de4bd7ec3951a21","title":"方式"},{"parent":"7b59055008436399","children":[{"parent":"22a908c7d364ea91","children":[],"id":"0ec7e1d6fd3bda65","title":"数据一致性： 同步 》 无损 》 半同步 》 异步"},{"parent":"22a908c7d364ea91","children":[],"id":"912ed6a926c373da","title":"性能：异步 》 半同步 》 无损 》 同步"}],"collapsed":true,"id":"22a908c7d364ea91","title":"对比"}],"id":"7b59055008436399","title":"不同方式与对比"}],"collapsed":true,"id":"76a5617a03c5ebf3","title":"主从复制"},{"parent":"6c27e2513afcf667","children":[{"parent":"cf42112f73a605e6","children":[],"id":"2e4528c91bd70239","title":"主从延迟时间&nbsp;seconds_behind_master"},{"parent":"cf42112f73a605e6","children":[{"parent":"6211c52a7bdb4f64","image":{"w":94,"h":25,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c8f70744d527aafbe354?e=1708513031&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:DeGool2q-UMqSGyYolW4LGqYbho=","direction":"up"},"children":[{"parent":"d447d807b6d7e87c","children":[],"id":"2f462c4a57129e47","title":"完成数据同步才切换，中间状态只读不写，从机延迟时间要小于一定阈值"}],"collapsed":true,"id":"d447d807b6d7e87c","title":"可靠"},{"parent":"6211c52a7bdb4f64","children":[{"parent":"b71c0294d8200904","children":[{"parent":"8acf500a8bc0551c","image":{"w":90,"h":50,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c95470c9a07bf622e98d?e=1708513124&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:OEsEBeBl2iO0xENzIsx-K6C5bZA=","direction":"up"},"children":[],"id":"ecf344e870ce673a","title":"statement/mixed情况下主键混乱"},{"parent":"8acf500a8bc0551c","image":{"w":98,"h":48,"url":"https://cdn.processon.com/5e1d083ae4b0c3908f85f937-65d5c9930744d527aafbe373?e=1708513187&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ptnM6zURarz8tUviLpXoZ9-2OGk=","direction":"up"},"children":[],"id":"7d8e744e6ab6d99d","title":"row情况下报错（提前暴露问题）"}],"id":"8acf500a8bc0551c","title":"直接完成切换，一边处理请求一边数据同步"}],"collapsed":true,"id":"b71c0294d8200904","title":"可用"}],"collapsed":false,"id":"6211c52a7bdb4f64","title":"策略"},{"parent":"cf42112f73a605e6","children":[{"parent":"d59beb801eb9340f","children":[],"id":"819c8a6d6e1169f0","title":"主从切换时 基于全局事务ID 无需指定恢复数据点"}],"collapsed":true,"id":"d59beb801eb9340f","title":"GTID复制"}],"collapsed":true,"id":"cf42112f73a605e6","title":"主从切换"},{"parent":"6c27e2513afcf667","children":[{"parent":"f200c40a818f4350","children":[{"parent":"a365dac1703c8d7b","children":[{"parent":"01895dc1e8394cd4","children":[],"id":"3c6f0b3cbb23be45","title":"主机频繁接收写，从机需要同步"},{"parent":"01895dc1e8394cd4","children":[],"id":"6cc16bd045630ba9","title":"从机频繁接收读 高QPS"}],"collapsed":true,"id":"01895dc1e8394cd4","title":"从机压力大"},{"parent":"a365dac1703c8d7b","children":[],"id":"3807aecae5581b66","title":"大事务"},{"parent":"a365dac1703c8d7b","children":[],"id":"2eb99a39ca073ca4","title":"从机配置差，多台从机共用一台机器"},{"parent":"a365dac1703c8d7b","children":[],"id":"4bc8293c481c3ac6","title":"主从参数不一致（缓冲池、IO等参数）"},{"parent":"a365dac1703c8d7b","children":[],"id":"3c7fd0c0f43c443a","title":"从机本身就是延迟复制"}],"id":"a365dac1703c8d7b","title":"来源"},{"parent":"f200c40a818f4350","children":[{"parent":"0a4cad0ea15ec6c0","children":[],"id":"a50461fb17261ac6","title":"canal 监听 （通知改为监听）"},{"parent":"0a4cad0ea15ec6c0","children":[],"id":"a44b2a6f2a8a9bed","title":"调整从机IO参数 增强IO能力"},{"parent":"0a4cad0ea15ec6c0","children":[{"parent":"72902eac668d1d03","children":[{"parent":"4ce96d7b68f1e2f3","children":[],"id":"214bf980cecef0c0","title":"粒度为库，如果只有一个库或热点都在一个库时还是单线程"}],"id":"4ce96d7b68f1e2f3","title":"5.6 并行复制"},{"parent":"72902eac668d1d03","children":[{"parent":"86482893fb739da8","children":[],"id":"4098058f6032e063","title":"基于组提交，同批事务经过redo log&nbsp;prepare阶段就不会有锁冲突，可以并行执行"},{"parent":"86482893fb739da8","children":[{"parent":"790a9b6ffe36cf17","children":[],"id":"758fd8526daeb044","title":"binlog_group_commit_sync_delay&nbsp;参数，表示延迟多少微秒后才调用&nbsp;fsync"},{"parent":"790a9b6ffe36cf17","children":[],"id":"b25e5c4556dda75c","title":"binlog_group_commit_sync_no_delay_count&nbsp;参数，表示累积多少次以后才调用&nbsp;fsync。"}],"id":"790a9b6ffe36cf17","title":"可以通过调整参数 故意拉长组提交时间，拉慢主机速度，加快从机恢复速度"}],"id":"86482893fb739da8","title":"5.7 并行复制"},{"parent":"72902eac668d1d03","children":[{"parent":"2b626f4f8af9721f","children":[],"id":"5d5a40d453d101c8","title":"COMMIT_ORDER，表示的就是前面介绍的，根据同时进入&nbsp;prepare&nbsp;和&nbsp;commit&nbsp;来判断是否可以并行的策略。"},{"parent":"2b626f4f8af9721f","children":[],"id":"436ace17bf82cc2d","title":"WRITESET，表示的是对于事务涉及更新的每一行，计算出这一行的&nbsp;hash&nbsp;值，组成集合&nbsp;writeset。如果两个事务没有操作相同的行，也就是说它们的&nbsp;writeset&nbsp;没有交集，就可以并行。"},{"parent":"2b626f4f8af9721f","children":[],"id":"23ade65f174c4abc","title":"WRITESET_SESSION，是在&nbsp;WRITESET&nbsp;的基础上多了一个约束，即在主库上同一个线程先后执行的两个事务，在备库执行的时候，要保证相同的先后顺序。"}],"id":"2b626f4f8af9721f","title":"5.7.22 并行复制"}],"collapsed":true,"id":"72902eac668d1d03","title":"并行复制"}],"id":"0a4cad0ea15ec6c0","title":"缩短主从延迟"},{"parent":"f200c40a818f4350","children":[{"parent":"8ec2438edbaa7d6a","children":[],"id":"6cdb853ee395bf4e","title":"业务沟通"},{"parent":"8ec2438edbaa7d6a","children":[{"parent":"51b2acb271d402c2","children":[],"id":"868028ba15c11ca1","title":"大量强一致性读，主机压力大"}],"collapsed":true,"id":"51b2acb271d402c2","title":"直接查主库"},{"parent":"8ec2438edbaa7d6a","children":[{"parent":"44ff54e0fbf45aa7","children":[],"id":"e1452d5c5ae1934d","title":"查看 偏移量、GTID等信息"},{"parent":"44ff54e0fbf45aa7","children":[],"id":"45f61ec34ad70854","title":"粒度大，不靠谱"}],"collapsed":true,"id":"44ff54e0fbf45aa7","title":"等待从机没延迟"},{"parent":"8ec2438edbaa7d6a","children":[{"parent":"480dc278fab352bb","children":[],"id":"bf8fc06858b7a7dd","title":"强一致性"},{"parent":"480dc278fab352bb","children":[],"id":"33919611764327f4","title":"性能差"}],"collapsed":true,"id":"480dc278fab352bb","title":"使用同步复制"},{"parent":"8ec2438edbaa7d6a","children":[{"parent":"21ef56bed5089500","children":[],"id":"d930453ee879ade6","title":"一主一从 相当于同步复制"},{"parent":"21ef56bed5089500","children":[{"parent":"3fef1fb396b9d7c6","children":[],"id":"25e6626a43ecb75f","title":"实现复杂"},{"parent":"3fef1fb396b9d7c6","children":[{"parent":"92b807c2e1f7c415","note":"`select master_pos_wait(file, pos,[timeout])` 用于判断当前偏移量是否已经超过该位置\n\nfile 为 binlog 文件，pos 为 偏移量，timeout为等待的时间\n\n使用半同步复制时，一个从节点已经响应，其他从节点应该也是快要响应的状态，因此可以等待一段时间 50ms，100ms...\n\n如果超时则可以在业务中再去查主机，要注意如果都超时就相当于又全打在主机上\n\n通过该SQL能够以主库日志中偏移量的方式判断是否已执行该事务（已执行返回0）：\n\n1. 写操作完成时顺便获取binlog文件和偏移量的信息\n2. 携带这两个参数加上超时时间使用该SQL判断是否已执行\n3. 如果返回0（已执行）则查从机，否则查主机（注意限流）","children":[],"id":"b0adb72b934f5261","title":"判断偏移量"},{"parent":"92b807c2e1f7c415","note":"` select wait_for_executed_gtid_set(gtid_set, [timeout])`\n\nSQL的作用是判断是否已经执行GTID集合 返回0，超时返回1\n\n流程类似：\n\n1. 写操作时获取GTID集合\n2. 根据GTID集合判断从机是否已执行事务\n3. 已执行查询，否则查主库或限流","children":[],"id":"b5edd9b09750d85c","title":"判断GTID集合"}],"id":"92b807c2e1f7c415","title":"方式"}],"id":"3fef1fb396b9d7c6","title":"一主多从 需要判断事务是否重做"}],"collapsed":true,"id":"21ef56bed5089500","title":"使用半同步复制"}],"id":"8ec2438edbaa7d6a","title":"解决方案"}],"collapsed":true,"id":"f200c40a818f4350","title":"主从延迟"},{"parent":"6c27e2513afcf667","children":[{"parent":"e01cbfe7a0e89c25","children":[{"parent":"f5c9a761b4ee04a3","children":[],"id":"867b62c055a8058f","title":"读写分离"},{"parent":"f5c9a761b4ee04a3","children":[],"id":"6ae54a2e8aafdfd5","title":"多从导致主节点压力大"},{"parent":"f5c9a761b4ee04a3","children":[],"id":"30240d4f6fd5a076","title":"多读场景"}],"collapsed":true,"id":"f5c9a761b4ee04a3","title":"一主 一/多从"},{"parent":"e01cbfe7a0e89c25","children":[{"parent":"0da6c12a55ecd9ff","children":[],"id":"c7275b0de95f13ff","title":"解决 多从导致主节点压力大"},{"parent":"0da6c12a55ecd9ff","children":[],"id":"ed8e25aaafc9b74b","title":"延时更高"},{"parent":"0da6c12a55ecd9ff","children":[],"id":"d7f4879df9765684","title":"多读场景"}],"collapsed":true,"id":"0da6c12a55ecd9ff","title":"一主 多从 层级"},{"parent":"e01cbfe7a0e89c25","children":[{"parent":"34217bac1d018f76","children":[],"id":"57e8f551af19810d","title":"平摊读写"},{"parent":"34217bac1d018f76","children":[],"id":"80ef50b2a111a8cc","title":"写A读B有延时"},{"parent":"34217bac1d018f76","children":[],"id":"e606964ab260f5a3","title":"读写平分场景"},{"parent":"34217bac1d018f76","children":[{"parent":"129ac4102b1ffb8e","children":[],"id":"7d2dcc305097924d","title":"生成binlog给另一个主节点同步数据时，会造成循环同步"},{"parent":"129ac4102b1ffb8e","children":[],"id":"d15292679e027965","title":"根据server id 判断是否给另一个节点同步数据，如果id是自己说明该日志是自己发的，不同步数据"}],"id":"129ac4102b1ffb8e","title":"双主循环复制问题"}],"collapsed":true,"id":"34217bac1d018f76","title":"双主"},{"parent":"e01cbfe7a0e89c25","children":[{"parent":"bde437629897597f","children":[],"id":"8a2a9ffcb56d2cf1","title":"多主分摊写"},{"parent":"bde437629897597f","children":[],"id":"3143f37a84ccb7ff","title":"只有从有全量数据"},{"parent":"bde437629897597f","children":[],"id":"560b786cb0e27190","title":"多写场景"}],"collapsed":true,"id":"bde437629897597f","title":"多主一从"}],"collapsed":true,"id":"e01cbfe7a0e89c25","title":"主从架构"}],"collapsed":true,"id":"6c27e2513afcf667","title":"高可用"}],"id":"b301c3163e074c31","title":"架构篇"}],"collapsed":true,"id":"faf2d8c3d9ea5b27","title":"总结篇"}],"root":true,"theme":"delicate_caihong","showWatermark":false,"id":"root","title":"MySQL","lines":{"e4e289297c0e":{"startAngle":357.00520336716994,"start":{"x":"1.0","y":"0.4","index":2},"endAngle":2.380310027387922,"label":"表达式和函数 能够使用索引，但是索引拿到带有表达式和函数的条件不能快速定位记录，因此导致索引失效","pts":[{"x":754.8999938964844,"y":-38.96250915527344},{"x":592.8999938964844,"y":25.761505126953125}],"points":[{"x":11458.399993896484,"y":7211.928115844727},{"x":11346.399993896484,"y":7343.511505126953}],"realEnd":{"x":10871,"y":7323.75},"angle":2.4879367844389146,"styles":{"color":"#ffffff","lineColor":"rgb(113, 203, 45)","lineWidth":3},"from":"83860093f012","end":{"x":"1.0","y":"0.7","index":3},"id":"e4e289297c0e","realStart":{"x":10771,"y":7247.890625},"to":"c3b33b9462f5"},"a391a89c38855c94":{"startAngle":359.4554907502034,"start":{"x":"1.0","y":"0.4","index":2},"endAngle":1.2944947754572533,"label":"不完全成立，s2.m_val的记录可能有多条，导致记录会被多次加入结果集","pts":[{"x":475.140625,"y":-4.515625},{"x":482.640625,"y":10.90625}],"points":[{"x":12047,"y":10133},{"x":12035,"y":10193}],"realEnd":{"x":11804.359375,"y":10188.09375},"styles":{"color":"#ffffff","lineColor":"rgb(113, 203, 45)","lineWidth":2},"from":"03e16124f4e77541","end":{"x":"1.0","y":"0.7","index":3},"id":"a391a89c38855c94","realStart":{"x":11843.359375,"y":10134.515625},"to":"788505ff7c5bff22"},"fd3b03b684e0":{"startAngle":345.8289161855571,"start":{"x":"1.0","y":"0.0","index":2},"endAngle":356.39138574770845,"label":"redo log prepare","pts":[{"x":190.4990234375,"y":-46.5625},{"x":283.5,"y":-16.9375}],"points":[{"x":11575.3115234375,"y":9371.34375},{"x":11665.3125,"y":9490.125}],"realEnd":{"x":11444.3125,"y":9504.0625},"angle":356.5809696610096,"styles":{"color":"#ffffff","lineColor":"rgb(113, 203, 45)","lineWidth":3},"from":"32cadd9a57f8","end":{"x":"1.0","y":"0.4","index":2},"id":"fd3b03b684e0","realStart":{"x":11450.3125,"y":9402.90625},"to":"6eb6f7de9ebe"}},"version":5434,"structure":"mind_free"}},"meta":{"exportTime":"2024-03-05 23:31:59","member":"","diagramInfo":{"creator":"","created":"2021-09-25 14:40:21","modified":"2024-03-05 23:30:05","title":"MySQL","category":"mind_free"},"id":"614ec455f346fb12580b2603","type":"ProcessOn Schema File","version":"5.0"}}